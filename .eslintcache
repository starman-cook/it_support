[{"/home/starman/JavaScript/projects/itsupport/src/index.js":"1","/home/starman/JavaScript/projects/itsupport/src/App.js":"2","/home/starman/JavaScript/projects/itsupport/src/reportWebVitals.js":"3","/home/starman/JavaScript/projects/itsupport/src/Store/ApplicationPage/ApplicationPageReducer.js":"4","/home/starman/JavaScript/projects/itsupport/src/Components/ApplicationPageComponents/Logo/Logo.js":"5","/home/starman/JavaScript/projects/itsupport/src/Components/ApplicationPageComponents/WhiteButton/WhiteButton.js":"6","/home/starman/JavaScript/projects/itsupport/src/Components/ApplicationPageComponents/RedButton/RedButton.js":"7","/home/starman/JavaScript/projects/itsupport/src/Components/ApplicationPageComponents/BlueButton/BlueButton.js":"8","/home/starman/JavaScript/projects/itsupport/src/Components/ApplicationPageComponents/SocialNetworkLinks/SocialNetworkLinks.js":"9","/home/starman/JavaScript/projects/itsupport/src/Containers/ApplicationPage/ApplicationPage.js":"10","/home/starman/JavaScript/projects/itsupport/src/Components/ApplicationPageComponents/LayoutApplicationPage/LayoutApplicationPage.js":"11","/home/starman/JavaScript/projects/itsupport/src/Components/ApplicationPageComponents/PreviousApplicationMenu/PreviousApplicationMenu.js":"12","/home/starman/JavaScript/projects/itsupport/src/Components/ApplicationPageComponents/ApplicationForm/ApplicationForm.js":"13","/home/starman/JavaScript/projects/itsupport/src/Components/ApplicationPageComponents/SpecialitsWindowStatus/SpecialitsWindowStatus.js":"14","/home/starman/JavaScript/projects/itsupport/src/Components/ApplicationPageComponents/ApplicationDetails/ApplicationDetails.js":"15","/home/starman/JavaScript/projects/itsupport/src/Store/ApplicationPage/ApplicationPageActionTypes.js":"16","/home/starman/JavaScript/projects/itsupport/src/Store/ApplicationPage/ApplicationPageActions.js":"17","/home/starman/JavaScript/projects/itsupport/src/Components/ApplicationPageComponents/ApplicationStatus/ApplicationStatus.js":"18","/home/starman/JavaScript/projects/itsupport/src/Components/ApplicationPageComponents/ErrorWindow/ErrorWindow.js":"19","/home/starman/JavaScript/projects/itsupport/src/Containers/UserLoginPage/UserLoginPage.js":"20","/home/starman/JavaScript/projects/itsupport/src/Components/UserLoginPageComponents/AuthenticationModal/AuthenticationModal.js":"21","/home/starman/JavaScript/projects/itsupport/src/Components/UserLoginPageComponents/HelperInfo/HelperInfo.js":"22","/home/starman/JavaScript/projects/itsupport/src/Components/UserLoginPageComponents/LoginForm/LoginForm.js":"23","/home/starman/JavaScript/projects/itsupport/src/Components/UserLoginPageComponents/Button/Button.js":"24"},{"size":994,"mtime":1610175872658,"results":"25","hashOfConfig":"26"},{"size":673,"mtime":1610804854547,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":1610173813203,"results":"28","hashOfConfig":"26"},{"size":454,"mtime":1610453997424,"results":"29","hashOfConfig":"26"},{"size":181,"mtime":1610188325008,"results":"30","hashOfConfig":"26"},{"size":405,"mtime":1610440504435,"results":"31","hashOfConfig":"26"},{"size":265,"mtime":1610178755968,"results":"32","hashOfConfig":"26"},{"size":289,"mtime":1610431679086,"results":"33","hashOfConfig":"26"},{"size":842,"mtime":1610192228853,"results":"34","hashOfConfig":"26"},{"size":8550,"mtime":1610799199881,"results":"35","hashOfConfig":"26"},{"size":1709,"mtime":1610440372399,"results":"36","hashOfConfig":"26"},{"size":946,"mtime":1610186760592,"results":"37","hashOfConfig":"26"},{"size":3741,"mtime":1610432783238,"results":"38","hashOfConfig":"26"},{"size":7543,"mtime":1610797676770,"results":"39","hashOfConfig":"26"},{"size":8915,"mtime":1610800161968,"results":"40","hashOfConfig":"26"},{"size":41,"mtime":1610452264582,"results":"41","hashOfConfig":"26"},{"size":128,"mtime":1610452857384,"results":"42","hashOfConfig":"26"},{"size":3208,"mtime":1610798675299,"results":"43","hashOfConfig":"26"},{"size":1854,"mtime":1610803100859,"results":"44","hashOfConfig":"26"},{"size":1551,"mtime":1610883037246,"results":"45","hashOfConfig":"26"},{"size":353,"mtime":1610877133034,"results":"46","hashOfConfig":"26"},{"size":858,"mtime":1610880034353,"results":"47","hashOfConfig":"26"},{"size":1254,"mtime":1610884014846,"results":"48","hashOfConfig":"26"},{"size":312,"mtime":1610881741459,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"3o3f0p",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/starman/JavaScript/projects/itsupport/src/index.js",[],["104","105"],"/home/starman/JavaScript/projects/itsupport/src/App.js",[],"/home/starman/JavaScript/projects/itsupport/src/reportWebVitals.js",[],"/home/starman/JavaScript/projects/itsupport/src/Store/ApplicationPage/ApplicationPageReducer.js",[],"/home/starman/JavaScript/projects/itsupport/src/Components/ApplicationPageComponents/Logo/Logo.js",[],"/home/starman/JavaScript/projects/itsupport/src/Components/ApplicationPageComponents/WhiteButton/WhiteButton.js",[],"/home/starman/JavaScript/projects/itsupport/src/Components/ApplicationPageComponents/RedButton/RedButton.js",[],"/home/starman/JavaScript/projects/itsupport/src/Components/ApplicationPageComponents/BlueButton/BlueButton.js",[],"/home/starman/JavaScript/projects/itsupport/src/Components/ApplicationPageComponents/SocialNetworkLinks/SocialNetworkLinks.js",[],"/home/starman/JavaScript/projects/itsupport/src/Containers/ApplicationPage/ApplicationPage.js",["106"],"import React, { useEffect, useRef, useState } from 'react';\nimport { Switch, useHistory } from 'react-router';\nimport ApplicationDetails from '../../Components/ApplicationPageComponents/ApplicationDetails/ApplicationDetails';\nimport ApplicationForm from '../../Components/ApplicationPageComponents/ApplicationForm/ApplicationForm';\nimport ApplicationStatus from '../../Components/ApplicationPageComponents/ApplicationStatus/ApplicationStatus';\nimport LayoutApplicationPage from '../../Components/ApplicationPageComponents/LayoutApplicationPage/LayoutApplicationPage';\nimport PreviousApplicationMenu from '../../Components/ApplicationPageComponents/PreviousApplicationMenu/PreviousApplicationMenu';\nimport SpecialitsWindowStatus from '../../Components/ApplicationPageComponents/SpecialitsWindowStatus/SpecialitsWindowStatus';\n\n\nconst ApplicationPage = (props) => {\n\n    const id = props.match.params.id;\n    const idInTitle = `№ IT-${id}`;\n    const status = 'new' // Получить статус заявки при запросе данных заявки\n    // Статусы также вызываются в компоненте окна специалиста SpecialistWindowStatus\n\n    const refFile = useRef();\n    const history = useHistory();\n    const [fileNameState, setFileNameState] = useState(\"\");\n    const [isShowPassword, setIsShowPassword] = useState(false);\n    const [showQuestion, setShowQuestion] = useState(false);\n    const [submitDisabled, setSubmitDisabled] = useState(true);\n\n\n    const [isBackInProgress, setIsBackInProgress] = useState(false);\n\n    let buttonName =\"\";\n    const id_number = \"№IT-051120-0375649\";\n    const date = \"03.11.2019, 10:50\";\n    const name = \"Не работает вай-фай\";\n    let description = \"\";\n    const title = \"Предыдущая заявка\";\n    let center;\n    let top;\n    let leftSide;\n    const userName = \"Светлана\";\n\n\n\n    const [inputState, setInputState] = useState({\n        subject: '',\n        department: '',\n        message: '',\n        password: '',\n        file: ''\n    })\n\n    if (isBackInProgress) {\n        description = `Заявка ${id_number} вернулась в работу, ИТ-специалист свяжется с вами в ближайшее время`;\n        buttonName = \"Посмотреть заявку в новом окне\";\n    } else {\n        buttonName = \"Вернуть в работу\";\n    }\n\n    const hoverShowQuestion = () => {\n        setShowQuestion(true);\n    }\n\n    const hoverHideQuestion = () => {\n        setShowQuestion(false);\n    }\n\n    const toogleShowPassword = () => {\n        if (isShowPassword) {\n            setIsShowPassword(false);\n        } else {\n            setIsShowPassword(true);\n        }\n    }\n    const chooseFile = (event) => {\n        setFileNameState(event.target.files[0].name);\n        setInputState(prevState => {\n            return {...prevState, \"file\": event}\n        });\n    }\n    const activateFileInput = () => {\n        refFile.current.click();\n    }\n\n    const inputHandler = (event) => {\n        const {name, value} = event.target;\n        setInputState(prevState => {\n            return {...prevState, [name]: value}\n        });\n    }\n\n    \n    if (fileNameState.trim() === '') {\n        setFileNameState('Выберите файл')\n    }\n    const clearInputState = () => {\n        setInputState({\n            subject: '',\n            department: '',\n            message: '',\n            password: '',\n            file: ''\n        });\n    }\n\n    const isBackInProgressHandler = () => {\n        setIsBackInProgress(true);\n    }\n\n    const submitFormHandler = (event) => {\n        event.preventDefault();\n        const formData = new FormData();\n        Object.keys(inputState).forEach(key => {\n            formData.append(key, inputState[key]);\n        })\n        // console.log(formData);\n        setIsBackInProgress(false);\n         // Отправка формы заявки с файлом или без файла\n        clearInputState();\n        history.push('application/idgoeshere') //add query params to get application by id\n    }\n\n    const isDisabled = () => {\n        setSubmitDisabled(false);\n        Object.keys(inputState).forEach(key => {\n            if (key !== \"file\") {\n                if (!inputState[key] ) {\n                    setSubmitDisabled(true);\n                }\n            }\n        });\n    }\n\n    useEffect(() => {\n        isDisabled();\n    }, [inputState]);\n\n    if (id) {\n        top = (\n            <SpecialitsWindowStatus \n                id={id}\n                newApplicationl={false}\n                specialistFound={false}\n                jobDone={false}\n                isCanceled={true}\n                name={\"Александра Панарина\"}\n                photo={\"https://avatars2.githubusercontent.com/u/65975704?s=460&u=ea538732c997f1f0b979f66944210941c508a703&v=4\"}\n                phone={\"+7 727 390 1112\"}\n                specialistId={\"IT 152\"}\n        />\n            )\n    }\n    if (id) {\n        leftSide = (\n            <ApplicationStatus \n                id={id}\n                specialistFound={true}\n                jobDone={false}\n                isCanceled={true}\n                \n            />\n        )\n    } else {\n        leftSide = (\n            <PreviousApplicationMenu \n                title={title}\n                name={name}\n                date={date}\n                description={description}\n                buttonName={buttonName}\n                clicked={isBackInProgressHandler}\n            />\n    )}\n\n    if (id) {\n        center = (<ApplicationDetails \n            status={status}\n            id={id}\n            idInTitle={idInTitle}\n            jobDone={false}\n            isCanceled={true}\n        />)\n    } else {\n        center = (\n            <ApplicationForm \n                userName={userName}\n                greetings={\"здравствуйте! Опишите свою проблему\"}\n\n                subjectTitle={\"Тема*\"}\n                subjectName=\"subject\"\n                subjectChange={(event) => {inputHandler(event)}}\n                subjectRequired={true}\n                subjectPlaceholder={\"Опишите кратко суть проблемы\"}\n\n                departmentTitle={\"Отдел*\"}\n                departmentName=\"department\"\n                departmentChange={(event) => {inputHandler(event)}}\n                departmentRequired={true}\n                departmentPlaceholder={\"В какой отдел отправить заявку?\"}\n\n                messageTitle={\"Сообщение\"}\n                messageName=\"message\"\n                messageChange={(event) => {inputHandler(event)}}\n                messageRequired={true}\n                messagePlaceholder={\"Расскажите побробнее, например: утром вайфай еще работал, а после обеда выключается каждые пять минут отправляю письма, а они не доходят до получаетелей. Можно прикрепить к сообщению снимок экрана. Это поможет нам разобраться в проблеме.\"}\n\n                fileClicked={(event) => {chooseFile(event)}}\n                iconClick={activateFileInput}\n                fileRef={refFile}\n                fileName={fileNameState}\n                inputFileName=\"file\"\n                questionShow={hoverShowQuestion}\n                questionHide={hoverHideQuestion}\n                showQuestionModal={showQuestion}\n                questionText={\"Регистрационный номер заявки\"}\n                textTeamViewer={\"Пароль от TeamViewer\"}\n                showPassword={isShowPassword}\n                passwordName=\"password\"\n                passwordChange={(event) => {inputHandler(event)}}\n                passwordRequired={false}\n                passwordPlaceholder={\"Введите пароль\"}\n                toggleShowPassword={toogleShowPassword}\n\n                buttonName={\"Отправить заявку\"}\n                submitClicked={(event) => {submitFormHandler(event)}}\n                isDisabled={submitDisabled}\n\n            />\n    )}\n\n    return (\n        <LayoutApplicationPage\n            left={leftSide}\n            center={center}\n            top={top}\n            hideButton={!id}\n        >\n            <Switch>\n\n            </Switch>\n        </LayoutApplicationPage>\n    )\n}\n\nexport default ApplicationPage;","/home/starman/JavaScript/projects/itsupport/src/Components/ApplicationPageComponents/LayoutApplicationPage/LayoutApplicationPage.js",[],"/home/starman/JavaScript/projects/itsupport/src/Components/ApplicationPageComponents/PreviousApplicationMenu/PreviousApplicationMenu.js",[],"/home/starman/JavaScript/projects/itsupport/src/Components/ApplicationPageComponents/ApplicationForm/ApplicationForm.js",[],"/home/starman/JavaScript/projects/itsupport/src/Components/ApplicationPageComponents/SpecialitsWindowStatus/SpecialitsWindowStatus.js",["107","108","109","110","111"],"import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router';\nimport BlueButton from '../BlueButton/BlueButton';\nimport './SpecialitsWindowStatus.css';\n\n\n\nconst SpecialitsWindowStatus = (props) => {\n    let timerDuration = 900000; //15 минут\n    const history = useHistory();\n    const status = props.status;\n    const id = props.id;\n    let topComponent;\n    const [seconds, setSeconds] = useState(\"00\");\n    const [minutes, setMinutes] = useState(15);\n    const [oneComment, setOneComment] = useState();\n    const [isComment, setIsComment] = useState(false);\n    const [isLike, setIsLike] = useState(false);\n    const [isDisLike, setIsDisLike] = useState(false);\n\n    let leaveCommentBlock;\n    let timer = null;\n    let newApplication = props.newApplicationl\n    let specialistFound = props.specialistFound;\n    let jobDone = props.jobDone;\n    let isCanceled = props.isCanceled;\n\n    useEffect(() => {\n       if (newApplication) {\n        if (timerDuration > 0 && !timer) {\n            timer = setInterval(() => {\n                let seconds = (timerDuration % 60000) / 1000;\n                let minutes = Math.floor(timerDuration / 60000);\n                if (seconds < 10) {\n                    seconds = \"0\" + seconds;\n                }\n                if (minutes < 10) {\n                    minutes = \"0\" + minutes;\n                }\n                setSeconds(seconds);\n                setMinutes(minutes);\n                timerDuration -= 1000;\n                if (minutes === \"00\" && seconds === \"00\") {\n                    clearInterval(timer);\n                }\n            }, 1000);\n        }\n        if (timerDuration <= 0) {\n            clearInterval(timer);\n            timer = null;\n        }\n        return(() => {\n            clearInterval(timer)\n        })\n    }\n    }, []);\n\n    const applyComment = () => {\n        if (oneComment === undefined || oneComment.trim() === '') {\n            return;\n        }\n        setIsComment(true);\n    }\n    const textAreaHandler = (event) => {\n        setOneComment(event.target.value);\n    }\n    const isLikeHandler = () => {\n        setIsLike(true);\n    }\n    const isDisLikeHandler = () => {\n        setIsDisLike(true);\n    }\n    if (!isComment) {\n    leaveCommentBlock = (\n        <div className=\"leaveCommentBlock\">\n            {!isLike && !isDisLike \n                ? \n            <div className=\"leaveCommentBlock__likeBlock\">\n                <div onClick={isLikeHandler} className=\"leaveCommentBlock__icon leaveCommentBlock__icon--like\" />\n                <div onClick={isDisLikeHandler} className=\"leaveCommentBlock__icon leaveCommentBlock__icon--dislike\" />\n            </div> \n                : \n            <div className=\"isCommentBlock--likeOrNot\">\n                {isLike ? <div className=\"isCommentBlock__like\" /> : null}\n                {isDisLike ? <div className=\"isCommentBlock__dislike\" /> : null}\n            </div>}\n\n            \n            <div className=\"leaveCommentBlock__commentBlock\">\n                <textarea value={oneComment} placeholder=\"Напишите краткий отзыв\" onChange={(event) => {textAreaHandler(event)}} className=\"leaveCommentBlock__textarea\"></textarea>\n                    <div className=\"leaveCommentBlock__btn\">\n                        <BlueButton\n                            name=\"Отправить отзыв\"\n                            clicked={() => {applyComment()}}\n                        />\n                    </div>\n            </div>\n        </div>\n    )} else {\n        leaveCommentBlock = (\n            <div className=\"isCommentBlock\">\n                {!isLike && !isDisLike \n                        ? \n                    <div className=\"leaveCommentBlock__likeBlock\">\n                        <div onClick={isLikeHandler} className=\"leaveCommentBlock__icon leaveCommentBlock__icon--like\" />\n                        <div onClick={isDisLikeHandler} className=\"leaveCommentBlock__icon leaveCommentBlock__icon--dislike\" />\n                    </div> \n                        : \n                    <div className=\"isCommentBlock--likeOrNot\">\n                        {isLike ? <div className=\"isCommentBlock__like\" /> : null}\n                        {isDisLike ? <div className=\"isCommentBlock__dislike\" /> : null}\n                    </div>}\n                <div className=\"isCommentBlock__textBlock\">\n                    <h2 className=\"isCommentBlock__title\">Отзыв пользователя:</h2>\n                    <p className=\"isCommentBlock__text\">{oneComment}</p>\n                </div>\n            </div>\n        )\n    }\n\n   \n\n\n    // possible statusses 'new' 'in_progress' 'complete' 'canceled'\n    if (newApplication) {\n    topComponent = (\n        <div className=\"StatusNew\">\n            <h2 className=\"StatusNew__title\">Получили вашу заявку, спасибо!</h2>\n            <p className=\"StatusNew_text\">Мы назначим ИТ-специалиста в течение:</p>\n            <div className=\"StatusNew__timeBlock\">\n                <span className=\"StatusNew__time StatusNew__time--numbers\">{minutes}</span>\n                <span className=\"StatusNew__time\">:</span>\n                <span className=\"StatusNew__time StatusNew__time--numbers\">{seconds}</span>\n            </div>\n        </div>\n    )} else {\n        topComponent = (\n            <div className=\"SpecialistWindow\">\n                <h2 className={`SpecialistWindow__title ${specialistFound ? \"color-orange\" : \"\"} ${jobDone ? \"color-green\" : \"\"} ${isCanceled ? \"color-grey\" : \"\"}`}>{specialistFound ? \"Заявка в работе\" : \"\"}{jobDone ? \"Заявка закрыта\" : \"\"}{isCanceled ? \"Заявка отменена\" : \"\"}</h2>\n            \n                <div className=\"SpecialistWindow__content\">\n                    <div className=\"SpecialistWindow__avatar--frame\">\n                        <img className=\"SpecialistWindow__avatar--image\" src={props.photo} alt={props.name} />\n                    </div>\n\n                    <div className=\"SpecialistWindow__textBlock\">\n                        {specialistFound ? <h3 className=\"SpecialistWindow__title--small\">Скоро с вами свяжется</h3> : null}\n                        {jobDone ? <p className=\"SpecialistWindow__text SpecialistWindow__text--pushDown\">Оцените работу ИТ-специалиста, если нужно — напишите краткий отзыв, нам будет приятно. </p> : null}\n                        {isCanceled ? <p className=\"SpecialistWindow__text SpecialistWindow__text--pushDown\">Оцените работу ИТ-специалиста, если нужно — напишите краткий отзыв, нам будет приятно. </p> : null}\n                    \n                        <div className=\"SpecialistWindow__nameAndPhone\">\n                            <h3 className=\"SpecialistWindow__name\">\n                                {props.name}\n                            </h3>\n                            <p className=\"SpecialistWindow__text\">\n                                {props.phone}\n                            </p>\n                        </div>\n                        <p className=\"SpecialistWindow__text\">{props.specialistId}</p>\n                    </div>\n\n                </div>\n                {jobDone || isCanceled ? leaveCommentBlock : null}\n            </div>\n        )\n    }\n    return (\n        <>\n            {topComponent}\n        </>\n    )\n}\n\nexport default SpecialitsWindowStatus;","/home/starman/JavaScript/projects/itsupport/src/Components/ApplicationPageComponents/ApplicationDetails/ApplicationDetails.js",["112"],"import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addComment } from '../../../Store/ApplicationPage/ApplicationPageActions';\nimport BlueButton from '../BlueButton/BlueButton';\nimport './ApplicationDetails.css';\n\n\nconst ApplicationDetails = (props) => {\n\n    const status = props.status;\n    const id = props.id;\n    const dispatch = useDispatch();\n    const comments = useSelector(state => state.ApplicationPage.comments); //Получить все комментарии по ID\n    const [oneComment, setOneComment] = useState();\n    const [messageClassToggle, setMessageClassToggle] = useState(\"messageClassToggleHidden\");\n    const [messageClassButtonText, setMessageClassButtonText] = useState('показать подробнее');\n\n    const [resultClassToggle, setResultClassToggle] = useState(\"messageClassToggleHidden\");\n    const [resultClassButtonText, setResultClassButtonText] = useState('показать подробнее');\n\n    let jobDone = props.jobDone;\n    let isCanceled = props.isCanceled;\n\n\n    const department = \"Удаленная поддержка\"; // Получить по id\n    const subject = 'Не работает почта'; // Получить по id\n    const message = 'Отправляю письма, а они не доходят до получателей, адреса ввожу правильно. Отчеты о возврате письма не приходят, то есть письмо вроде ушло, но в отправленных его нет, и когда узнаешь, пришло письмо или не пришло, то получатель говорит, что никакого письма не получал. Хочу заметить, что это началось после того // Отправляю письма, а они не доходят до получателей, адреса ввожу правильно. Отчеты о возврате письма не приходят, то есть письмо вроде ушло, но в отправленных его нет, и когда узнаешь, пришло письмо или не пришло, то получатель говорит, что никакого письма не получал. Хочу заметить, что это началось после того  // ни не доходят до получателей, адреса ввожу правильно. Отчеты о возврате письма не приходят, то есть письмо вроде ушло, но в отправленных его нет, и когда узнаешь, пришло письмо или не пришло, то получатель говорит, что никакого письма не получал. Хочу заметить, что это началось после того // Отправляю письма, а они не доходят до получателей, адреса ввожу правильно. Отчеты о возврате письма не приходят, то есть письмо вроде ушло, но в отправленных его нет, и когда узнаешь, пришло письмо или не пришло, то получатель говорит, что никакого письма не получал. Хочу заметить, что эт после '; // Получить по id\n    const result = 'Были введены неправильные настройки VPN. Исправили настройки на каждом компьтере в отделе, почта снова работает. Почистили корпоративную почту от спама и рассылок. Просим вас регулярно приводить в порядок почтовое хранилище и избавляться от лишних файлов во избежание падения почтовых серверов... показать больше // Были введены неправильные настройки VPN. Исправили настройки на каждом компьтере в отделе, почта снова работает. Почистили корпоративную почту от спама и рассылок. Просим вас регулярно приводить в порядок почтовое хранилище и избавляться от лишних файлов во избежание падения почтовых серверов... показать больше';\n    let allComments;\n    if (comments) {\n        allComments = (\n            comments.map(el => {\n                return <div\n                    key={el.id}\n                    className=\"Comment\"\n                >\n                    <p className=\"Comment__date\">{`${el.date}`}</p>\n                    <p className=\"Comment__content\">{`${el.content}`}</p>\n                </div>\n            })\n    )}\n\n    const textAreaHandler = (event) => {\n        setOneComment(event.target.value);\n    }\n    const applyComment = () => {\n        if (oneComment === undefined || oneComment.trim() === '') {\n            return;\n        }\n        const obj = {\n            id: Math.random(),\n            date: new Date(),\n            content: oneComment\n        }\n        dispatch(addComment(obj));\n        setOneComment('');\n    }\n    const textShowToggle = () => {\n        if (messageClassToggle === 'messageClassToggleHidden') {\n            setMessageClassToggle('messageClassToggleOpen');\n            setMessageClassButtonText('скрыть текст');\n        } else {\n            setMessageClassToggle('messageClassToggleHidden');\n            setMessageClassButtonText('показать подробнее');\n        }\n    }\n    const resultShowToggle = () => {\n        if (resultClassToggle === 'messageClassToggleHidden') {\n            setResultClassToggle('messageClassToggleOpen');\n            setResultClassButtonText('скрыть текст');\n        } else {\n            setResultClassToggle('messageClassToggleHidden');\n            setResultClassButtonText('показать подробнее');\n        }\n    }\n\n    let centerComponent;\n\n     // possible statusses 'new' 'in_progress' 'complete' 'canceled'\n    if (status === 'new') {\n        centerComponent = (\n        <div className=\"ApplicationDetails\">\n            <h2 className=\"ApplicationDetails__title\">Детали заявки {props.idInTitle}</h2>\n            <div className=\"ApplicationDetails__head\">\n                <div className=\"ApplicationDetails__head--sides\">\n                    <p className=\"ApplicationDetails__text--title\">Ответственный отдел</p>\n                    <p className=\"ApplicationDetails__text\">{department}</p>\n                </div>\n                <div className=\"ApplicationDetails__head--sides\">\n                    <p className=\"ApplicationDetails__text--title\">Тема</p>\n                    <p className=\"ApplicationDetails__text\">{subject}</p>\n                </div>\n            </div>\n                <p className=\"ApplicationDetails__text--title\">Подробности</p>\n            <div className={messageClassToggle}>\n                <p className=\"ApplicationDetails__text\">{message}</p>\n                <div onClick={textShowToggle} className=\"ApplicationDetails__message--button\"><span className=\"ApplicationDetails__text\">... </span>{messageClassButtonText}</div>\n            </div>\n            {jobDone || isCanceled\n                    ?\n                <>\n                     <p className=\"ApplicationDetails__text--title\">Результат</p>\n                    <div className={resultClassToggle}>\n                        <p className=\"ApplicationDetails__text\">{result}</p>\n                        <div onClick={resultShowToggle} className=\"ApplicationDetails__message--button\"><span className=\"ApplicationDetails__text\">... </span>{resultClassButtonText}</div>\n                    </div>\n                </>\n                    :\n                <>\n                    <textarea value={oneComment} placeholder=\"Если вы хотите дополнить заявку, напишите комментарий\" onChange={(event) => {textAreaHandler(event)}} className=\"ApplicationDetails__textarea\"></textarea>\n                    <div className=\"ApplicationDetails__btn\">\n                        <BlueButton \n                            name=\"Отправить сообщение\"\n                            clicked={() => {applyComment()}}\n                        />\n                    </div>\n                    {allComments}\n                </> \n            }\n        </div>\n        )}\n\n    return (\n        <>\n            {centerComponent}\n        </>\n    )\n}\n\n\nexport default ApplicationDetails;","/home/starman/JavaScript/projects/itsupport/src/Store/ApplicationPage/ApplicationPageActionTypes.js",[],"/home/starman/JavaScript/projects/itsupport/src/Store/ApplicationPage/ApplicationPageActions.js",[],"/home/starman/JavaScript/projects/itsupport/src/Components/ApplicationPageComponents/ApplicationStatus/ApplicationStatus.js",["113"],"import React from 'react';\nimport './ApplicationStatus.css';\n\n\nconst ApplicationStatus = (props) => {\n    const id = props.id;\n    let leftSide;\n    let specialistFound = props.specialistFound; //take from state?\n    let jobDone = props.jobDone; //take from state?\n    let isCanceled = props.isCanceled;\n\n     // possible statusses 'new' 'in_progress' 'complete' 'canceled'\n        leftSide = (\n        <div className=\"ApplicationStatus\">\n\n            <div className=\"ApplicationStatus__lineBlock\">\n                <div className=\"ApplicationStatus__circle\" />\n                <div className={`ApplicationStatus__line ${specialistFound ? null : \"ApplicationStatus__unactive--circle\"}`} />\n                <div className={`ApplicationStatus__circle ${specialistFound ? null : \"ApplicationStatus__unactive ApplicationStatus__unactive--circle\"}`}>{specialistFound ? null : \"2\"}</div>\n                <div className={`ApplicationStatus__line ${jobDone || isCanceled ? null : \"ApplicationStatus__unactive--circle\"}`} />\n                <div className={`ApplicationStatus__circle ${jobDone || isCanceled ? null : \"ApplicationStatus__unactive ApplicationStatus__unactive--circle\"} ${isCanceled ? \"ApplicationStatus__canceled\" : null}`}>{jobDone || isCanceled ? null : \"3\"}</div>\n            </div>\n\n            <div className=\"ApplicationStatus__textBlock\">\n                <div className=\"ApplicationStatus__textItem\">\n                    <h3 className=\"ApplicationStatus__title\">Заявка в обработке</h3>\n                    <p className=\"ApplicationStatus__text\">Мы назначим ИТ-специалиста в ближайшее время. Обычно это занимает не больше 15 минут</p>\n                </div>\n                <div className=\"ApplicationStatus__textItem\">\n                    <h3 className={`ApplicationStatus__title ${specialistFound ? null : \"ApplicationStatus__unactive\"}`}>ИТ-специалист назначен</h3>\n                    <p className={`ApplicationStatus__text ApplicationStatus__text--pushDown ${specialistFound ? null : \"ApplicationStatus__unactive\"}`}>Наш сотрудник скоро свяжется с вами и решит проблему</p>\n                </div>\n                {isCanceled \n                    ? \n                <div className=\"ApplicationStatus__textItem\">\n                    <h3 className=\"ApplicationStatus__title\" >Заявка отменена</h3>\n                    <p className=\"ApplicationStatus__link--whenCanceled\">Вернуть заявку в работу</p>\n                </div>\n                    :\n                <div className=\"ApplicationStatus__textItem\">\n                    <h3 className={`ApplicationStatus__title ${jobDone ? null : \"ApplicationStatus__unactive\"}`}>Заявка закрыта</h3>\n                    <p className={`ApplicationStatus__text ${jobDone ? null : \"ApplicationStatus__unactive\"}`}>Поделитесь с нами обратной связью</p>\n                </div>\n            }\n            </div>\n        </div>\n        );\n\n    return (\n        <>\n            {leftSide}\n        </>\n    )\n}\n\nexport default ApplicationStatus;","/home/starman/JavaScript/projects/itsupport/src/Components/ApplicationPageComponents/ErrorWindow/ErrorWindow.js",["114","115","116","117","118","119","120","121","122"],"import React from 'react';\nimport './ErrorWindow.css';\n\nconst ErrorWindow = () => {\n    return (\n        <div className=\"ErrorWindow\">\n            <div className=\"ErrorWindow__container\">\n                <h1 className=\"ErrorWindow__title\">Что-то пошло не так</h1>\n                <p className=\"ErrorWindow__text\">Страница не загружается. Не отчаивайтесь!</p>\n                <p className=\"ErrorWindow__text\">Вы можете оставить заявку в приложении <a href=\"#\" className=\"ErrorWindow__link\">TeamViewer</a> или по телефону:</p>\n              \n                <div className=\"ErrorWindow__contacts\">\n                    <div className=\"ErrorWindow__contactSide\">\n                        <p className=\"ErrorWindow__phone\">+7 727 390 11 12</p>\n                        <p className=\"ErrorWindow__city\">в Алматы</p>\n                    </div>\n                    <div className=\"ErrorWindow__contactSide\">\n                        <p className=\"ErrorWindow__phone\">+7 717 264 61 12</p>\n                        <p className=\"ErrorWindow__city\">в Нур-Султане</p>\n                    </div>\n                </div>\n                <div className=\"ErrorWindow__socialNetwork\">\n                    <p className=\"ErrorWindow__textSocial\">Мы в социальных сетях</p>\n                    <a href=\"#\" className=\"ErrorWindow__icon ErrorWindow__icon--instagram\"></a>\n                    <a href=\"#\" className=\"ErrorWindow__icon ErrorWindow__icon--facebook\"></a>\n                    <a href=\"#\" className=\"ErrorWindow__icon ErrorWindow__icon--linkedin\"></a>\n                    <a href=\"#\" className=\"ErrorWindow__icon ErrorWindow__icon--youtube\"></a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ErrorWindow;","/home/starman/JavaScript/projects/itsupport/src/Containers/UserLoginPage/UserLoginPage.js",[],"/home/starman/JavaScript/projects/itsupport/src/Components/UserLoginPageComponents/AuthenticationModal/AuthenticationModal.js",[],"/home/starman/JavaScript/projects/itsupport/src/Components/UserLoginPageComponents/HelperInfo/HelperInfo.js",["123","124","125","126"],"/home/starman/JavaScript/projects/itsupport/src/Components/UserLoginPageComponents/LoginForm/LoginForm.js",[],"/home/starman/JavaScript/projects/itsupport/src/Components/UserLoginPageComponents/Button/Button.js",[],{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","severity":1,"message":"132","line":132,"column":8,"nodeType":"133","endLine":132,"endColumn":20,"suggestions":"134"},{"ruleId":"135","severity":1,"message":"136","line":10,"column":11,"nodeType":"137","messageId":"138","endLine":10,"endColumn":18},{"ruleId":"135","severity":1,"message":"139","line":11,"column":11,"nodeType":"137","messageId":"138","endLine":11,"endColumn":17},{"ruleId":"135","severity":1,"message":"140","line":12,"column":11,"nodeType":"137","messageId":"138","endLine":12,"endColumn":13},{"ruleId":"131","severity":1,"message":"141","line":31,"column":21,"nodeType":"142","endLine":46,"endColumn":21},{"ruleId":"131","severity":1,"message":"143","line":42,"column":34,"nodeType":"144","endLine":42,"endColumn":38},{"ruleId":"135","severity":1,"message":"140","line":11,"column":11,"nodeType":"137","messageId":"138","endLine":11,"endColumn":13},{"ruleId":"135","severity":1,"message":"140","line":6,"column":11,"nodeType":"137","messageId":"138","endLine":6,"endColumn":13},{"ruleId":"145","severity":1,"message":"146","line":10,"column":89,"nodeType":"147","endLine":10,"endColumn":131},{"ruleId":"148","severity":1,"message":"149","line":24,"column":21,"nodeType":"147","endLine":24,"endColumn":92},{"ruleId":"145","severity":1,"message":"146","line":24,"column":21,"nodeType":"147","endLine":24,"endColumn":92},{"ruleId":"148","severity":1,"message":"149","line":25,"column":21,"nodeType":"147","endLine":25,"endColumn":91},{"ruleId":"145","severity":1,"message":"146","line":25,"column":21,"nodeType":"147","endLine":25,"endColumn":91},{"ruleId":"148","severity":1,"message":"149","line":26,"column":21,"nodeType":"147","endLine":26,"endColumn":91},{"ruleId":"145","severity":1,"message":"146","line":26,"column":21,"nodeType":"147","endLine":26,"endColumn":91},{"ruleId":"148","severity":1,"message":"149","line":27,"column":21,"nodeType":"147","endLine":27,"endColumn":90},{"ruleId":"145","severity":1,"message":"146","line":27,"column":21,"nodeType":"147","endLine":27,"endColumn":90},{"ruleId":"148","severity":1,"message":"149","line":12,"column":17,"nodeType":"147","endLine":12,"endColumn":94},{"ruleId":"148","severity":1,"message":"149","line":13,"column":17,"nodeType":"147","endLine":13,"endColumn":92},{"ruleId":"148","severity":1,"message":"149","line":14,"column":17,"nodeType":"147","endLine":14,"endColumn":92},{"ruleId":"148","severity":1,"message":"149","line":15,"column":17,"nodeType":"147","endLine":15,"endColumn":90},"no-native-reassign",["150"],"no-negated-in-lhs",["151"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'isDisabled'. Either include it or remove the dependency array.","ArrayExpression",["152"],"no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","'status' is assigned a value but never used.","'id' is assigned a value but never used.","Assignments to the 'timer' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","Assignments to the 'timerDuration' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","no-global-assign","no-unsafe-negation",{"desc":"153","fix":"154"},"Update the dependencies array to be: [inputState, isDisabled]",{"range":"155","text":"156"},[4189,4201],"[inputState, isDisabled]"]