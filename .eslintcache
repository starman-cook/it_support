[{"D:\\JavaScript\\projects\\it_support\\src\\index.js":"1","D:\\JavaScript\\projects\\it_support\\src\\App.js":"2","D:\\JavaScript\\projects\\it_support\\src\\reportWebVitals.js":"3","D:\\JavaScript\\projects\\it_support\\src\\Containers\\UserLoginPage\\UserLoginPage.js":"4","D:\\JavaScript\\projects\\it_support\\src\\Containers\\ApplicationPage\\ApplicationPage.js":"5","D:\\JavaScript\\projects\\it_support\\src\\Containers\\SearchResultsPage\\SearchResultsPage.js":"6","D:\\JavaScript\\projects\\it_support\\src\\Components\\ApplicationPageComponents\\ErrorWindow\\ErrorWindow.js":"7","D:\\JavaScript\\projects\\it_support\\src\\Components\\SearchResultsComponents\\FullApplicationInfo\\FullApplicationInfo.js":"8","D:\\JavaScript\\projects\\it_support\\src\\Components\\ApplicationPageComponents\\ApplicationDetails\\ApplicationDetails.js":"9","D:\\JavaScript\\projects\\it_support\\src\\Components\\ApplicationPageComponents\\PreviousApplicationMenu\\PreviousApplicationMenu.js":"10","D:\\JavaScript\\projects\\it_support\\src\\Components\\ApplicationPageComponents\\ApplicationStatus\\ApplicationStatus.js":"11","D:\\JavaScript\\projects\\it_support\\src\\Components\\ApplicationPageComponents\\LayoutApplicationPage\\LayoutApplicationPage.js":"12","D:\\JavaScript\\projects\\it_support\\src\\Components\\ApplicationPageComponents\\ApplicationForm\\ApplicationForm.js":"13","D:\\JavaScript\\projects\\it_support\\src\\Components\\SearchResultsComponents\\LayoutSearchResults\\LayoutSearchResults.js":"14","D:\\JavaScript\\projects\\it_support\\src\\Components\\SearchResultsComponents\\ResultsTableWorker\\ResultsTableWorker.js":"15","D:\\JavaScript\\projects\\it_support\\src\\Components\\ApplicationPageComponents\\SpecialitsWindowStatus\\SpecialitsWindowStatus.js":"16","D:\\JavaScript\\projects\\it_support\\src\\Components\\UserLoginPageComponents\\LoginForm\\LoginForm.js":"17","D:\\JavaScript\\projects\\it_support\\src\\Components\\UserLoginPageComponents\\HelperInfo\\HelperInfo.js":"18","D:\\JavaScript\\projects\\it_support\\src\\Components\\UserLoginPageComponents\\AuthenticationModal\\AuthenticationModal.js":"19","D:\\JavaScript\\projects\\it_support\\src\\Components\\UserLoginPageComponents\\SmsInput\\SmsInput.js":"20","D:\\JavaScript\\projects\\it_support\\src\\Components\\UserLoginPageComponents\\PhoneInput\\PhoneInput.js":"21","D:\\JavaScript\\projects\\it_support\\src\\Components\\ApplicationPageComponents\\RedButton\\RedButton.js":"22","D:\\JavaScript\\projects\\it_support\\src\\Components\\ApplicationPageComponents\\BlueButton\\BlueButton.js":"23","D:\\JavaScript\\projects\\it_support\\src\\Components\\ApplicationPageComponents\\SocialNetworkLinks\\SocialNetworkLinks.js":"24","D:\\JavaScript\\projects\\it_support\\src\\Components\\ApplicationPageComponents\\Logo\\Logo.js":"25","D:\\JavaScript\\projects\\it_support\\src\\Components\\ApplicationPageComponents\\WhiteButton\\WhiteButton.js":"26","D:\\JavaScript\\projects\\it_support\\src\\Components\\SearchResultsComponents\\NoResults\\NoResults.js":"27","D:\\JavaScript\\projects\\it_support\\src\\Components\\SearchResultsComponents\\ModalStatus\\ModalStatus.js":"28","D:\\JavaScript\\projects\\it_support\\src\\Components\\SearchResultsComponents\\ModalWorker\\ModalWorker.js":"29","D:\\JavaScript\\projects\\it_support\\src\\Components\\SearchResultsComponents\\ResultsTableWorker\\ResultsItemWorker\\ResultsItemWorker.js":"30","D:\\JavaScript\\projects\\it_support\\src\\Components\\SearchResultsComponents\\ModalDepartment\\ModalDepartment.js":"31","D:\\JavaScript\\projects\\it_support\\src\\Components\\UserLoginPageComponents\\Button\\Button.js":"32","D:\\JavaScript\\projects\\it_support\\src\\Components\\SearchResultsComponents\\UI\\ButtonGrey\\ButtonGrey.js":"33","D:\\JavaScript\\projects\\it_support\\src\\axiosApi.js":"34","D:\\JavaScript\\projects\\it_support\\src\\Store\\ApplicationsReducer\\applicationsReducer.js":"35","D:\\JavaScript\\projects\\it_support\\src\\Store\\ApplicationsReducer\\applicationsActions.js":"36","D:\\JavaScript\\projects\\it_support\\src\\Store\\ApplicationsReducer\\applicationsActionTypes.js":"37","D:\\JavaScript\\projects\\it_support\\src\\Store\\configStore.js":"38","D:\\JavaScript\\projects\\it_support\\src\\constants\\apiUrl.js":"39","D:\\JavaScript\\projects\\it_support\\src\\hoc\\WithLoader\\WithLoader.js":"40","D:\\JavaScript\\projects\\it_support\\src\\Store\\CompanyDataReducer\\companyDataReducer.js":"41","D:\\JavaScript\\projects\\it_support\\src\\Store\\CompanyDataReducer\\companyActionTypes.js":"42","D:\\JavaScript\\projects\\it_support\\src\\Store\\CompanyDataReducer\\companyActions.js":"43","D:\\JavaScript\\projects\\it_support\\src\\Store\\UsersReducer\\usersActions.js":"44","D:\\JavaScript\\projects\\it_support\\src\\Store\\UsersReducer\\usersActionTypes.js":"45","D:\\JavaScript\\projects\\it_support\\src\\Store\\UsersReducer\\usersReducer.js":"46"},{"size":1822,"mtime":1613888963420,"results":"47","hashOfConfig":"48"},{"size":1173,"mtime":1613894231986,"results":"49","hashOfConfig":"48"},{"size":362,"mtime":1612596877402,"results":"50","hashOfConfig":"48"},{"size":10847,"mtime":1613894298256,"results":"51","hashOfConfig":"48"},{"size":8559,"mtime":1612600262458,"results":"52","hashOfConfig":"48"},{"size":14335,"mtime":1613329769890,"results":"53","hashOfConfig":"48"},{"size":1854,"mtime":1612596877324,"results":"54","hashOfConfig":"48"},{"size":14730,"mtime":1613330260578,"results":"55","hashOfConfig":"48"},{"size":8913,"mtime":1612600389614,"results":"56","hashOfConfig":"48"},{"size":946,"mtime":1612596877324,"results":"57","hashOfConfig":"48"},{"size":3208,"mtime":1612596877324,"results":"58","hashOfConfig":"48"},{"size":1879,"mtime":1612600725753,"results":"59","hashOfConfig":"48"},{"size":3738,"mtime":1612600346730,"results":"60","hashOfConfig":"48"},{"size":6293,"mtime":1613328775982,"results":"61","hashOfConfig":"48"},{"size":12960,"mtime":1613328242470,"results":"62","hashOfConfig":"48"},{"size":7465,"mtime":1612600660144,"results":"63","hashOfConfig":"48"},{"size":2013,"mtime":1613890468635,"results":"64","hashOfConfig":"48"},{"size":952,"mtime":1612596877339,"results":"65","hashOfConfig":"48"},{"size":353,"mtime":1612596877339,"results":"66","hashOfConfig":"48"},{"size":1118,"mtime":1612596877355,"results":"67","hashOfConfig":"48"},{"size":1171,"mtime":1613323401807,"results":"68","hashOfConfig":"48"},{"size":265,"mtime":1612596877324,"results":"69","hashOfConfig":"48"},{"size":289,"mtime":1612596877324,"results":"70","hashOfConfig":"48"},{"size":842,"mtime":1612596877324,"results":"71","hashOfConfig":"48"},{"size":181,"mtime":1612596877324,"results":"72","hashOfConfig":"48"},{"size":405,"mtime":1612596877339,"results":"73","hashOfConfig":"48"},{"size":388,"mtime":1612596877339,"results":"74","hashOfConfig":"48"},{"size":4307,"mtime":1612716604907,"results":"75","hashOfConfig":"48"},{"size":1924,"mtime":1612717537159,"results":"76","hashOfConfig":"48"},{"size":4404,"mtime":1612605391373,"results":"77","hashOfConfig":"48"},{"size":5142,"mtime":1612718407394,"results":"78","hashOfConfig":"48"},{"size":329,"mtime":1612596877339,"results":"79","hashOfConfig":"48"},{"size":243,"mtime":1612596877339,"results":"80","hashOfConfig":"48"},{"size":159,"mtime":1612600936020,"results":"81","hashOfConfig":"48"},{"size":22478,"mtime":1613893444230,"results":"82","hashOfConfig":"48"},{"size":1902,"mtime":1613327742496,"results":"83","hashOfConfig":"48"},{"size":779,"mtime":1613327684706,"results":"84","hashOfConfig":"48"},{"size":1791,"mtime":1613890304074,"results":"85","hashOfConfig":"48"},{"size":187,"mtime":1613326110633,"results":"86","hashOfConfig":"48"},{"size":1500,"mtime":1613888445619,"results":"87","hashOfConfig":"48"},{"size":431,"mtime":1613317018493,"results":"88","hashOfConfig":"48"},{"size":55,"mtime":1613316976250,"results":"89","hashOfConfig":"48"},{"size":574,"mtime":1613326118677,"results":"90","hashOfConfig":"48"},{"size":2648,"mtime":1613893795030,"results":"91","hashOfConfig":"48"},{"size":289,"mtime":1613891059876,"results":"92","hashOfConfig":"48"},{"size":1010,"mtime":1613893554449,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"17s2g7w",{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"100"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"100"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"100"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"100"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"100"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"100"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"100"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"100"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"100"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"100"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"100"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"100"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"100"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\JavaScript\\projects\\it_support\\src\\index.js",["200"],"D:\\JavaScript\\projects\\it_support\\src\\App.js",["201"],"D:\\JavaScript\\projects\\it_support\\src\\reportWebVitals.js",[],["202","203"],"D:\\JavaScript\\projects\\it_support\\src\\Containers\\UserLoginPage\\UserLoginPage.js",["204","205","206","207","208","209"],"D:\\JavaScript\\projects\\it_support\\src\\Containers\\ApplicationPage\\ApplicationPage.js",["210"],"import React, { useEffect, useRef, useState } from 'react';\nimport ApplicationDetails from '../../Components/ApplicationPageComponents/ApplicationDetails/ApplicationDetails';\nimport ApplicationForm from '../../Components/ApplicationPageComponents/ApplicationForm/ApplicationForm';\nimport ApplicationStatus from '../../Components/ApplicationPageComponents/ApplicationStatus/ApplicationStatus';\nimport LayoutApplicationPage from '../../Components/ApplicationPageComponents/LayoutApplicationPage/LayoutApplicationPage';\nimport PreviousApplicationMenu from '../../Components/ApplicationPageComponents/PreviousApplicationMenu/PreviousApplicationMenu';\nimport SpecialitsWindowStatus from '../../Components/ApplicationPageComponents/SpecialitsWindowStatus/SpecialitsWindowStatus';\nimport {push} from 'connected-react-router'\nimport {useDispatch} from \"react-redux\";\n\nconst ApplicationPage = (props) => {\n    const dispatch = useDispatch();\n    const id = props.match.params.id;\n    const idInTitle = `№ IT-${id}`;\n    const status = 'new' // Получить статус заявки при запросе данных заявки\n    // Статусы также вызываются в компоненте окна специалиста SpecialistWindowStatus\n\n    const refFile = useRef();\n    const [fileNameState, setFileNameState] = useState(\"\");\n    const [isShowPassword, setIsShowPassword] = useState(false);\n    const [showQuestion, setShowQuestion] = useState(false);\n    const [submitDisabled, setSubmitDisabled] = useState(true);\n\n\n    const [isBackInProgress, setIsBackInProgress] = useState(false);\n\n    let buttonName =\"\";\n    const id_number = \"№IT-051120-0375649\";\n    const date = \"03.11.2019, 10:50\";\n    const name = \"Не работает вай-фай\";\n    let description = \"\";\n    const title = \"Предыдущая заявка\";\n    let center;\n    let top;\n    let leftSide;\n    const userName = \"Светлана\";\n\n\n\n    const [inputState, setInputState] = useState({\n        subject: '',\n        department: '',\n        message: '',\n        password: '',\n        file: ''\n    })\n\n    if (isBackInProgress) {\n        description = `Заявка ${id_number} вернулась в работу, ИТ-специалист свяжется с вами в ближайшее время`;\n        buttonName = \"Посмотреть заявку в новом окне\";\n    } else {\n        buttonName = \"Вернуть в работу\";\n    }\n\n    const hoverShowQuestion = () => {\n        setShowQuestion(true);\n    }\n\n    const hoverHideQuestion = () => {\n        setShowQuestion(false);\n    }\n\n    const toogleShowPassword = () => {\n        if (isShowPassword) {\n            setIsShowPassword(false);\n        } else {\n            setIsShowPassword(true);\n        }\n    }\n    const chooseFile = (event) => {\n        setFileNameState(event.target.files[0].name);\n        setInputState(prevState => {\n            return {...prevState, \"file\": event.target.files[0]}\n        });\n    }\n    const activateFileInput = () => {\n        refFile.current.click();\n    }\n\n    const inputHandler = (event) => {\n        const {name, value} = event.target;\n        setInputState(prevState => {\n            return {...prevState, [name]: value}\n        });\n    }\n\n    \n    if (fileNameState.trim() === '') {\n        setFileNameState('Выберите файл')\n    }\n    const clearInputState = () => {\n        setInputState({\n            subject: '',\n            department: '',\n            message: '',\n            password: '',\n            file: ''\n        });\n    }\n\n    const isBackInProgressHandler = () => {\n        setIsBackInProgress(true);\n    }\n\n    const submitFormHandler = (event) => {\n        event.preventDefault();\n        const formData = new FormData();\n        Object.keys(inputState).forEach(key => {\n            formData.append(key, inputState[key]);\n        })\n        // console.log(formData);\n        setIsBackInProgress(false);\n         // Отправка формы заявки с файлом или без файла\n        clearInputState();\n        dispatch(push('application/idgoeshere')); //add query params to get application by id\n    }\n\n    const isDisabled = () => {\n        setSubmitDisabled(false);\n        Object.keys(inputState).forEach(key => {\n            if (key !== \"file\") {\n                if (!inputState[key] ) {\n                    setSubmitDisabled(true);\n                }\n            }\n        });\n    }\n\n    useEffect(() => {\n        isDisabled();\n    }, [inputState]);\n\n    if (id) {\n        top = (\n            <SpecialitsWindowStatus \n                id={id}\n                newApplicationl={false}\n                specialistFound={false}\n                jobDone={false}\n                isCanceled={true}\n                name={\"Александра Панарина\"}\n                photo={\"https://avatars2.githubusercontent.com/u/65975704?s=460&u=ea538732c997f1f0b979f66944210941c508a703&v=4\"}\n                phone={\"+7 727 390 1112\"}\n                specialistId={\"IT 152\"}\n        />\n            )\n    }\n    if (id) {\n        leftSide = (\n            <ApplicationStatus \n                id={id}\n                specialistFound={true}\n                jobDone={false}\n                isCanceled={true}\n                \n            />\n        )\n    } else {\n        leftSide = (\n            <PreviousApplicationMenu \n                title={title}\n                name={name}\n                date={date}\n                description={description}\n                buttonName={buttonName}\n                clicked={isBackInProgressHandler}\n            />\n    )}\n\n    if (id) {\n        center = (<ApplicationDetails \n            status={status}\n            id={id}\n            idInTitle={idInTitle}\n            jobDone={false}\n            isCanceled={true}\n        />)\n    } else {\n        center = (\n            <ApplicationForm \n                userName={userName}\n                greetings={\"здравствуйте! Опишите свою проблему\"}\n\n                subjectTitle={\"Тема*\"}\n                subjectName=\"subject\"\n                subjectChange={(event) => {inputHandler(event)}}\n                subjectRequired={true}\n                subjectPlaceholder={\"Опишите кратко суть проблемы\"}\n\n                departmentTitle={\"Отдел*\"}\n                departmentName=\"department\"\n                departmentChange={(event) => {inputHandler(event)}}\n                departmentRequired={true}\n                departmentPlaceholder={\"В какой отдел отправить заявку?\"}\n\n                messageTitle={\"Сообщение\"}\n                messageName=\"message\"\n                messageChange={(event) => {inputHandler(event)}}\n                messageRequired={true}\n                messagePlaceholder={\"Расскажите побробнее, например: утром вайфай еще работал, а после обеда выключается каждые пять минут отправляю письма, а они не доходят до получаетелей. Можно прикрепить к сообщению снимок экрана. Это поможет нам разобраться в проблеме.\"}\n\n                fileClicked={(event) => {chooseFile(event)}}\n                iconClick={activateFileInput}\n                fileRef={refFile}\n                fileName={fileNameState}\n                inputFileName=\"file\"\n                questionShow={hoverShowQuestion}\n                questionHide={hoverHideQuestion}\n                showQuestionModal={showQuestion}\n                questionText={\"Регистрационный номер заявки\"}\n                textTeamViewer={\"Пароль от TeamViewer\"}\n                showPassword={isShowPassword}\n                passwordName=\"password\"\n                passwordChange={(event) => {inputHandler(event)}}\n                passwordRequired={false}\n                passwordPlaceholder={\"Введите пароль\"}\n                toggleShowPassword={toogleShowPassword}\n\n                buttonName={\"Отправить заявку\"}\n                submitClicked={(event) => {submitFormHandler(event)}}\n                isDisabled={submitDisabled}\n\n            />\n    )}\n\n    return (\n        <LayoutApplicationPage\n            left={leftSide}\n            center={center}\n            top={top}\n            hideButton={!id}\n        >\n        </LayoutApplicationPage>\n    )\n}\n\nexport default ApplicationPage;","D:\\JavaScript\\projects\\it_support\\src\\Containers\\SearchResultsPage\\SearchResultsPage.js",["211","212","213"],"import React, { useState, useEffect } from 'react';\nimport LayoutSearchResults from '../../Components/SearchResultsComponents/LayoutSearchResults/LayoutSearchResults';\nimport ResultsTableWorker from '../../Components/SearchResultsComponents/ResultsTableWorker/ResultsTableWorker';\nimport './SearchResultsPage.css';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {\n    changePagination,\n    inputFilterDateFrom,\n    inputFilterDateTo, setActiveFilters, setActivePage\n} from \"../../Store/ApplicationsReducer/applicationsActions\";\nimport moment from 'moment';\nimport {getCompanyData} from \"../../Store/CompanyDataReducer/companyActions\";\n\nconst SearchResultsPage = () => {\n    const dispatch = useDispatch();\n    // let filtersCheck = {\n    //     isFilterStatus: useSelector(state => state.applications.data['filter'].status.length > 0) ? \"статус\" : null,\n    //     isFilterDepartment: useSelector(state => state.applications.data['filter'].departament.length > 0) ? \"отдел\" : null,\n    //     isFilterWorker: useSelector(state => state.applications.data['filter'].employee.trim() !== '') ? \"сотрудник\" : null,\n    //     isFilterNumber: useSelector(state => state.applications.data['filter'].number !== '') ? \"id заявки\" : null\n    // }\n\n    let filters = useSelector(state => state.applications.activeFilters);\n    // const [filters, setFilters] = useState([]); // после выбора фильтров они попадают в массив\n    // useEffect(() => {\n    //     let arr = [];\n    //     Object.keys(filtersCheck).map(el => {\n    //         if (filtersCheck[el]) {\n    //             arr.push(filtersCheck[el]);\n    //         }\n    //         // setFilters(arr);\n    //     })\n    //     console.log(arr)\n    //     dispatch(setActiveFilters(arr));\n    //\n    // }, [dispatch]);\n    // const isFilter = filters.length > 0;\n\n    useEffect(() => {\n        dispatch(getCompanyData('aad6d2c1b77801e269628f235dd7cbaa'));\n    }, [dispatch]);\n\n    const dateStart = 'ДД/ММ/ГГ';\n    const dateEnd = 'ДД/ММ/ГГ';\n    const company = useSelector(state => state.company.companyData);\n    let equipmentId;\n    let workerName;\n    let companyName;\n    if (company) {\n        equipmentId = company.director ? company.director.id : \"\";\n        workerName = \"Сид Вишес\"; // с базы не приходит контактного лица(((\n        companyName =  company.company;\n    }\n\n    const companyLogo = useSelector(state => state.company.companyData['logo']);\n    const [showQuestion, setShowQuestion] = useState(false);\n    const [calendarModal, setCalendarModal] = useState(false);\n\n    \n    \n    // const [activePage, setActivePage] = useState(1);\n    const activePage = useSelector(state => state.applications.activePage);\n    const count = useSelector(state => state.applications.count);\n\n    let pagesNumbers = Math.ceil(count / 10); // получать количество страниц для пагинации и кидать число в цикл, чтобы получить массив, нужен для отрисовки\n    // let pagesNumbers = 14;\n\n\n    let tableView;\n    let allPages;\n    let allFilters;\n    const hoverShowQuestion = () => {\n        setShowQuestion(true);\n    }\n    const hoverHideQuestion = () => {\n        setShowQuestion(false);\n    }\n\n    const chooseDateBtnSimple = (event) => {\n        const el = document.getElementsByClassName('LayoutSearchResults__btnDate');\n        for (let i = 0; i < el.length; i++) {\n            el[i].style.color = '#E34A4E';\n            el[i].style.background = 'white';\n        }\n        event.target.style.color = 'white';\n        event.target.style.background = '#E34A4E';\n        // let date = new Date();\n        // let year = date.getFullYear();\n        // let month = date.getMonth() + 1;\n        // if (month < 10) {\n        //     month = \"0\" + month;\n        // }\n        // let day = date.getDate()\n        // if (day < 10) {\n        //     day = \"0\" + day;\n        // }\n        // const today = `${year}${month}${day}`\n        if (event.target.textContent === 'Период') {\n            setCalendarModal(true);\n        } else {\n            let today = moment().format(\"YYYYMMDD\");\n            let chosenDate;\n            dispatch(changePagination(0));\n            dispatch(setActivePage(1));\n            switch (event.target.textContent) {\n                case \"Сегодня\":\n                    chosenDate = today;\n                    break;\n                case \"Вчера\":\n                    chosenDate = moment().subtract(1, 'days').format(\"YYYYMMDD\");\n                    break;\n                case \"Неделя\":\n                    chosenDate = moment().subtract(7, 'days').format(\"YYYYMMDD\");\n                    break;\n                case \"Месяц\":\n                    chosenDate = moment().subtract(1, 'months').format(\"YYYYMMDD\");\n                    break;\n                case \"Квартал\":\n                    chosenDate = moment().subtract(3, 'months').format(\"YYYYMMDD\");\n                    break;\n                case \"Полугодие\":\n                    chosenDate = moment().subtract(6, 'months').format(\"YYYYMMDD\");\n                    break;\n                default:\n                    break;\n            }\n            dispatch(inputFilterDateFrom(chosenDate));\n            dispatch(inputFilterDateTo(today));\n        }\n    }\n\n    \n    const closeModal = () => {\n        setCalendarModal(false);\n    }\n\n\n    const countPagination = () => {\n    // Отрисовка пагинации\n    if (pagesNumbers) {\n        if (pagesNumbers <= 8) {\n            let arr = [];\n            for (let i = 0; i < pagesNumbers; i++) {\n                arr[i] = i + 1;\n            }\n            allPages = arr.map(el => {\n                return (\n                    <p key={el} onClick={el !== \"...\" ? (event) => {choosePage(event)} : null} className={`${el !== \"...\" ? \"PaginationNumber\" : \"PaginationDots\"} ${el === 1 ? \"PaginationNumber--defaultActive\" : null}`}>\n                        {el}\n                    </p>\n                )\n            });\n        } else {\n            // сложная отрисовка пагинации относительно количества страниц, чтобы было видно начальные и последние страницы когда мы в центре, но количество элементов должно оставаться 8\n                let arr = [];\n                if (activePage < 5) {  \n\n                for (let i = 0; i < 8; i++) {\n                    // Когда кликнута страница меньше пятой, но страниц больше 8\n                        if (i > 4) {\n                            arr[i] = \"...\";\n                            arr[i + 1] = pagesNumbers - 1;\n                            arr[i + 2] = pagesNumbers;\n                            break;\n                        } else {\n                            arr[i] = i + 1;\n                        }\n                    }\n                     // Если активная страница равна 5\n                } else if (activePage === 5) {\n                    for (let i = 0; i < 8; i++) {\n                        if (i === 0) {\n                            arr[i] = \"...\";\n                        } \n                        else if (i < 5) {\n                            arr[i] = i + 1;\n                        } else {\n                            arr[i] = activePage + 1;\n                            arr[i + 1] = \"...\";\n                            arr[i + 2] = pagesNumbers;\n                            break;\n                        }\n                    }\n                }\n                     // Если активная страница выше 5 но не выше чем максимум - 3\n                else if (activePage > 5 && activePage <= pagesNumbers - 3) {\n                            arr[0] = 1;\n                            arr[1] = \"...\";\n                            arr[2] = activePage - 2;\n                            arr[3] = activePage - 1;\n                            arr[4] = activePage;\n                            arr[5] = activePage + 1;\n                            arr[6] = \"...\";\n                            arr[7] = pagesNumbers;\n                }\n                 // Если активная страница выше чем максимум - 3\n                 else if (activePage > pagesNumbers - 3) {\n                            arr[0] = 1;\n                            arr[1] = 2\n                            arr[2] = \"...\";\n                            arr[3] = pagesNumbers - 4;\n                            arr[4] = pagesNumbers - 3;\n                            arr[5] = pagesNumbers - 2;\n                            arr[6] = pagesNumbers - 1;\n                            arr[7] = pagesNumbers;\n        }\n                allPages = arr.map((el, i) => {  \n                    return (\n                        <p key={el + i} onClick={el !== \"...\" ? (event) => {choosePage(event)} : null} className={`${el !== \"...\" ? \"PaginationNumber\" : \"PaginationDots\"} ${el === activePage ? \"PaginationNumber--defaultActive\" : null}`}>\n                            {el}\n                        </p> \n                    )\n                });\n            }\n    }\n}\n\ncountPagination();\n\n    const choosePage = (event) => {\n        // const el = document.getElementsByClassName('PaginationNumber');\n        // for (let i = 0; i < el.length; i++) {\n        //     el[i].style.fontSize = '14px';\n        //     el[i].style.textDecoration = 'none';\n        //     el[i].style.fontWeight = 'normal';\n        // }\n        // event.target.style.fontSize = '18px';\n        // event.target.style.fontWeight = 'bold';\n        // event.target.style.textDecoration = 'underline';\n\n        dispatch(setActivePage(parseInt(event.target.textContent)));\n        countPagination();\n        // colorActivePage();\n    }\n    const colorActivePage = () => {\n        const el = document.getElementsByClassName('PaginationNumber');\n        for (let i = 0; i < el.length; i++) {\n            el[i].style.fontSize = '14px';\n            el[i].style.textDecoration = 'none';\n            el[i].style.fontWeight = 'normal';\n        }\n        if (pagesNumbers <= 8) {\n            el[activePage - 1].style.fontSize = '18px';\n            el[activePage - 1].style.fontWeight = 'bold';\n            el[activePage - 1].style.textDecoration = 'underline';\n        } else {\n            if (activePage < 4) {\n                el[activePage - 1].style.fontSize = '18px';\n                el[activePage - 1].style.fontWeight = 'bold';\n                el[activePage - 1].style.textDecoration = 'underline';\n            } else if (activePage === pagesNumbers) {\n                el[6].style.fontSize = '18px';\n                el[6].style.fontWeight = 'bold';\n                el[6].style.textDecoration = 'underline';\n            } else if (activePage > pagesNumbers - 3) {\n                el[6 - (pagesNumbers - activePage)].style.fontSize = '18px';\n                el[6 - (pagesNumbers - activePage)].style.fontWeight = 'bold';\n                el[6 - (pagesNumbers - activePage)].style.textDecoration = 'underline';\n            } else {\n                el[3].style.fontSize = '18px';\n                el[3].style.fontWeight = 'bold';\n                el[3].style.textDecoration = 'underline';\n            }\n        }\n        // console.log(el[0]);\n    }\n\n    const paginationRight = () => {\n        if (activePage !== pagesNumbers) {\n            dispatch(setActivePage(activePage + 1));\n            // countPagination();\n            // colorActivePage();\n        }\n    };\n    const paginationLeft = () => {\n        if (activePage !== 1) {\n            dispatch(setActivePage(activePage - 1));\n            // countPagination();\n            // colorActivePage();\n        }\n    };\n\n\n\n    tableView = (\n    <>\n        <ResultsTableWorker />\n    </>);\n\n\n\n\n\n    if (filters.length !== 0) {\n        // Внизу страницы отображются активные фильтры, здесь они и рисуются\n        allFilters = filters.map((el, i) => {\n            return (\n                <div className=\"LayoutSearchResults__filters\" key={el}>\n                    <div className=\"FilterElement\">\n                        {el}\n                    </div>\n                    {filters.length > 1 && i < filters.length - 1 ? <p className=\"FilterElement__plus\">+</p> : null}\n                </div>\n            )\n        })\n    }\n    useEffect(() => {\n        const el = document.getElementsByClassName('PaginationNumber');\n        if (el[0]) {\n            colorActivePage();\n        }\n    }, [activePage]);\n\n    useEffect(() => {\n        dispatch(changePagination((activePage - 1) * 10));\n    }, [activePage]);\n\n    return (\n            <LayoutSearchResults\n                equipmentId={equipmentId}\n                workerName={workerName}\n                companyName={companyName}\n                companyLogo={companyLogo}\n\n                dateEngineClick={(event) => {chooseDateBtnSimple(event)}}\n                datePeriodClick={(event) => {chooseDateBtnSimple(event)}}\n\n\n                dateValueStart={dateStart}\n                dateValueEnd={dateEnd}\n\n                questionShow={hoverShowQuestion}\n                questionHide={hoverHideQuestion}\n                showQuestionModal={showQuestion}\n                questionText={\"Укажите регистрационный номер заявки для быстрого поиска\"}\n            \n\n                isFilter={filters.length > 0}\n                filters={allFilters}\n                morePages={Math.ceil(count / 10) > 1}\n                paginationClickLeft={paginationLeft}\n                paginationClickRight={paginationRight}\n                pagesNumbers={allPages}\n\n            >\n                {calendarModal ? \n                <div>\n                    <div onClick={closeModal} className=\"Modal__bg\" />\n                    <div className=\"Modal\">\n                        <button>BTN</button>\n                        MODAL\n                    </div>\n                </div>: null}\n                {tableView}\n            </LayoutSearchResults>\n    )\n}\n\nexport default SearchResultsPage;","D:\\JavaScript\\projects\\it_support\\src\\Components\\ApplicationPageComponents\\ErrorWindow\\ErrorWindow.js",["214","215","216","217","218","219","220","221","222"],"import React from 'react';\nimport './ErrorWindow.css';\n\nconst ErrorWindow = () => {\n    return (\n        <div className=\"ErrorWindow\">\n            <div className=\"ErrorWindow__container\">\n                <h1 className=\"ErrorWindow__title\">Что-то пошло не так</h1>\n                <p className=\"ErrorWindow__text\">Страница не загружается. Не отчаивайтесь!</p>\n                <p className=\"ErrorWindow__text\">Вы можете оставить заявку в приложении <a href=\"#\" className=\"ErrorWindow__link\">TeamViewer</a> или по телефону:</p>\n              \n                <div className=\"ErrorWindow__contacts\">\n                    <div className=\"ErrorWindow__contactSide\">\n                        <p className=\"ErrorWindow__phone\">+7 727 390 11 12</p>\n                        <p className=\"ErrorWindow__city\">в Алматы</p>\n                    </div>\n                    <div className=\"ErrorWindow__contactSide\">\n                        <p className=\"ErrorWindow__phone\">+7 717 264 61 12</p>\n                        <p className=\"ErrorWindow__city\">в Нур-Султане</p>\n                    </div>\n                </div>\n                <div className=\"ErrorWindow__socialNetwork\">\n                    <p className=\"ErrorWindow__textSocial\">Мы в социальных сетях</p>\n                    <a href=\"#\" className=\"ErrorWindow__icon ErrorWindow__icon--instagram\"></a>\n                    <a href=\"#\" className=\"ErrorWindow__icon ErrorWindow__icon--facebook\"></a>\n                    <a href=\"#\" className=\"ErrorWindow__icon ErrorWindow__icon--linkedin\"></a>\n                    <a href=\"#\" className=\"ErrorWindow__icon ErrorWindow__icon--youtube\"></a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ErrorWindow;","D:\\JavaScript\\projects\\it_support\\src\\Components\\SearchResultsComponents\\FullApplicationInfo\\FullApplicationInfo.js",["223","224"],"import React, { useState } from 'react';\nimport './FullApplicationInfo.css';\nimport {push} from 'connected-react-router';\nimport { useDispatch } from \"react-redux\";\n\n\nconst FullApplicationInfo = (props) => {\n    const dispatch = useDispatch();\n    // const [index, setIndex] = useState(props.index); // передаем индекс и вытаскиваем из массива заявок нужную, всего в массиве 10 заявок, далее осуществлять дозагрузку заявок, также по 10 штук\n    // const applications = props.applications;\n    // Получаем по id подробные данные заявки\n    // const application = { // вот здесь будет использована полученная информация с редакса по id\n    //\n    //     date: \"03. 11. 2019, 10:50\",\n    //     status: \"завершено\",\n    //     subject:\"Не работает вайфай\",\n    //     department: \"Удаленная поддержка\",\n    //     specialist: \"Александра Панарина\",\n    //     specialistId:\"IT 152\",\n    //     problem: \"Отправляю письма, а они не доходят до получателей, адреса ввожу правильно. Отчеты о возврате письма не приходят, то есть письмо вроде ушло, но в отправленных его нет, и когда узнаешь, пришло письмо или не пришло, то получатель говорит, что никакого письма не получал.\",\n    //     solution: \"Были введены неправи льные настройки VPN. Исправили настройки на каждом Были введены неправи льные настройки VPN. Исправили настройки на каждом Были введены неправи льные настройки VPN. Исправили настройки на каждом \",\n    //     classLikeDislike: 'like',\n    //     isComment: true,\n    //     comment: 'Comment',\n    //     workerId: \"ID Устройства 3245875\",\n    //     specialistPhoto: \"https://transitiontownguildford.files.wordpress.com/2015/06/wall-e.jpg\",\n    //     applicationId: \"IT-011220-039862\",\n    //     worker: 'Примерный рабочий',\n    //     fileImage: \"https://transitiontownguildford.files.wordpress.com/2015/06/wall-e.jpg\"\n    // };\n    // let color;\n\n\n\n    const application = props.application;\n    // console.log(applications);\n\n\n    const [showQuestionComment, setShowQuestionComment] = useState(false);\n    const [showQuestionApplicationId, setShowQuestionApplicationId] = useState(false);\n    const [showQuestionSpecialist, setShowQuestionSpecialist] = useState(false);\n    const [isFileImageModal, setIsFileImageModal] = useState(false);\n    \n    const hoverShowQuestionComment = () => {\n        setShowQuestionComment(true);\n    }\n    const hoverHideQuestionComment = () => {\n        setShowQuestionComment(false);\n    }\n    const hoverShowQuestionApplicationId = () => {\n        setShowQuestionApplicationId(true);\n    }\n    const hoverHideQuestionApplicationId = () => {\n        setShowQuestionApplicationId(false);\n    }\n    const hoverShowQuestionSpecialist = () => {\n        setShowQuestionSpecialist(true);\n    }\n    const hoverHideQuestionSpecialist = () => {\n        setShowQuestionSpecialist(false);\n    }\n    // const closeThisWindow = () => {\n    //     {}\n    // }\n    const toggleModalImage = () => {\n        setIsFileImageModal(!isFileImageModal);\n    }\n    // const goLeft = () => {\n    //     setIndex(index - 1);\n    // }\n    // const goRight = () => {\n    //     setIndex(index + 1);\n    // }\n    // let color;\n    // let date;\n    // let status;\n    // let applicationId;\n    // let specialistPhoto;\n    // let specialist;\n    // let specialistId;\n    // let workerId;\n    // let classLikeDislike;\n    // let isComment;\n    // let department;\n    // let subject;\n    // let solution;\n    // let fileImage;\n    // let problem;\n    // if (application) {\n    //     color = application.status === 'запланировано' ? \"#E82024\" : application.status === 'в работе' ? \"#F3BB1C\" : application.status === 'завершено' ? \"#3CC13B\" : application.status === 'отменено' ? '#828282' : null;\n    //     date = application.date;\n    //     status = application.status;\n    //     applicationId = application.applicationId;\n    //     specialistPhoto = application.specialistPhoto;\n    //     specialist = application.specialist;\n    //     specialistId = application.specialistId;\n    //     workerId = application.workerId;\n    //     classLikeDislike = application.classLikeDislike;\n    //     isComment = application.isComment;\n    //     department = application.department;\n    //     subject = application.subject;\n    //     solution = application.solution;\n    //     fileImage = application.fileImage;\n    //     problem = application.problem;\n    // }\n    let color;\n    let date;\n    let status;\n    let applicationId;\n    let specialistPhoto;\n    let specialist;\n    let specialistId;\n    let workerId;\n    let classLikeDislike;\n    let isComment;\n    let department;\n    let subject;\n    let solution;\n    let fileImage;\n    let problem;\n    if (application) {\n        color = application.status === 'Запланировано' ? \"#E82024\" : application.status === 'В работе' ? \"#F3BB1C\" : application.status === 'Завершено' ? \"#3CC13B\" : application.status === 'Отменено' ? '#828282' : null;\n        date = application.dateCreate;\n        status = application.status;\n        applicationId = application.number;\n        specialistPhoto = application.implementer['photo'];\n        specialist = application.implementer['name'];\n        specialistId = application.implementer['id'];\n        workerId = application.employee['id'];\n        classLikeDislike = application.rating['value'] === 1 ? \"like\" : application.rating['value'] === -1 ? \"dislike\" : \"\";\n\n        isComment = true;\n        department = application.departament;\n        subject = application.subject;\n        solution = application.outcome;\n        fileImage = application.images[0];\n        problem = application.details;\n    }\n\n    return (\n        <>\n            <div className=\"FullApplicationInfo\">\n                <div className=\"FullApplicationInfo__header\">\n                    <div onClick={props.clickToClose} className=\"FullApplicationInfo__close\" />\n                    <div className=\"FullApplicationInfo__statusDateBlock\">\n                        <p className=\"ResultsItemWorker__text\">{date}</p>\n                        <p style={{background: color}} className=\"FullApplicationInfo__status\">{status}</p>\n                    </div>\n\n                    <div className=\"FullApplicationInfo__ApplicationIdBlock\">\n                        <p className=\"ResultsItemWorker__text--red\">Номер заявки:</p>\n                        <div className=\"ResultsItemWorker__applicationId\">\n                            <p className=\"ResultsItemWorker__text--red  ResultsItemWorker__text--applicationId\">{applicationId}</p>\n                            <div className=\"FullApplicationInfo__question--icon\" onMouseEnter={hoverShowQuestionApplicationId} onMouseLeave={hoverHideQuestionApplicationId}>\n                                <div style={showQuestionApplicationId ? {\"display\" : \"block\"} : {\"display\" : \"none\"}} className=\"FullApplicationInfo__comment--modal\">\n                                    <p className=\"FullApplicationInfo__comment--modal-text\">Регистрационный номер заявки</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"FullApplicationInfo__workerIdBlock\">\n                        <div className=\"FullApplicationInfo__workerIdBlock--imageBlock\">\n                            <div className=\"FullApplicationInfo__image\" style={{background: `#E34A4E  url(data:image/jpg;base64,${specialistPhoto})center / cover no-repeat`}} />\n\n                            <div className=\"FullApplicationInfo__workerIdAndQuestionBlock\">\n                                <p className=\"FullApplicationInfo__text\">{specialist}</p>\n                                <div className=\"FullApplicationInfo__specialistIdBlock\">\n                                    <p className=\"FullApplicationInfo__id\">{specialistId}</p>\n                                    <div className=\"FullApplicationInfo__question--icon\" onMouseEnter={hoverShowQuestionSpecialist} onMouseLeave={hoverHideQuestionSpecialist}>\n                                        <div style={showQuestionSpecialist ? {\"display\" : \"block\"} : {\"display\" : \"none\"}} className=\"FullApplicationInfo__comment--modal\">\n                                            <p className=\"FullApplicationInfo__comment--modal-text\">У каждого специалиста IT Support есть уникальный IT-номер, во-первых это красиво, а во-вторых он совпадает с внутренним номером телефона. Вы всегда сможете позвонить напрямую исполнителю заявки или написать электронное письмо.</p>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                        </div>\n\n                    </div>\n\n                    <div className=\"FullApplicationInfo__workerIdBlock\">\n                        <p className=\"FullApplicationInfo__text\">{specialist}</p>\n                        <p className=\"FullApplicationInfo__id\">{workerId}</p>\n                    </div>\n\n\n                    <div className=\"FullApplicationInfo__likeAndCommentBlock\">\n\n                        <div className=\"FullApplicationInfo__likeAndCommentBlock--icons\">\n                            <div className={`FullApplicationInfo__icon--widthLikeDislike FullApplicationInfo__icon--${classLikeDislike}`} />\n                            <div className={`${isComment ? \"FullApplicationInfo__comment\" : null} FullApplicationInfo__comment--width`} onMouseEnter={isComment ? hoverShowQuestionComment: null} onMouseLeave={isComment ? hoverHideQuestionComment : null}>\n                                <div style={showQuestionComment ? {\"display\" : \"block\"} : {\"display\" : \"none\"}} className=\"FullApplicationInfo__comment--modal\">\n                                    <p className=\"FullApplicationInfo__comment--modal-text\">Пользователь оставил коментарий к этой задаче, для того чтобы посмотреть его проскрольте описание заявки до конца.</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"FullApplicationInfo__content\">\n                    <div className=\"FullApplicationInfo__content--left\">\n                        <h2 className=\"FullApplicationInfo__content__title\">Детали заявки</h2>\n                        <div className=\"FullApplicationInfo__content__head\">\n                            <div className=\"FullApplicationInfo__content__head--sides\">\n                                <p className=\"FullApplicationInfo__content__text--title\">Ответственный отдел</p>\n                                <p className=\"FullApplicationInfo__content__text\">{department}</p>\n                            </div>\n                            <div className=\"FullApplicationInfo__content__head--sides\">\n                                <p className=\"FullApplicationInfo__content__text--title\">Тема</p>\n                                <p className=\"FullApplicationInfo__content__text\">{subject}</p>\n                            </div>\n                        </div>\n                        <p className=\"FullApplicationInfo__content__text--title\">Подробности</p>\n                        <div>\n                            <p className=\"FullApplicationInfo__content__text\">{problem}</p>\n\n                        </div>\n\n\n                        <p className=\"FullApplicationInfo__content__text--title\">Результат</p>\n                        <div >\n                            <p className=\"FullApplicationInfo__content__text\">{solution}</p>\n                        </div>\n\n\n                    </div>\n\n                    <div className=\"FullApplicationInfo__content--right\">\n                        <h2 className=\"FullApplicationInfo__content--title\">\n                            Прикрепленные файлы:\n                        </h2>\n                        <div className=\"FullApplicationInfo__fileImage--canvas\">\n                            {fileImage ? <img onClick={toggleModalImage} className=\"FullApplicationInfo__fileImage\" src={fileImage} alt={subject}/> : <p className=\"FullApplicationInfo__content__text\">Файлов нет</p> }\n                        </div>\n\n\n                        <p className=\"FullApplicationInfo__backToWorkLink\">Вернуть заявку в работу</p>\n                    </div>\n                </div>\n\n\n                <div className=\"FullApplicationInfo__footer\" >\n                    <div className=\"FullApplicationInfo__btnLeft\" onClick={props.goLeft}>\n                        <div className=\"FullApplicationInfo__arrowLeft\" />\n                        <p className=\"FullApplicationInfo__btnTextLeft\">\n                            Вернуться к предыдущей заявке\n                        </p>\n                    </div>\n\n                    <div className=\"FullApplicationInfo__btnRight\" onClick={props.goRight}>\n                        <p className=\"FullApplicationInfo__btnTextRight\">\n                            Перейти к следующей заявке\n                        </p>\n                        <div className=\"FullApplicationInfo__arrowRight\" />\n                    </div>\n                </div>\n            </div>\n            {isFileImageModal ? <div onClick={toggleModalImage} className=\"FullApplicationInfo__fileImage--modal\">\n                <div className=\"FullApplicationInfo__fileImage--modalCanvas\">\n                    <img className=\"FullApplicationInfo__fileImage\" src={fileImage} alt={subject}/>\n                </div>\n            </div> : null}\n        </>\n    )\n}\n\nexport default FullApplicationInfo;","D:\\JavaScript\\projects\\it_support\\src\\Components\\ApplicationPageComponents\\ApplicationDetails\\ApplicationDetails.js",["225"],"import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addComment } from '../../../Store/ApplicationsReducer/applicationsActions';\nimport BlueButton from '../BlueButton/BlueButton';\nimport './ApplicationDetails.css';\n\n\nconst ApplicationDetails = (props) => {\n\n    const status = props.status;\n    const id = props.id;\n    const dispatch = useDispatch();\n    const comments = useSelector(state => state.applications.comments); //Получить все комментарии по ID\n    const [oneComment, setOneComment] = useState();\n    const [messageClassToggle, setMessageClassToggle] = useState(\"messageClassToggleHidden\");\n    const [messageClassButtonText, setMessageClassButtonText] = useState('показать подробнее');\n\n    const [resultClassToggle, setResultClassToggle] = useState(\"messageClassToggleHidden\");\n    const [resultClassButtonText, setResultClassButtonText] = useState('показать подробнее');\n\n    let jobDone = props.jobDone;\n    let isCanceled = props.isCanceled;\n\n\n    const department = \"Удаленная поддержка\"; // Получить по id\n    const subject = 'Не работает почта'; // Получить по id\n    const message = 'Отправляю письма, а они не доходят до получателей, адреса ввожу правильно. Отчеты о возврате письма не приходят, то есть письмо вроде ушло, но в отправленных его нет, и когда узнаешь, пришло письмо или не пришло, то получатель говорит, что никакого письма не получал. Хочу заметить, что это началось после того // Отправляю письма, а они не доходят до получателей, адреса ввожу правильно. Отчеты о возврате письма не приходят, то есть письмо вроде ушло, но в отправленных его нет, и когда узнаешь, пришло письмо или не пришло, то получатель говорит, что никакого письма не получал. Хочу заметить, что это началось после того  // ни не доходят до получателей, адреса ввожу правильно. Отчеты о возврате письма не приходят, то есть письмо вроде ушло, но в отправленных его нет, и когда узнаешь, пришло письмо или не пришло, то получатель говорит, что никакого письма не получал. Хочу заметить, что это началось после того // Отправляю письма, а они не доходят до получателей, адреса ввожу правильно. Отчеты о возврате письма не приходят, то есть письмо вроде ушло, но в отправленных его нет, и когда узнаешь, пришло письмо или не пришло, то получатель говорит, что никакого письма не получал. Хочу заметить, что эт после '; // Получить по id\n    const result = 'Были введены неправильные настройки VPN. Исправили настройки на каждом компьтере в отделе, почта снова работает. Почистили корпоративную почту от спама и рассылок. Просим вас регулярно приводить в порядок почтовое хранилище и избавляться от лишних файлов во избежание падения почтовых серверов... показать больше // Были введены неправильные настройки VPN. Исправили настройки на каждом компьтере в отделе, почта снова работает. Почистили корпоративную почту от спама и рассылок. Просим вас регулярно приводить в порядок почтовое хранилище и избавляться от лишних файлов во избежание падения почтовых серверов... показать больше';\n    let allComments;\n    if (comments) {\n        allComments = (\n            comments.map(el => {\n                return <div\n                    key={el.id}\n                    className=\"Comment\"\n                >\n                    <p className=\"Comment__date\">{`${el.date}`}</p>\n                    <p className=\"Comment__content\">{`${el.content}`}</p>\n                </div>\n            })\n    )}\n\n    const textAreaHandler = (event) => {\n        setOneComment(event.target.value);\n    }\n    const applyComment = () => {\n        if (oneComment === undefined || oneComment.trim() === '') {\n            return;\n        }\n        const obj = {\n            id: Math.random(),\n            date: new Date(),\n            content: oneComment\n        }\n        dispatch(addComment(obj));\n        setOneComment('');\n    }\n    const textShowToggle = () => {\n        if (messageClassToggle === 'messageClassToggleHidden') {\n            setMessageClassToggle('messageClassToggleOpen');\n            setMessageClassButtonText('скрыть текст');\n        } else {\n            setMessageClassToggle('messageClassToggleHidden');\n            setMessageClassButtonText('показать подробнее');\n        }\n    }\n    const resultShowToggle = () => {\n        if (resultClassToggle === 'messageClassToggleHidden') {\n            setResultClassToggle('messageClassToggleOpen');\n            setResultClassButtonText('скрыть текст');\n        } else {\n            setResultClassToggle('messageClassToggleHidden');\n            setResultClassButtonText('показать подробнее');\n        }\n    }\n\n    let centerComponent;\n\n     // possible statusses 'new' 'in_progress' 'complete' 'canceled'\n    if (status === 'new') {\n        centerComponent = (\n        <div className=\"ApplicationDetails\">\n            <h2 className=\"ApplicationDetails__title\">Детали заявки {props.idInTitle}</h2>\n            <div className=\"ApplicationDetails__head\">\n                <div className=\"ApplicationDetails__head--sides\">\n                    <p className=\"ApplicationDetails__text--title\">Ответственный отдел</p>\n                    <p className=\"ApplicationDetails__text\">{department}</p>\n                </div>\n                <div className=\"ApplicationDetails__head--sides\">\n                    <p className=\"ApplicationDetails__text--title\">Тема</p>\n                    <p className=\"ApplicationDetails__text\">{subject}</p>\n                </div>\n            </div>\n                <p className=\"ApplicationDetails__text--title\">Подробности</p>\n            <div className={messageClassToggle}>\n                <p className=\"ApplicationDetails__text\">{message}</p>\n                <div onClick={textShowToggle} className=\"ApplicationDetails__message--button\"><span className=\"ApplicationDetails__text\">... </span>{messageClassButtonText}</div>\n            </div>\n            {jobDone || isCanceled\n                    ?\n                <>\n                     <p className=\"ApplicationDetails__text--title\">Результат</p>\n                    <div className={resultClassToggle}>\n                        <p className=\"ApplicationDetails__text\">{result}</p>\n                        <div onClick={resultShowToggle} className=\"ApplicationDetails__message--button\"><span className=\"ApplicationDetails__text\">... </span>{resultClassButtonText}</div>\n                    </div>\n                </>\n                    :\n                <>\n                    <textarea value={oneComment} placeholder=\"Если вы хотите дополнить заявку, напишите комментарий\" onChange={(event) => {textAreaHandler(event)}} className=\"ApplicationDetails__textarea\"></textarea>\n                    <div className=\"ApplicationDetails__btn\">\n                        <BlueButton \n                            name=\"Отправить сообщение\"\n                            clicked={() => {applyComment()}}\n                        />\n                    </div>\n                    {allComments}\n                </> \n            }\n        </div>\n        )}\n\n    return (\n        <>\n            {centerComponent}\n        </>\n    )\n}\n\n\nexport default ApplicationDetails;","D:\\JavaScript\\projects\\it_support\\src\\Components\\ApplicationPageComponents\\PreviousApplicationMenu\\PreviousApplicationMenu.js",[],"D:\\JavaScript\\projects\\it_support\\src\\Components\\ApplicationPageComponents\\ApplicationStatus\\ApplicationStatus.js",["226"],"import React from 'react';\nimport './ApplicationStatus.css';\n\n\nconst ApplicationStatus = (props) => {\n    const id = props.id;\n    let leftSide;\n    let specialistFound = props.specialistFound; //take from state?\n    let jobDone = props.jobDone; //take from state?\n    let isCanceled = props.isCanceled;\n\n     // possible statusses 'new' 'in_progress' 'complete' 'canceled'\n        leftSide = (\n        <div className=\"ApplicationStatus\">\n\n            <div className=\"ApplicationStatus__lineBlock\">\n                <div className=\"ApplicationStatus__circle\" />\n                <div className={`ApplicationStatus__line ${specialistFound ? null : \"ApplicationStatus__unactive--circle\"}`} />\n                <div className={`ApplicationStatus__circle ${specialistFound ? null : \"ApplicationStatus__unactive ApplicationStatus__unactive--circle\"}`}>{specialistFound ? null : \"2\"}</div>\n                <div className={`ApplicationStatus__line ${jobDone || isCanceled ? null : \"ApplicationStatus__unactive--circle\"}`} />\n                <div className={`ApplicationStatus__circle ${jobDone || isCanceled ? null : \"ApplicationStatus__unactive ApplicationStatus__unactive--circle\"} ${isCanceled ? \"ApplicationStatus__canceled\" : null}`}>{jobDone || isCanceled ? null : \"3\"}</div>\n            </div>\n\n            <div className=\"ApplicationStatus__textBlock\">\n                <div className=\"ApplicationStatus__textItem\">\n                    <h3 className=\"ApplicationStatus__title\">Заявка в обработке</h3>\n                    <p className=\"ApplicationStatus__text\">Мы назначим ИТ-специалиста в ближайшее время. Обычно это занимает не больше 15 минут</p>\n                </div>\n                <div className=\"ApplicationStatus__textItem\">\n                    <h3 className={`ApplicationStatus__title ${specialistFound ? null : \"ApplicationStatus__unactive\"}`}>ИТ-специалист назначен</h3>\n                    <p className={`ApplicationStatus__text ApplicationStatus__text--pushDown ${specialistFound ? null : \"ApplicationStatus__unactive\"}`}>Наш сотрудник скоро свяжется с вами и решит проблему</p>\n                </div>\n                {isCanceled \n                    ? \n                <div className=\"ApplicationStatus__textItem\">\n                    <h3 className=\"ApplicationStatus__title\" >Заявка отменена</h3>\n                    <p className=\"ApplicationStatus__link--whenCanceled\">Вернуть заявку в работу</p>\n                </div>\n                    :\n                <div className=\"ApplicationStatus__textItem\">\n                    <h3 className={`ApplicationStatus__title ${jobDone ? null : \"ApplicationStatus__unactive\"}`}>Заявка закрыта</h3>\n                    <p className={`ApplicationStatus__text ${jobDone ? null : \"ApplicationStatus__unactive\"}`}>Поделитесь с нами обратной связью</p>\n                </div>\n            }\n            </div>\n        </div>\n        );\n\n    return (\n        <>\n            {leftSide}\n        </>\n    )\n}\n\nexport default ApplicationStatus;","D:\\JavaScript\\projects\\it_support\\src\\Components\\ApplicationPageComponents\\LayoutApplicationPage\\LayoutApplicationPage.js",[],"D:\\JavaScript\\projects\\it_support\\src\\Components\\ApplicationPageComponents\\ApplicationForm\\ApplicationForm.js",[],"D:\\JavaScript\\projects\\it_support\\src\\Components\\SearchResultsComponents\\LayoutSearchResults\\LayoutSearchResults.js",[],"D:\\JavaScript\\projects\\it_support\\src\\Components\\SearchResultsComponents\\ResultsTableWorker\\ResultsTableWorker.js",["227","228","229","230","231","232"],"import React, { useState, useEffect } from 'react';\nimport ModalWorker from '../ModalWorker/ModalWorker';\nimport ModalDepartment from '../ModalDepartment/ModalDepartment';\nimport ModalStatus from '../ModalStatus/ModalStatus';\nimport NoResults from '../NoResults/NoResults';\nimport ResultsItemWorker from './ResultsItemWorker/ResultsItemWorker';\nimport './ResultsTableWorker.css';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {push} from 'connected-react-router'\nimport FullApplicationInfo from \"../FullApplicationInfo/FullApplicationInfo\";\nimport {\n    changePagination,\n    getTenApplications,\n    setActiveFilters, setActivePage\n} from \"../../../Store/ApplicationsReducer/applicationsActions\";\n\nconst ResultsTableWorker = (props) => {\n    const dispatch = useDispatch();\n\n    // const body = {\n    //     clientId: \"1267-02-00020\",\n    //     hash: \"68ace46062c33b61ac87a05e44a48198\",\n    //     filter: {\n    //         date: {\n    //             from: \"20200101\",\n    //             to: \"20201231 \"\n    //         },\n    //         status: [],\n    //         employee: \" \",\n    //         departament: [],\n    //         number: \"\"\n    //     },\n    //     limit: 10,\n    //     start: 0\n    // }\n    const data = useSelector(state => state.applications.data);\n\n    useEffect(() => {\n        dispatch(getTenApplications(data));\n    }, [data]);\n\n\n    const [indexForModal, setIndexForModal] = useState();\n    let allApplications;\n    const user = {\n        role: 'director'\n    }\n    // ResultsTableWorker__filterIcon--active\n    // В редаксе будут хранится фильтры, по отдельности статус и отдел, все что будет выбрано в модальном окне попдает в стэйт и иконка закрашивается в черный\n    const isFilterStatus = useSelector(state => state.applications.data['filter'].status.length > 0);\n    const isFilterDepartment = useSelector(state => state.applications.data['filter'].departament.length > 0);\n    const isFilterWorker = useSelector(state => state.applications.data['filter'].employee.trim() !== '');\n    const filters = useSelector(state => state.applications.data['filter']);\n\n    let filtersCheck = {\n        isFilterStatus: useSelector(state => state.applications.data['filter'].status.length > 0) ? \"статус\" : null,\n        isFilterDepartment: useSelector(state => state.applications.data['filter'].departament.length > 0) ? \"отдел\" : null,\n        isFilterWorker: useSelector(state => state.applications.data['filter'].employee.trim() !== '') ? \"сотрудник\" : null,\n        isFilterNumber: useSelector(state => state.applications.data['filter'].number !== '') ? \"id заявки\" : null,\n        isFilterDate: useSelector(state => state.applications.data['filter'].date.from !== \"20200101\" ? \"дата\" : null)\n    }\n\n    const showFilters = () => {\n        let arr = [];\n        Object.keys(filtersCheck).map(el => {\n            if (filtersCheck[el]) {\n                arr.push(filtersCheck[el]);\n            }\n            // setFilters(arr);\n        })\n        console.log(\"FILTERS \", arr)\n        dispatch(setActiveFilters(arr));\n\n    };\n    useEffect(() => {\n        showFilters();\n        console.log('SHOWING FILTERS');\n    }, [filters]);\n\n\n    const [isStatusModal, setIsStatusModal] = useState(false);\n    const [isDepartmentModal, setIsDepartmentModal] = useState(false);\n    const [isWorkerModal, setIsWorkerModal] = useState(false);\n    const [isFullInfoModal, setIsFullInfoModal] = useState((false));\n    // const [oneApplication, setOneApplication] = useState({});\n\n    const toggleStatusModal = () => {\n        setIsStatusModal(!isStatusModal);\n        setIsDepartmentModal(false);\n        setIsWorkerModal(false);\n        // showFilters();\n    }\n    const toggleDepartmentModal = () => {\n        setIsDepartmentModal(!isDepartmentModal);\n        setIsStatusModal(false);\n        setIsWorkerModal(false);\n        // showFilters();\n    }\n    const toggleWorkerModal = () => {\n        setIsWorkerModal(!isWorkerModal);\n        setIsStatusModal(false);\n        setIsDepartmentModal(false);\n        // showFilters();\n    }\n    const seeFullApplicationInfo = (index) => {\n        setIndexForModal(index)\n        // setOneApplication(applications[index]);\n        setIsFullInfoModal(!isFullInfoModal);\n\n    }\n    const applications = useSelector(state => state.applications.applications);\n\n    if (applications !== null) {\n        allApplications = applications.map((el, i) => {\n\n            const status = el.status;\n            const solution = el.outcome.substring(0, 50) + \"...\";\n            return <ResultsItemWorker\n                        key={el._id}\n                        isLastFrame={applications.length - 1 === i}\n                        statusColor={status === 'Запланировано' ? \"#E82024\" : status === 'В работе' ? \"#F3BB1C\" : status === 'Завершено' ? \"#3CC13B\" : status === 'Отменено' ? '#828282' : null}\n                        date={el.dateCreate}\n                        status={status}\n                        subject={el.subject}\n                        department={el.departament}\n                        specialist={el.implementer['name']}\n                        specialistId={el.implementer['id']}\n                        contentShort={solution}\n                        index={i}\n                        classLikeDislike={el.rating['value'] === 1 ? \"like\" : el.rating['value'] === -1 ? \"dislike\" : ''}\n                        isComment={el.rating['comment']}\n                        openSeeDetails={() => {seeFullApplicationInfo(i)}}\n                        isDirector={user.role === 'director'}\n                        workerId={el.employee['id']}\n                        worker={el.employee['name']}\n                    />\n        });\n    }else {\n        allApplications = (\n            <NoResults />\n        )\n    }\n    // if (applications.length > 0) {\n    //     allApplications = applications.map((el, i) => {\n    //\n    //         const solution = el.solution.substring(0, 50) + \"...\";\n    //         return <ResultsItemWorker\n    //             key={i}\n    //             isLastFrame={applications.length - 1 === i}\n    //             statusColor={el.status === 'запланировано' ? \"#E82024\" : el.status === 'в работе' ? \"#F3BB1C\" : el.status === 'завершено' ? \"#3CC13B\" : el.status === 'отменено' ? '#828282' : null}\n    //             date={el.date}\n    //             status={el.status}\n    //             subject={el.subject}\n    //             department={el.department}\n    //             specialist={el.specialist}\n    //             specialistId={el.specialistId}\n    //             contentShort={solution}\n    //             index={i}\n    //             classLikeDislike={el.classLikeDislike}\n    //             isComment={el.isComment}\n    //             openSeeDetails={() => {seeFullApplicationInfo(i)}}\n    //             isDirector={user.role === 'director'}\n    //             workerId={el.workerId}\n    //             worker={el.worker}\n    //         />\n    //     });\n    // } else {\n    //     allApplications = (\n    //         <NoResults />\n    //     )\n    // }\n    const currentPage = useSelector(state => state.applications.data['start']);\n    // console.log(currentPage)\n    useEffect(() => {\n        dispatch(setActivePage((currentPage + 10) / 10));\n        if (indexForModal >=9) {\n            setIndexForModal(0);\n        }\n        if (indexForModal <=0) {\n            setIndexForModal(9);\n        }\n    }, [currentPage]);\n\n    // useEffect(() => {\n    //     if (indexForModal >=9) {\n    //         setIndexForModal(0);\n    //         setOneApplication(applications[0]);\n    //     }\n    // }, [indexForModal]);\n\n    const goLeft = async () => {\n\n        // потом будет проверка на то что если start в оффсете будет 0 и индекс 0 тогда стоп.\n        if (indexForModal <= 0 && currentPage == 0) return;\n\n            if (indexForModal <=0) {\n                // ПРИХОДИТСЯ КЛИКАТЬ ДВАЖДЫ НА ГРАНИЦАХ, ПОКА НЕ ЗНАЮ КАК РЕШИТЬ\n                // ВНИМАНИЕ ЕСЛИ КОЛИЧЕСТВО ВЫВОДАЩИХ СТРАНИЦ БУДЕТ НЕ 10 ТО ЗДЕСЬ ТОЖЕ ПОМЕНЯТЬ ЧИСЛО, ЛУЧШЕ ПО ВОЗМОЖНОСТИ В ОТДЕЛЬНУЮ ПЕРЕМЕННУЮ ЭТО ЧИСЛО ЗАПИСАТЬ\n                await dispatch(changePagination(currentPage - 10));\n                // await setIndexForModal(10);\n                // console.log (applications);\n                // await dispatch(getTenApplications(data));\n                // await setOneApplication(applications[9]);\n                return\n            }\n            const index = indexForModal - 1;\n            setIndexForModal(index);\n            // setOneApplication(applications[index]);\n    };\n    const activePage = useSelector(state => state.applications.activePage)\n    const count = useSelector(state => state.applications.count);\n    const goRight = async () => {\n        if (indexForModal >= applications.length - 1 && activePage >= Math.ceil(count / 10)) return;\n\n            if (indexForModal >=9) {\n                // ПРИХОДИТСЯ КЛИКАТЬ ДВАЖДЫ НА ГРАНИЦАХ, ПОКА НЕ ЗНАЮ КАК РЕШИТЬ\n                // ВНИМАНИЕ ЕСЛИ КОЛИЧЕСТВО ВЫВОДАЩИХ СТРАНИЦ БУДЕТ НЕ 10 ТО ЗДЕСЬ ТОЖЕ ПОМЕНЯТЬ ЧИСЛО, ЛУЧШЕ ПО ВОЗМОЖНОСТИ В ОТДЕЛЬНУЮ ПЕРЕМЕННУЮ ЭТО ЧИСЛО ЗАПИСАТЬ\n                await dispatch(changePagination(currentPage + 10));\n                // await setIndexForModal(0);\n                // console.log (applications);\n                // setOneApplication(applications[0]);\n                // await dispatch(getTenApplications(data));\n                // await setOneApplication(applications[0]);\n                return\n            }\n            const index = indexForModal + 1;\n            setIndexForModal(index);\n            // setOneApplication(applications[index]);\n\n    };\n\n\n\n    return (\n        <div className=\"ResultsTableWorker\">\n            <div className=\"ResultsTableWorker__filtersBlock\">\n\n                <div className=\"ResultsTableWorker__filterWithIcon ResultsTableWorker__filter--status\">\n                    <p className=\"ResultsTableWorker__filterText\">Дата/статус</p>\n                     {isStatusModal ? <ModalStatus close={toggleStatusModal} /> : null}\n                    <div onClick={toggleStatusModal} className={`ResultsTableWorker__filterIcon ${isFilterStatus ? \"ResultsTableWorker__filterIcon--active\" : null}`} />\n                </div>\n\n                {user.role === 'director' ? <div className=\"ResultsTableWorker__filterWithIcon ResultsTableWorker__filter--worker\">\n                    <p className=\"ResultsTableWorker__filterText\">Сотрудник</p>\n                     {isWorkerModal ? <ModalWorker close={toggleWorkerModal} /> : null}\n                    <div onClick={toggleWorkerModal} className={`ResultsTableWorker__filterIcon ${isFilterWorker ? \"ResultsTableWorker__filterIcon--active\" : null}`} />\n                </div> : null}\n\n                <p className=\"ResultsTableWorker__filterText ResultsTableWorker__filter--subject\">Тема</p>\n                \n                <div className=\"ResultsTableWorker__filterWithIcon ResultsTableWorker__filter--department\">\n                    <p className=\"ResultsTableWorker__filterText\">Отдел</p>\n                    {isDepartmentModal ? <ModalDepartment close={toggleDepartmentModal} /> : null}\n                    <div onClick={toggleDepartmentModal} className={`ResultsTableWorker__filterIcon ${isFilterDepartment ? \"ResultsTableWorker__filterIcon--active\" : null}`} />\n                </div>\n\n                <p className=\"ResultsTableWorker__filterText ResultsTableWorker__filter--specialist\">ИТ-специалист</p>\n                <p className=\"ResultsTableWorker__filterText ResultsTableWorker__filter--results\">Результат</p>\n            \n            </div>\n            {isFullInfoModal ?\n                <>\n                <div className=\"FullInfoModalBg\" onClick={() => {seeFullApplicationInfo(indexForModal)}} />\n                    <FullApplicationInfo\n                        // index={idForModal}\n                        clickToClose={() => {seeFullApplicationInfo(indexForModal)}}\n                        // application={oneApplication}\n                        application={applications[indexForModal]}\n                        goLeft={goLeft}\n                        goRight={goRight}\n                    />\n                </>:\n                null}\n            {allApplications}\n        </div>\n    )\n}\n\n\nexport default ResultsTableWorker;","D:\\JavaScript\\projects\\it_support\\src\\Components\\ApplicationPageComponents\\SpecialitsWindowStatus\\SpecialitsWindowStatus.js",["233","234","235","236"],"import React, { useEffect, useState } from 'react';\nimport BlueButton from '../BlueButton/BlueButton';\nimport './SpecialitsWindowStatus.css';\n\n\nconst SpecialitsWindowStatus = (props) => {\n    let timerDuration = 900000; //15 минут\n    const status = props.status;\n    const id = props.id;\n    let topComponent;\n    const [seconds, setSeconds] = useState(\"00\");\n    const [minutes, setMinutes] = useState(15);\n    const [oneComment, setOneComment] = useState();\n    const [isComment, setIsComment] = useState(false);\n    const [isLike, setIsLike] = useState(false);\n    const [isDisLike, setIsDisLike] = useState(false);\n\n    let leaveCommentBlock;\n    let timer = null;\n    let newApplication = props.newApplicationl\n    let specialistFound = props.specialistFound;\n    let jobDone = props.jobDone;\n    let isCanceled = props.isCanceled;\n\n    useEffect(() => {\n       if (newApplication) {\n        if (timerDuration > 0 && !timer) {\n            timer = setInterval(() => {\n                let seconds = (timerDuration % 60000) / 1000;\n                let minutes = Math.floor(timerDuration / 60000);\n                if (seconds < 10) {\n                    seconds = \"0\" + seconds;\n                }\n                if (minutes < 10) {\n                    minutes = \"0\" + minutes;\n                }\n                setSeconds(seconds);\n                setMinutes(minutes);\n                timerDuration -= 1000;\n                if (minutes === \"00\" && seconds === \"00\") {\n                    clearInterval(timer);\n                }\n            }, 1000);\n        }\n        if (timerDuration <= 0) {\n            clearInterval(timer);\n            timer = null;\n        }\n        return(() => {\n            clearInterval(timer)\n        })\n    }\n    }, []);\n\n    const applyComment = () => {\n        if (oneComment === undefined || oneComment.trim() === '') {\n            return;\n        }\n        setIsComment(true);\n    }\n    const textAreaHandler = (event) => {\n        setOneComment(event.target.value);\n    }\n    const isLikeHandler = () => {\n        setIsLike(true);\n    }\n    const isDisLikeHandler = () => {\n        setIsDisLike(true);\n    }\n    if (!isComment) {\n    leaveCommentBlock = (\n        <div className=\"leaveCommentBlock\">\n            {!isLike && !isDisLike \n                ? \n            <div className=\"leaveCommentBlock__likeBlock\">\n                <div onClick={isLikeHandler} className=\"leaveCommentBlock__icon leaveCommentBlock__icon--like\" />\n                <div onClick={isDisLikeHandler} className=\"leaveCommentBlock__icon leaveCommentBlock__icon--dislike\" />\n            </div> \n                : \n            <div className=\"isCommentBlock--likeOrNot\">\n                {isLike ? <div className=\"isCommentBlock__like\" /> : null}\n                {isDisLike ? <div className=\"isCommentBlock__dislike\" /> : null}\n            </div>}\n\n            \n            <div className=\"leaveCommentBlock__commentBlock\">\n                <textarea value={oneComment} placeholder=\"Напишите краткий отзыв\" onChange={(event) => {textAreaHandler(event)}} className=\"leaveCommentBlock__textarea\"></textarea>\n                    <div className=\"leaveCommentBlock__btn\">\n                        <BlueButton\n                            name=\"Отправить отзыв\"\n                            clicked={() => {applyComment()}}\n                        />\n                    </div>\n            </div>\n        </div>\n    )} else {\n        leaveCommentBlock = (\n            <div className=\"isCommentBlock\">\n                {!isLike && !isDisLike \n                        ? \n                    <div className=\"leaveCommentBlock__likeBlock\">\n                        <div onClick={isLikeHandler} className=\"leaveCommentBlock__icon leaveCommentBlock__icon--like\" />\n                        <div onClick={isDisLikeHandler} className=\"leaveCommentBlock__icon leaveCommentBlock__icon--dislike\" />\n                    </div> \n                        : \n                    <div className=\"isCommentBlock--likeOrNot\">\n                        {isLike ? <div className=\"isCommentBlock__like\" /> : null}\n                        {isDisLike ? <div className=\"isCommentBlock__dislike\" /> : null}\n                    </div>}\n                <div className=\"isCommentBlock__textBlock\">\n                    <h2 className=\"isCommentBlock__title\">Отзыв пользователя:</h2>\n                    <p className=\"isCommentBlock__text\">{oneComment}</p>\n                </div>\n            </div>\n        )\n    }\n\n   \n\n\n    // possible statusses 'new' 'in_progress' 'complete' 'canceled'\n    if (newApplication) {\n    topComponent = (\n        <div className=\"StatusNew\">\n            <h2 className=\"StatusNew__title\">Получили вашу заявку, спасибо!</h2>\n            <p className=\"StatusNew_text\">Мы назначим ИТ-специалиста в течение:</p>\n            <div className=\"StatusNew__timeBlock\">\n                <span className=\"StatusNew__time StatusNew__time--numbers\">{minutes}</span>\n                <span className=\"StatusNew__time\">:</span>\n                <span className=\"StatusNew__time StatusNew__time--numbers\">{seconds}</span>\n            </div>\n        </div>\n    )} else {\n        topComponent = (\n            <div className=\"SpecialistWindow\">\n                <h2 className={`SpecialistWindow__title ${specialistFound ? \"color-orange\" : \"\"} ${jobDone ? \"color-green\" : \"\"} ${isCanceled ? \"color-grey\" : \"\"}`}>{specialistFound ? \"Заявка в работе\" : \"\"}{jobDone ? \"Заявка закрыта\" : \"\"}{isCanceled ? \"Заявка отменена\" : \"\"}</h2>\n            \n                <div className=\"SpecialistWindow__content\">\n                    <div className=\"SpecialistWindow__avatar--frame\">\n                        <img className=\"SpecialistWindow__avatar--image\" src={props.photo} alt={props.name} />\n                    </div>\n\n                    <div className=\"SpecialistWindow__textBlock\">\n                        {specialistFound ? <h3 className=\"SpecialistWindow__title--small\">Скоро с вами свяжется</h3> : null}\n                        {jobDone ? <p className=\"SpecialistWindow__text SpecialistWindow__text--pushDown\">Оцените работу ИТ-специалиста, если нужно — напишите краткий отзыв, нам будет приятно. </p> : null}\n                        {isCanceled ? <p className=\"SpecialistWindow__text SpecialistWindow__text--pushDown\">Оцените работу ИТ-специалиста, если нужно — напишите краткий отзыв, нам будет приятно. </p> : null}\n                    \n                        <div className=\"SpecialistWindow__nameAndPhone\">\n                            <h3 className=\"SpecialistWindow__name\">\n                                {props.name}\n                            </h3>\n                            <p className=\"SpecialistWindow__text\">\n                                {props.phone}\n                            </p>\n                        </div>\n                        <p className=\"SpecialistWindow__text\">{props.specialistId}</p>\n                    </div>\n\n                </div>\n                {jobDone || isCanceled ? leaveCommentBlock : null}\n            </div>\n        )\n    }\n    return (\n        <>\n            {topComponent}\n        </>\n    )\n}\n\nexport default SpecialitsWindowStatus;","D:\\JavaScript\\projects\\it_support\\src\\Components\\UserLoginPageComponents\\LoginForm\\LoginForm.js",[],"D:\\JavaScript\\projects\\it_support\\src\\Components\\UserLoginPageComponents\\HelperInfo\\HelperInfo.js",["237","238","239","240"],"import React from 'react';\nimport './HelperInfo.css';\n\nconst HelperInfo = (props) => {\n    return (\n        <div className=\"HelperInfo\">\n            <p style={props.grey ? {color: \"#BDBDBD\"} : null} className=\"HelperInfo__text\">{props.question}</p>\n            <a className=\"HelperInfo__link\" href={props.link}>{props.textLink}</a>\n            <p style={props.grey ? {color: \"#BDBDBD\"} : null} className=\"HelperInfo__text\">{props.contacts}</p>\n\n            <div className=\"HelperInfo__socialBlock\">\n                <a href={props.instagram} className=\"HelperInfo__icon HelperInfo__instagram\"></a>\n                <a href={props.facebook} className=\"HelperInfo__icon HelperInfo__facebook\"></a>\n                <a href={props.linkedin} className=\"HelperInfo__icon HelperInfo__linkedin\"></a>\n                <a href={props.youtube} className=\"HelperInfo__icon HelperInfo__youtube\"></a>\n            </div>\n        </div>\n    )\n}\n\nexport default HelperInfo;","D:\\JavaScript\\projects\\it_support\\src\\Components\\UserLoginPageComponents\\AuthenticationModal\\AuthenticationModal.js",[],"D:\\JavaScript\\projects\\it_support\\src\\Components\\UserLoginPageComponents\\SmsInput\\SmsInput.js",[],"D:\\JavaScript\\projects\\it_support\\src\\Components\\UserLoginPageComponents\\PhoneInput\\PhoneInput.js",[],"D:\\JavaScript\\projects\\it_support\\src\\Components\\ApplicationPageComponents\\RedButton\\RedButton.js",[],"D:\\JavaScript\\projects\\it_support\\src\\Components\\ApplicationPageComponents\\BlueButton\\BlueButton.js",[],"D:\\JavaScript\\projects\\it_support\\src\\Components\\ApplicationPageComponents\\SocialNetworkLinks\\SocialNetworkLinks.js",[],"D:\\JavaScript\\projects\\it_support\\src\\Components\\ApplicationPageComponents\\Logo\\Logo.js",[],"D:\\JavaScript\\projects\\it_support\\src\\Components\\ApplicationPageComponents\\WhiteButton\\WhiteButton.js",[],"D:\\JavaScript\\projects\\it_support\\src\\Components\\SearchResultsComponents\\NoResults\\NoResults.js",[],"D:\\JavaScript\\projects\\it_support\\src\\Components\\SearchResultsComponents\\ModalStatus\\ModalStatus.js",["241","242"],"import React, { useState, useEffect } from 'react';\nimport ButtonGrey from '../UI/ButtonGrey/ButtonGrey';\nimport './ModalStatus.css';\nimport {useDispatch} from \"react-redux\";\nimport {changeStatus, setActivePage} from \"../../../Store/ApplicationsReducer/applicationsActions\";\n\n\nconst ModalStatus = (props) => {\n    const dispatch = useDispatch();\n    const [inputState, setInputState] = useState({\n        planned: null,\n        inProgress: null,\n        completed: null,\n        canceled: null\n    });\n\n    const inputChange = (event) => {\n        const {name, value} = event.target;\n        if (!event.target.checked) {\n            setInputState(prevState => {\n                return {...prevState, [name]: null}\n            });\n        } else {\n            setInputState(prevState => {\n                return {...prevState, [name]: value}\n            });\n        }\n    }\n    // useEffect(() => {\n    //     let arr = [];\n    //     Object.keys(inputState).map(el => {\n    //         if (inputState[el]) {\n    //             arr.push(el === \"planned\" ? \"Запланировано\" : el === \"inProgress\" ? \"В работе\" : el === \"completed\" ? \"Завершено\" : el === \"canceled\" ? \"Отменено\" : null);\n    //         }\n    //         dispatch(changeStatus(arr));\n    //         dispatch(setActivePage(1));\n    //     })\n    // }, [inputState]);\n    const showStatusSearchResults = (event) => {\n        event.preventDefault();\n        let arr = [];\n        Object.keys(inputState).map(el => {\n            if (inputState[el]) {\n                arr.push(el === \"planned\" ? \"Запланировано\" : el === \"inProgress\" ? \"В работе\" : el === \"completed\" ? \"Завершено\" : el === \"canceled\" ? \"Отменено\" : null);\n            }\n            dispatch(changeStatus(arr));\n            dispatch(setActivePage(1));\n        })\n    }\n\n    return (\n        <>\n        <div onClick={props.close} className=\"ModalStatus__bg\" />\n            <div className=\"ModalStatus\">\n                <div className=\"ModalStatus__header\">\n                    <p className=\"ModalStatus__header--text\">Показывать только:</p>\n                </div>\n                <div className=\"ModalStatus__content\">\n                    <form className=\"ModalStatus__form\" onSubmit={(event) => {showStatusSearchResults(event)}}>\n                        <label className=\"ModalStatus__label\">\n                            <input name=\"planned\" className=\"ModalStatus__input\" onChange={(event) => {inputChange(event)}} type=\"checkbox\" />\n                            <div  className=\"ModalStatus__label--icon\"/>\n                            <p className=\"ModalStatus__status ModalStatus__status--planned\">запланировано</p>\n                        </label>\n\n                        <label className=\"ModalStatus__label\">\n                            <input name=\"inProgress\" className=\"ModalStatus__input\" onChange={(event) => {inputChange(event)}} type=\"checkbox\" />\n                            <div  className=\"ModalStatus__label--icon\"/>\n                            <p className=\"ModalStatus__status ModalStatus__status--inProgress\">в работе</p>\n                        </label>\n\n                        <label className=\"ModalStatus__label\">\n                            <input name=\"completed\" className=\"ModalStatus__input\" onChange={(event) => {inputChange(event)}} type=\"checkbox\" />\n                            <div  className=\"ModalStatus__label--icon\"/>\n                            <p className=\"ModalStatus__status ModalStatus__status--completed\">завершено</p>\n                        </label>\n\n                        <label className=\"ModalStatus__label\">\n                            <input name=\"canceled\" className=\"ModalStatus__input\" onChange={(event) => {inputChange(event)}} type=\"checkbox\" />\n                            <div  className=\"ModalStatus__label--icon\"/>\n                            <p className=\"ModalStatus__status ModalStatus__status--canceled\">отменено</p>\n                        </label>\n\n                        <ButtonGrey \n                            name=\"показать\"\n                        />\n                    </form>\n                </div>\n            </div>\n            </>\n    )\n}\n\n\nexport default ModalStatus;","D:\\JavaScript\\projects\\it_support\\src\\Components\\SearchResultsComponents\\ModalWorker\\ModalWorker.js",["243","244","245"],"import React, { useState } from 'react';\nimport './ModalWorker.css';\nimport {useDispatch} from \"react-redux\";\nimport {changeEmployee, setActivePage} from \"../../../Store/ApplicationsReducer/applicationsActions\";\n\n\nconst ModalWorker = (props) => {\n   const dispatch = useDispatch();\n   const [inputState, setInputState] = useState('');\n   const [showResults, setShowResults] = useState(false);\n\n   // введенные данные с каждым кликом отправляют запрос и получают данные из списка сотрудников компании\n    const inputChange = (event) => {\n        const {name, value} = event.target;\n        setInputState({name: value});\n        setShowResults(true);\n    }\n    const hideResults = () => {\n        setShowResults(false);\n    };\n    const getResultValue = (event) => {\n        dispatch(changeEmployee(event.target.innerText));\n        dispatch(setActivePage(1));\n    }\n    const workers = [\n        {name: \"Цой\"},{name: \"Some name\"},{name: \"Some name\"},{name: \"Some name\"}\n    ]\n    let allWorkerSearchResults;\n\n    if (workers.length != 0) {\n        allWorkerSearchResults = (<div className=\"ModalWorker__results\">\n            {workers.map((el, i) => {\n                return <p key={i} onClick={(event) => {getResultValue(event)}} className=\"ModalWorker__resultsItem\">{el.name}</p>\n             })}\n        </div>\n        )}\n\n    return (\n        <>\n        <div onClick={props.close} className=\"ModalWorker__bg\" />\n            <div className=\"ModalWorker\">\n                <input onChange={(event) => {inputChange(event)}} className=\"ModalWorker__input\" type=\"text\" placeholder=\"Введите имя сотрудника\" />\n                <div className=\"ModalWorker__arrowBtn\" onClick={hideResults} />\n                {showResults ? allWorkerSearchResults : null}\n            </div>\n        </>\n    )\n}\n\n\nexport default ModalWorker;","D:\\JavaScript\\projects\\it_support\\src\\Components\\SearchResultsComponents\\ResultsTableWorker\\ResultsItemWorker\\ResultsItemWorker.js",[],"D:\\JavaScript\\projects\\it_support\\src\\Components\\SearchResultsComponents\\ModalDepartment\\ModalDepartment.js",["246","247"],"import React, { useState } from 'react';\nimport ButtonGrey from '../UI/ButtonGrey/ButtonGrey';\nimport './ModalDepartment.css';\nimport {changeDepartment, changeStatus, setActivePage} from \"../../../Store/ApplicationsReducer/applicationsActions\";\nimport {useDispatch} from \"react-redux\";\n\n\nconst ModalDepartment = (props) => {\n    const dispatch = useDispatch();\n    const [inputState, setInputState] = useState({\n        onlineService: null,\n        serviceDepartment: null,\n        awaySpecialists: null,\n        outStuffing: null,\n        serverDepartment: null,\n        administrative: null\n    });\n    const showDepartmentSearchResults = (event) => {\n        event.preventDefault();\n        let arr = [];\n        Object.keys(inputState).map(el => {\n            if (inputState[el]) {\n                arr.push(el === \"onlineService\" ? \"Удаленная поддержка\" : el === \"serviceDepartment\" ? \"Сервисный отдел\" : el === \"awaySpecialists\" ? \"Выездные специалисты\" : el === \"outStuffing\" ? \"Аутстаффинг\" : el === \"serverDepartment\" ? \"Серверный отдел\" : el === \"administrative\" ? \"Административно-управленческий отдел\" : null);\n            }\n            dispatch(changeDepartment(arr));\n            dispatch(setActivePage(1));\n        })\n    }\n    const inputChange = (event) => {\n        const {name, value} = event.target;\n        if (!event.target.checked) {\n            setInputState(prevState => {\n                return {...prevState, [name]: null}\n            });\n        } else {\n            setInputState(prevState => {\n                return {...prevState, [name]: value}\n            });\n        }\n    }\n\n    return (\n        <>\n        <div onClick={props.close} className=\"ModalDepartment__bg\" />\n            <div className=\"ModalDepartment\">\n                <div className=\"ModalDepartment__header\">\n                    <p className=\"ModalDepartment__header--text\">Показывать только:</p>\n                </div>\n                <div className=\"ModalDepartment__content\">\n                    <form className=\"ModalDepartment__form\" onSubmit={(event) => {showDepartmentSearchResults(event)}}>\n                        <label className=\"ModalDepartment__label\">\n                            <input name=\"onlineService\" className=\"ModalDepartment__input\" onChange={(event) => {inputChange(event)}} type=\"checkbox\" />\n                            <div  className=\"ModalDepartment__label--icon\"/>\n                            <p className=\"ModalDepartment__department\">Удаленная поддержка</p>\n                        </label>\n\n                        <label className=\"ModalDepartment__label\">\n                            <input name=\"serviceDepartment\" className=\"ModalDepartment__input\" onChange={(event) => {inputChange(event)}} type=\"checkbox\" />\n                            <div  className=\"ModalDepartment__label--icon\"/>\n                            <p className=\"ModalDepartment__department\">Сервисный отдел</p>\n                        </label>\n\n                        <label className=\"ModalDepartment__label\">\n                            <input name=\"awaySpecialists\" className=\"ModalDepartment__input\" onChange={(event) => {inputChange(event)}} type=\"checkbox\" />\n                            <div  className=\"ModalDepartment__label--icon\"/>\n                            <p className=\"ModalDepartment__department\">Выездные специалисты</p>\n                        </label>\n\n                        <label className=\"ModalDepartment__label\">\n                            <input name=\"outStuffing\" className=\"ModalDepartment__input\" onChange={(event) => {inputChange(event)}} type=\"checkbox\" />\n                            <div  className=\"ModalDepartment__label--icon\"/>\n                            <p className=\"ModalDepartment__department\">Аутстаффинг</p>\n                        </label>\n\n                        <label className=\"ModalDepartment__label\">\n                            <input name=\"serverDepartment\" className=\"ModalDepartment__input\" onChange={(event) => {inputChange(event)}} type=\"checkbox\" />\n                            <div  className=\"ModalDepartment__label--icon\"/>\n                            <p className=\"ModalDepartment__department\">Серверный отдел</p>\n                        </label>\n\n                        <label className=\"ModalDepartment__label\">\n                            <input name=\"administrative\" className=\"ModalDepartment__input\" onChange={(event) => {inputChange(event)}} type=\"checkbox\" />\n                            <div  className=\"ModalDepartment__label--icon\"/>\n                            <p className=\"ModalDepartment__department\">Административно-управленческий отдел</p>\n                        </label>\n\n                        <ButtonGrey \n                            name=\"показать\"\n                        />\n                    </form>\n                </div>\n            </div>\n            </>\n    )\n}\n\n\nexport default ModalDepartment;","D:\\JavaScript\\projects\\it_support\\src\\Components\\UserLoginPageComponents\\Button\\Button.js",[],"D:\\JavaScript\\projects\\it_support\\src\\Components\\SearchResultsComponents\\UI\\ButtonGrey\\ButtonGrey.js",[],"D:\\JavaScript\\projects\\it_support\\src\\axiosApi.js",[],"D:\\JavaScript\\projects\\it_support\\src\\Store\\ApplicationsReducer\\applicationsReducer.js",[],"D:\\JavaScript\\projects\\it_support\\src\\Store\\ApplicationsReducer\\applicationsActions.js",[],"D:\\JavaScript\\projects\\it_support\\src\\Store\\ApplicationsReducer\\applicationsActionTypes.js",[],"D:\\JavaScript\\projects\\it_support\\src\\Store\\configStore.js",[],"D:\\JavaScript\\projects\\it_support\\src\\constants\\apiUrl.js",[],"D:\\JavaScript\\projects\\it_support\\src\\hoc\\WithLoader\\WithLoader.js",["248","249","250"],"D:\\JavaScript\\projects\\it_support\\src\\Store\\CompanyDataReducer\\companyDataReducer.js",["251"],"\r\nimport update from 'immutability-helper';\r\nimport {GET_COMPANY_DATA} from \"./companyActionTypes\";\r\n\r\nconst initialState = {\r\n    companyData: {}\r\n};\r\n\r\nconst companyDataReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_COMPANY_DATA:\r\n            return {...state, companyData: action.value};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default companyDataReducer;\r\n","D:\\JavaScript\\projects\\it_support\\src\\Store\\CompanyDataReducer\\companyActionTypes.js",[],"D:\\JavaScript\\projects\\it_support\\src\\Store\\CompanyDataReducer\\companyActions.js",[],"D:\\JavaScript\\projects\\it_support\\src\\Store\\UsersReducer\\usersActions.js",["252"],"D:\\JavaScript\\projects\\it_support\\src\\Store\\UsersReducer\\usersActionTypes.js",[],"D:\\JavaScript\\projects\\it_support\\src\\Store\\UsersReducer\\usersReducer.js",[],{"ruleId":"253","severity":1,"message":"254","line":10,"column":10,"nodeType":"255","messageId":"256","endLine":10,"endColumn":23},{"ruleId":"253","severity":1,"message":"257","line":3,"column":8,"nodeType":"255","messageId":"256","endLine":3,"endColumn":27},{"ruleId":"258","replacedBy":"259"},{"ruleId":"260","replacedBy":"261"},{"ruleId":"253","severity":1,"message":"262","line":1,"column":17,"nodeType":"255","messageId":"256","endLine":1,"endColumn":23},{"ruleId":"263","severity":1,"message":"264","line":20,"column":8,"nodeType":"265","endLine":20,"endColumn":12,"suggestions":"266"},{"ruleId":"263","severity":1,"message":"267","line":40,"column":8,"nodeType":"265","endLine":40,"endColumn":33,"suggestions":"268"},{"ruleId":"263","severity":1,"message":"269","line":44,"column":8,"nodeType":"265","endLine":44,"endColumn":18,"suggestions":"270"},{"ruleId":"253","severity":1,"message":"271","line":65,"column":16,"nodeType":"255","messageId":"256","endLine":65,"endColumn":25},{"ruleId":"253","severity":1,"message":"271","line":100,"column":16,"nodeType":"255","messageId":"256","endLine":100,"endColumn":25},{"ruleId":"263","severity":1,"message":"272","line":131,"column":8,"nodeType":"265","endLine":131,"endColumn":20,"suggestions":"273"},{"ruleId":"253","severity":1,"message":"274","line":9,"column":24,"nodeType":"255","messageId":"256","endLine":9,"endColumn":40},{"ruleId":"263","severity":1,"message":"275","line":312,"column":8,"nodeType":"265","endLine":312,"endColumn":20,"suggestions":"276"},{"ruleId":"263","severity":1,"message":"264","line":316,"column":8,"nodeType":"265","endLine":316,"endColumn":20,"suggestions":"277"},{"ruleId":"278","severity":1,"message":"279","line":10,"column":89,"nodeType":"280","endLine":10,"endColumn":131},{"ruleId":"281","severity":1,"message":"282","line":24,"column":21,"nodeType":"280","endLine":24,"endColumn":92},{"ruleId":"278","severity":1,"message":"279","line":24,"column":21,"nodeType":"280","endLine":24,"endColumn":92},{"ruleId":"281","severity":1,"message":"282","line":25,"column":21,"nodeType":"280","endLine":25,"endColumn":91},{"ruleId":"278","severity":1,"message":"279","line":25,"column":21,"nodeType":"280","endLine":25,"endColumn":91},{"ruleId":"281","severity":1,"message":"282","line":26,"column":21,"nodeType":"280","endLine":26,"endColumn":91},{"ruleId":"278","severity":1,"message":"279","line":26,"column":21,"nodeType":"280","endLine":26,"endColumn":91},{"ruleId":"281","severity":1,"message":"282","line":27,"column":21,"nodeType":"280","endLine":27,"endColumn":90},{"ruleId":"278","severity":1,"message":"279","line":27,"column":21,"nodeType":"280","endLine":27,"endColumn":90},{"ruleId":"253","severity":1,"message":"283","line":3,"column":9,"nodeType":"255","messageId":"256","endLine":3,"endColumn":13},{"ruleId":"253","severity":1,"message":"284","line":8,"column":11,"nodeType":"255","messageId":"256","endLine":8,"endColumn":19},{"ruleId":"253","severity":1,"message":"285","line":11,"column":11,"nodeType":"255","messageId":"256","endLine":11,"endColumn":13},{"ruleId":"253","severity":1,"message":"285","line":6,"column":11,"nodeType":"255","messageId":"256","endLine":6,"endColumn":13},{"ruleId":"253","severity":1,"message":"283","line":9,"column":9,"nodeType":"255","messageId":"256","endLine":9,"endColumn":13},{"ruleId":"263","severity":1,"message":"264","line":40,"column":8,"nodeType":"265","endLine":40,"endColumn":14,"suggestions":"286"},{"ruleId":"287","severity":1,"message":"288","line":65,"column":42,"nodeType":"289","messageId":"290","endLine":65,"endColumn":44},{"ruleId":"263","severity":1,"message":"291","line":78,"column":8,"nodeType":"265","endLine":78,"endColumn":17,"suggestions":"292"},{"ruleId":"263","severity":1,"message":"293","line":182,"column":8,"nodeType":"265","endLine":182,"endColumn":21,"suggestions":"294"},{"ruleId":"295","severity":1,"message":"296","line":194,"column":47,"nodeType":"297","messageId":"298","endLine":194,"endColumn":49},{"ruleId":"253","severity":1,"message":"299","line":8,"column":11,"nodeType":"255","messageId":"256","endLine":8,"endColumn":17},{"ruleId":"253","severity":1,"message":"285","line":9,"column":11,"nodeType":"255","messageId":"256","endLine":9,"endColumn":13},{"ruleId":"263","severity":1,"message":"300","line":28,"column":21,"nodeType":"301","endLine":43,"endColumn":21},{"ruleId":"263","severity":1,"message":"302","line":39,"column":34,"nodeType":"303","endLine":39,"endColumn":38},{"ruleId":"281","severity":1,"message":"282","line":12,"column":17,"nodeType":"280","endLine":12,"endColumn":94},{"ruleId":"281","severity":1,"message":"282","line":13,"column":17,"nodeType":"280","endLine":13,"endColumn":92},{"ruleId":"281","severity":1,"message":"282","line":14,"column":17,"nodeType":"280","endLine":14,"endColumn":92},{"ruleId":"281","severity":1,"message":"282","line":15,"column":17,"nodeType":"280","endLine":15,"endColumn":90},{"ruleId":"253","severity":1,"message":"304","line":1,"column":27,"nodeType":"255","messageId":"256","endLine":1,"endColumn":36},{"ruleId":"287","severity":1,"message":"288","line":42,"column":40,"nodeType":"289","messageId":"290","endLine":42,"endColumn":42},{"ruleId":"253","severity":1,"message":"305","line":9,"column":11,"nodeType":"255","messageId":"256","endLine":9,"endColumn":21},{"ruleId":"253","severity":1,"message":"306","line":14,"column":16,"nodeType":"255","messageId":"256","endLine":14,"endColumn":20},{"ruleId":"295","severity":1,"message":"307","line":30,"column":24,"nodeType":"297","messageId":"298","endLine":30,"endColumn":26},{"ruleId":"253","severity":1,"message":"308","line":4,"column":27,"nodeType":"255","messageId":"256","endLine":4,"endColumn":39},{"ruleId":"287","severity":1,"message":"288","line":21,"column":40,"nodeType":"289","messageId":"290","endLine":21,"endColumn":42},{"ruleId":"253","severity":1,"message":"309","line":16,"column":23,"nodeType":"255","messageId":"256","endLine":16,"endColumn":27},{"ruleId":"263","severity":1,"message":"310","line":36,"column":12,"nodeType":"265","endLine":36,"endColumn":14,"suggestions":"311"},{"ruleId":"263","severity":1,"message":"310","line":39,"column":12,"nodeType":"265","endLine":39,"endColumn":14,"suggestions":"312"},{"ruleId":"253","severity":1,"message":"313","line":2,"column":8,"nodeType":"255","messageId":"256","endLine":2,"endColumn":14},{"ruleId":"253","severity":1,"message":"314","line":11,"column":19,"nodeType":"255","messageId":"256","endLine":11,"endColumn":25},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'FullApplicationInfo' is defined but never used.","no-native-reassign",["315"],"no-negated-in-lhs",["316"],"'useRef' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["317"],"React Hook useEffect has missing dependencies: 'dispatch' and 'id'. Either include them or remove the dependency array.",["318"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["319"],"'fieldName' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'isDisabled'. Either include it or remove the dependency array.",["320"],"'setActiveFilters' is defined but never used.","React Hook useEffect has a missing dependency: 'colorActivePage'. Either include it or remove the dependency array.",["321"],["322"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","'push' is defined but never used.","'dispatch' is assigned a value but never used.","'id' is assigned a value but never used.",["323"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'showFilters'. Either include it or remove the dependency array.",["324"],"React Hook useEffect has missing dependencies: 'dispatch' and 'indexForModal'. Either include them or remove the dependency array.",["325"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'status' is assigned a value but never used.","Assignments to the 'timer' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","Assignments to the 'timerDuration' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","'useEffect' is defined but never used.","'inputState' is assigned a value but never used.","'name' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'changeStatus' is defined but never used.","'time' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'intercept'. Either include it or remove the dependency array.",["326"],["327"],"'update' is defined but never used.","'saveId' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"328","fix":"329"},{"desc":"330","fix":"331"},{"desc":"328","fix":"332"},{"desc":"333","fix":"334"},{"desc":"335","fix":"336"},{"desc":"337","fix":"338"},{"desc":"339","fix":"340"},{"desc":"341","fix":"342"},{"desc":"343","fix":"344"},{"desc":"345","fix":"346"},{"desc":"345","fix":"347"},"Update the dependencies array to be: [dispatch, id]",{"range":"348","text":"349"},"Update the dependencies array to be: [dispatch, id, sms1, sms2, sms3, sms4]",{"range":"350","text":"351"},{"range":"352","text":"349"},"Update the dependencies array to be: [inputState, isDisabled]",{"range":"353","text":"354"},"Update the dependencies array to be: [activePage, colorActivePage]",{"range":"355","text":"356"},"Update the dependencies array to be: [activePage, dispatch]",{"range":"357","text":"358"},"Update the dependencies array to be: [data, dispatch]",{"range":"359","text":"360"},"Update the dependencies array to be: [filters, showFilters]",{"range":"361","text":"362"},"Update the dependencies array to be: [currentPage, dispatch, indexForModal]",{"range":"363","text":"364"},"Update the dependencies array to be: [intercept]",{"range":"365","text":"366"},{"range":"367","text":"366"},[973,977],"[dispatch, id]",[1642,1667],"[dispatch, id, sms1, sms2, sms3, sms4]",[1731,1741],[4242,4254],"[inputState, isDisabled]",[12142,12154],"[activePage, colorActivePage]",[12246,12258],"[activePage, dispatch]",[1355,1361],"[data, dispatch]",[3151,3160],"[filters, showFilters]",[7391,7404],"[currentPage, dispatch, indexForModal]",[1047,1049],"[intercept]",[1154,1156]]