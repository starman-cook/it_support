[{"D:\\IT\\JavaScript\\projects\\it_support\\src\\index.js":"1","D:\\IT\\JavaScript\\projects\\it_support\\src\\App.js":"2","D:\\IT\\JavaScript\\projects\\it_support\\src\\reportWebVitals.js":"3","D:\\IT\\JavaScript\\projects\\it_support\\src\\axiosApi.js":"4","D:\\IT\\JavaScript\\projects\\it_support\\src\\Store\\configStore.js":"5","D:\\IT\\JavaScript\\projects\\it_support\\src\\constants\\apiUrl.js":"6","D:\\IT\\JavaScript\\projects\\it_support\\src\\Store\\ApplicationsReducer\\applicationsReducer.js":"7","D:\\IT\\JavaScript\\projects\\it_support\\src\\Store\\CompanyDataReducer\\companyDataReducer.js":"8","D:\\IT\\JavaScript\\projects\\it_support\\src\\Store\\UsersReducer\\usersReducer.js":"9","D:\\IT\\JavaScript\\projects\\it_support\\src\\Containers\\ApplicationPage\\ApplicationPage.js":"10","D:\\IT\\JavaScript\\projects\\it_support\\src\\Containers\\SearchResultsPage\\SearchResultsPage.js":"11","D:\\IT\\JavaScript\\projects\\it_support\\src\\Containers\\UserLoginPage\\UserLoginPage.js":"12","D:\\IT\\JavaScript\\projects\\it_support\\src\\hoc\\WithLoader\\WithLoader.js":"13","D:\\IT\\JavaScript\\projects\\it_support\\src\\Components\\ApplicationPageComponents\\ErrorWindow\\ErrorWindow.js":"14","D:\\IT\\JavaScript\\projects\\it_support\\src\\Components\\SearchResultsComponents\\FullApplicationInfo\\FullApplicationInfo.js":"15","D:\\IT\\JavaScript\\projects\\it_support\\src\\Store\\ApplicationsReducer\\applicationsActionTypes.js":"16","D:\\IT\\JavaScript\\projects\\it_support\\src\\Store\\CompanyDataReducer\\companyActionTypes.js":"17","D:\\IT\\JavaScript\\projects\\it_support\\src\\Store\\UsersReducer\\usersActionTypes.js":"18","D:\\IT\\JavaScript\\projects\\it_support\\src\\Store\\ApplicationsReducer\\applicationsActions.js":"19","D:\\IT\\JavaScript\\projects\\it_support\\src\\Store\\CompanyDataReducer\\companyActions.js":"20","D:\\IT\\JavaScript\\projects\\it_support\\src\\Store\\UsersReducer\\usersActions.js":"21","D:\\IT\\JavaScript\\projects\\it_support\\src\\Components\\ApplicationPageComponents\\ApplicationDetails\\ApplicationDetails.js":"22","D:\\IT\\JavaScript\\projects\\it_support\\src\\Components\\ApplicationPageComponents\\LayoutApplicationPage\\LayoutApplicationPage.js":"23","D:\\IT\\JavaScript\\projects\\it_support\\src\\Components\\ApplicationPageComponents\\ApplicationStatus\\ApplicationStatus.js":"24","D:\\IT\\JavaScript\\projects\\it_support\\src\\Components\\ApplicationPageComponents\\SpecialitsWindowStatus\\SpecialitsWindowStatus.js":"25","D:\\IT\\JavaScript\\projects\\it_support\\src\\Components\\ApplicationPageComponents\\PreviousApplicationMenu\\PreviousApplicationMenu.js":"26","D:\\IT\\JavaScript\\projects\\it_support\\src\\Components\\ApplicationPageComponents\\ApplicationForm\\ApplicationForm.js":"27","D:\\IT\\JavaScript\\projects\\it_support\\src\\Components\\SearchResultsComponents\\LayoutSearchResults\\LayoutSearchResults.js":"28","D:\\IT\\JavaScript\\projects\\it_support\\src\\Components\\SearchResultsComponents\\ResultsTableWorker\\ResultsTableWorker.js":"29","D:\\IT\\JavaScript\\projects\\it_support\\src\\Components\\UserLoginPageComponents\\HelperInfo\\HelperInfo.js":"30","D:\\IT\\JavaScript\\projects\\it_support\\src\\Components\\UserLoginPageComponents\\PhoneInput\\PhoneInput.js":"31","D:\\IT\\JavaScript\\projects\\it_support\\src\\Components\\UserLoginPageComponents\\AuthenticationModal\\AuthenticationModal.js":"32","D:\\IT\\JavaScript\\projects\\it_support\\src\\Components\\UserLoginPageComponents\\SmsInput\\SmsInput.js":"33","D:\\IT\\JavaScript\\projects\\it_support\\src\\Components\\UserLoginPageComponents\\LoginForm\\LoginForm.js":"34","D:\\IT\\JavaScript\\projects\\it_support\\src\\Components\\ApplicationPageComponents\\BlueButton\\BlueButton.js":"35","D:\\IT\\JavaScript\\projects\\it_support\\src\\Components\\ApplicationPageComponents\\Logo\\Logo.js":"36","D:\\IT\\JavaScript\\projects\\it_support\\src\\Components\\ApplicationPageComponents\\SocialNetworkLinks\\SocialNetworkLinks.js":"37","D:\\IT\\JavaScript\\projects\\it_support\\src\\Components\\ApplicationPageComponents\\WhiteButton\\WhiteButton.js":"38","D:\\IT\\JavaScript\\projects\\it_support\\src\\Components\\ApplicationPageComponents\\RedButton\\RedButton.js":"39","D:\\IT\\JavaScript\\projects\\it_support\\src\\Components\\SearchResultsComponents\\ResultsTableWorker\\ResultsItemWorker\\ResultsItemWorker.js":"40","D:\\IT\\JavaScript\\projects\\it_support\\src\\Components\\SearchResultsComponents\\ModalStatus\\ModalStatus.js":"41","D:\\IT\\JavaScript\\projects\\it_support\\src\\Components\\SearchResultsComponents\\ModalDepartment\\ModalDepartment.js":"42","D:\\IT\\JavaScript\\projects\\it_support\\src\\Components\\SearchResultsComponents\\NoResults\\NoResults.js":"43","D:\\IT\\JavaScript\\projects\\it_support\\src\\Components\\SearchResultsComponents\\ModalWorker\\ModalWorker.js":"44","D:\\IT\\JavaScript\\projects\\it_support\\src\\Components\\UserLoginPageComponents\\Button\\Button.js":"45","D:\\IT\\JavaScript\\projects\\it_support\\src\\Components\\SearchResultsComponents\\UI\\ButtonGrey\\ButtonGrey.js":"46","D:\\IT\\JavaScript\\projects\\it_support\\src\\Components\\SearchResultsComponents\\ModalPeriod\\ModalPeriod.js":"47"},{"size":1822,"mtime":1613888963420,"results":"48","hashOfConfig":"49"},{"size":1244,"mtime":1615099633218,"results":"50","hashOfConfig":"49"},{"size":362,"mtime":1612596877402,"results":"51","hashOfConfig":"49"},{"size":159,"mtime":1612600936020,"results":"52","hashOfConfig":"49"},{"size":1791,"mtime":1613890304074,"results":"53","hashOfConfig":"49"},{"size":243,"mtime":1613926191219,"results":"54","hashOfConfig":"49"},{"size":23479,"mtime":1615737192955,"results":"55","hashOfConfig":"49"},{"size":655,"mtime":1613900708344,"results":"56","hashOfConfig":"49"},{"size":1018,"mtime":1613897236685,"results":"57","hashOfConfig":"49"},{"size":13113,"mtime":1615831082247,"results":"58","hashOfConfig":"49"},{"size":17574,"mtime":1614536278275,"results":"59","hashOfConfig":"49"},{"size":12322,"mtime":1615101723668,"results":"60","hashOfConfig":"49"},{"size":2363,"mtime":1615100560051,"results":"61","hashOfConfig":"49"},{"size":1854,"mtime":1612596877324,"results":"62","hashOfConfig":"49"},{"size":15476,"mtime":1614148135491,"results":"63","hashOfConfig":"49"},{"size":1230,"mtime":1615737202235,"results":"64","hashOfConfig":"49"},{"size":169,"mtime":1613900642467,"results":"65","hashOfConfig":"49"},{"size":289,"mtime":1613891059876,"results":"66","hashOfConfig":"49"},{"size":4617,"mtime":1615829984116,"results":"67","hashOfConfig":"49"},{"size":776,"mtime":1613906579365,"results":"68","hashOfConfig":"49"},{"size":2728,"mtime":1613897670472,"results":"69","hashOfConfig":"49"},{"size":5441,"mtime":1615829561868,"results":"70","hashOfConfig":"49"},{"size":2468,"mtime":1615828193157,"results":"71","hashOfConfig":"49"},{"size":3208,"mtime":1612596877324,"results":"72","hashOfConfig":"49"},{"size":7477,"mtime":1615824305595,"results":"73","hashOfConfig":"49"},{"size":946,"mtime":1612596877324,"results":"74","hashOfConfig":"49"},{"size":4520,"mtime":1615107742880,"results":"75","hashOfConfig":"49"},{"size":6836,"mtime":1615101607074,"results":"76","hashOfConfig":"49"},{"size":13543,"mtime":1613925321014,"results":"77","hashOfConfig":"49"},{"size":952,"mtime":1612596877339,"results":"78","hashOfConfig":"49"},{"size":1171,"mtime":1613323401807,"results":"79","hashOfConfig":"49"},{"size":353,"mtime":1612596877339,"results":"80","hashOfConfig":"49"},{"size":1158,"mtime":1613898189879,"results":"81","hashOfConfig":"49"},{"size":2069,"mtime":1613896473423,"results":"82","hashOfConfig":"49"},{"size":289,"mtime":1612596877324,"results":"83","hashOfConfig":"49"},{"size":181,"mtime":1612596877324,"results":"84","hashOfConfig":"49"},{"size":842,"mtime":1612596877324,"results":"85","hashOfConfig":"49"},{"size":405,"mtime":1612596877339,"results":"86","hashOfConfig":"49"},{"size":265,"mtime":1612596877324,"results":"87","hashOfConfig":"49"},{"size":4404,"mtime":1612605391373,"results":"88","hashOfConfig":"49"},{"size":4933,"mtime":1614161051639,"results":"89","hashOfConfig":"49"},{"size":2955,"mtime":1614162126693,"results":"90","hashOfConfig":"49"},{"size":388,"mtime":1612596877339,"results":"91","hashOfConfig":"49"},{"size":2217,"mtime":1614163101481,"results":"92","hashOfConfig":"49"},{"size":329,"mtime":1612596877339,"results":"93","hashOfConfig":"49"},{"size":243,"mtime":1612596877339,"results":"94","hashOfConfig":"49"},{"size":15921,"mtime":1614591410328,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"99"},"1ey6xrg",{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"99"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"99"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"99"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"99"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"99"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"99"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"99"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"99"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"99"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"99"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"99"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"99"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"99"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"99"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"99"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"99"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"99"},"D:\\IT\\JavaScript\\projects\\it_support\\src\\index.js",["209"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\n// import ApplicationsReducer from './Store/ApplicationsReducer/applicationsReducer';\n// import thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport {ConnectedRouter} from 'connected-react-router';\nimport store, {history} from \"./Store/configStore\";\nimport axios from './axiosApi';\n// const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n// const rootReducer = combineReducers({\n//   ApplicationPage: ApplicationsReducer\n// });\n\n// const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n\naxios.interceptors.request.use(req => {\n    try {\n\n        // Проверить на работоспособность.\n        // req.headers['Authorization'] = store.getState().users.user ?  store.getState().users.user.token : ''\n        req.params.id = store.getState().applications.data ? store.getState().applications.data['clientId'] : '';\n        req.params.hash = store.getState().applications.data ? store.getState().applications.data['hash'] : '';\n    } catch (err) {\n        console.log(err);\n    }\n    return req;\n});\n\n\nconst app = (\n  <Provider store={store}>\n      <ConnectedRouter history={history}>\n            <App/>\n      </ConnectedRouter>\n  </Provider>\n)\n\nReactDOM.render(app,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["210","211"],"D:\\IT\\JavaScript\\projects\\it_support\\src\\App.js",["212"],"import { Route, Switch } from 'react-router';\nimport ErrorWindow from './Components/ApplicationPageComponents/ErrorWindow/ErrorWindow';\nimport FullApplicationInfo from './Components/SearchResultsComponents/FullApplicationInfo/FullApplicationInfo';\nimport ApplicationPage from './Containers/ApplicationPage/ApplicationPage';\nimport SearchResultsPage from './Containers/SearchResultsPage/SearchResultsPage';\nimport UserLoginPage from './Containers/UserLoginPage/UserLoginPage';\nimport WithLoader from './hoc/WithLoader/WithLoader';\nimport axios from \"./axiosApi\";\nfunction App() {\n  return (\n  <>\n  <Switch>\n    {/*<Route path=\"/:id\" exact component={UserLoginPage} />*/}\n    <Route path=\"/\" exact component={SearchResultsPage} />\n    <Route path=\"/search\" exact component={SearchResultsPage} />\n    <Route path=\"/login\" exact component={UserLoginPage} />\n    <Route path=\"/login/:id\" exact component={UserLoginPage} />\n    {/*<Route path=\"/application\" exact component={ApplicationPage} />*/}\n    <Route path=\"/application/:id\" component={ApplicationPage} />\n    <Route path=\"/error\" component={ErrorWindow} />\n    {/*<Route path=\"/fullinfo\" component={FullApplicationInfo} />*/}\n  </Switch>\n  </>\n  );\n}\n\nexport default WithLoader(App, axios);\n","D:\\IT\\JavaScript\\projects\\it_support\\src\\reportWebVitals.js",[],"D:\\IT\\JavaScript\\projects\\it_support\\src\\axiosApi.js",[],"D:\\IT\\JavaScript\\projects\\it_support\\src\\Store\\configStore.js",[],"D:\\IT\\JavaScript\\projects\\it_support\\src\\constants\\apiUrl.js",[],"D:\\IT\\JavaScript\\projects\\it_support\\src\\Store\\ApplicationsReducer\\applicationsReducer.js",["213"],"import {\n    ADD_COMMENT,\n    CHANGE_DEPARTMENT,\n    CHANGE_EMPLOYEE,\n    CHANGE_NUMBER,\n    CHANGE_PAGINATION,\n    CHANGE_STATUS,\n    GET_COUNT_AMOUNT,\n    GET_TEN_APPLICATIONS,\n    INIT_FILTERS,\n    INPUT_FILTER_DATE_FROM,\n    INPUT_FILTER_DATE_TO,\n    SET_ACTIVE_FILTERS,\n    SET_ACTIVE_PAGE,\n    SAVE_HASH,\n    SAVE_ID,\n    IS_FILTER_DATE_ACTIVE,\n    FIRST_CALENDAR_DAY_IN_RANGE,\n    SECOND_CALENDAR_DAY_IN_RANGE,\n    GET_LAST_APPLICATION, GET_HASH_OF_THE_LAST_APPLICATION, GET_CURRENT_APPLICATION_DATA\n} from \"./applicationsActionTypes\";\nimport update from 'immutability-helper';\nimport moment from \"moment\";\n\n//ID SAMPLE    1240-02-00044\n//HASH SAMPLE  4be9fd6e92f21fc38674ec51d5e4d237\n// aad6d2c1b77801e269628f235dd7cbaa hash from 1240 doesnt work\nconst initialState = {\n    lastApplication: null,\n    firstCalendarRangeDay: 0,\n    secondCalendarRangeDay: 0,\n    newApplicationHash: null,\n    currentApplicationData: null,\n    // comments: [],\n    applications: [],\n    count: 0,\n    data: {\n        clientId: \"\",\n        hash: \"\",\n        filter: {\n            date: {\n                from: \"\",\n                to: \"\"\n            },\n            status: [],\n            employee: \" \",\n            departament: [],\n            number: \"\"\n        },\n        limit: 10,\n        start: 0\n    },\n    activePage: 1,\n    activeFilters: [],\n    isFilterDateActive: false\n};\n\nconst applicationsReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_CURRENT_APPLICATION_DATA:\n            return {...state, currentApplicationData: action.value}\n        case GET_HASH_OF_THE_LAST_APPLICATION:\n            return {...state, newApplicationHash: action.value}\n        case GET_LAST_APPLICATION:\n            return {...state, lastApplication: action.value};\n        case FIRST_CALENDAR_DAY_IN_RANGE:\n            return {...state, firstCalendarRangeDay: action.value};\n        case SECOND_CALENDAR_DAY_IN_RANGE:\n            return {...state, secondCalendarRangeDay: action.value};\n        case IS_FILTER_DATE_ACTIVE:\n            return {...state, isFilterDateActive: action.value};\n        case SAVE_ID:\n            return update(state, {\n                data: {\n                    clientId: {$set: action.value}\n                }\n            });\n        case SAVE_HASH:\n            return update(state, {\n                data: {\n                    hash: {$set: action.value}\n                }\n        });\n        // case ADD_COMMENT:\n        //     return {...state, comments: [...state.comments, action.value]};\n        case GET_TEN_APPLICATIONS:\n            return {...state, applications: action.value};\n        case GET_COUNT_AMOUNT:\n            return {...state, count: action.value};\n        case INPUT_FILTER_DATE_FROM:\n            return update(state, {\n                data: {\n                    filter: {\n                        date: {\n                            from: {$set: action.value}\n                        }\n                    }\n                }\n            });\n        case INPUT_FILTER_DATE_TO:\n            return update(state, {\n                data: {\n                    filter: {\n                        date: {\n                            to: {$set: action.value}\n                        }\n                    }\n                }\n            });\n        case CHANGE_PAGINATION:\n            return update(state, {\n                data: {\n                    start: {$set: action.value}\n                }\n            });\n        case CHANGE_STATUS:\n            return update(state, {\n                data: {\n                    filter: {\n                        status: {$set: action.value}\n                    }\n                }\n            });\n        case CHANGE_DEPARTMENT:\n            return update(state, {\n                data: {\n                    filter: {\n                        departament: {$set: action.value}\n                    }\n                }\n            });\n        case CHANGE_EMPLOYEE:\n            return update(state, {\n                data: {\n                    filter: {\n                        employee: {$set: action.value}\n                    }\n                }\n            });\n        case CHANGE_NUMBER:\n            return update(state, {\n                data: {\n                    filter: {\n                        number: {$set: action.value}\n                    }\n                }\n            });\n        case INIT_FILTERS:\n            return update(state, {\n                data: {\n                    filter: {\n                        status: {$set: []},\n                        departament: {$set: []},\n                        employee: {$set: ''},\n                        number: {$set: ''}\n                    }\n                }\n            })\n        case SET_ACTIVE_PAGE:\n            return {...state, activePage: action.value};\n        case SET_ACTIVE_FILTERS:\n            return {...state, activeFilters: action.value}\n        default:\n            return state;\n    }\n};\n\nexport default applicationsReducer;\n\n\n\n//\n// {\n//     date: \"03. 11. 2019, 10:50\",\n//         status: \"запланировано\",\n//     subject:\"Най\",\n//     department: \"Уа\",\n//     specialist: \"Ана\",\n//     specialistId:\"IT\",\n//     solution: \"Б \",\n//     classLikeDislike: \"like\",\n//     isComment: true,\n//     comment: 'Comment',\n//     worker: 'Примерный рабочий',\n//     workerId: \"ID 3245875\",\n//     specialistPhoto: \"https://transitiontownguildford.files.wordpress.com/2015/06/wall-e.jpg\",\n//     fileImage: \"https://transitiontownguildford.files.wordpress.com/2015/06/wall-e.jpg\",\n//     applicationId: \"IT-011220-039862\",\n//     problem: \"Отправляю письма, а они не доходят до получателей, адреса ввожу правильно. Отчеты о возврате письма не приходят, то есть письмо вроде ушло, но в отправленных его нет, и когда узнаешь, пришло письмо или не пришло, то получатель говорит, что никакого письма не получал.\"\n// },{\n//     date: \"03. 11. 2019, 10:50\",\n//         status: \"в работе\",\n//         subject:\"Не работает вайфай\",\n//         department: \"Удаленная поддержка\",\n//         specialist: \"Александра Панарина\",\n//         specialistId:\"IT 152\",\n//         solution: \"Были введены неправи льные настройки VPN. Исправили настройки на каждом Были введены неправи льные настройки VPN. Исправили настройки на каждом Были введены неправи льные настройки VPN. Исправили настройки на каждом Были введены неправи льные настройки VPN. Исправили настройки на каждом Были введены неправи льные настройки VPN. Исправили настройки на каждом Были введены неправ Были введены неправи льные настройки VPN. Исправили настройки на каждом Были введены неправи льные настройки VPN. Исправили настройки на каждом Были введены неправ\",\n//         classLikeDislike: null,\n//         isComment: false,\n//         comment: 'Comment',\n//         worker: 'Примерный рабочий',\n//         workerId: \"ID 3245875\",\n//         specialistPhoto: \"https://transitiontownguildford.files.wordpress.com/2015/06/wall-e.jpg\",\n//         fileImage: \"https://transitiontownguildford.files.wordpress.com/2015/06/wall-e.jpg\",\n//         applicationId: \"IT-011220-039862\",\n//         problem: \"Отправляю письма, а они не доходят до получателей, адреса ввожу правильно. Отчеты о возврате письма не приходят, то есть письмо вроде ушло, но в отправленных его нет, и когда узнаешь, пришло письмо или не пришло, то получатель говорит, что никакого письма не получал.\"\n// }, {\n//     date: \"03. 11. 2019, 10:50\",\n//         status: \"завершено\",\n//         subject:\"Не работает вайфай\",\n//         department: \"Удаленная поддержка\",\n//         specialist: \"Александра Панарина\",\n//         specialistId:\"IT 152\",\n//         solution: \"Были введены неправи льные настройки VPN. Исправили настройки на каждом Были введены неправи льные настройки VPN. Исправили настройки на каждом Были введены неправи льные настройки VPN. Исправили настройки на каждом \",\n//         classLikeDislike: null,\n//         isComment: true,\n//         comment: 'Comment',\n//         worker: 'Примерный рабочий',\n//         workerId: \"ID 3245875\",\n//         specialistPhoto: \"https://transitiontownguildford.files.wordpress.com/2015/06/wall-e.jpg\",\n//         fileImage: \"https://transitiontownguildford.files.wordpress.com/2015/06/wall-e.jpg\",\n//         applicationId: \"IT-011220-039862\",\n//         problem: \"Отправляю письма, а они не доходят до получателей, адреса ввожу правильно. Отчеты о возврате письма не приходят, то есть письмо вроде ушло, но в отправленных его нет, и когда узнаешь, пришло письмо или не пришло, то получатель говорит, что никакого письма не получал.\"\n// }, {\n//     date: \"03. 11. 2019, 10:50\",\n//         status: \"отменено\",\n//         subject:\"Не работает вайфай\",\n//         department: \"Удаленная поддержка\",\n//         specialist: \"Александра Панарина\",\n//         specialistId:\"IT 152\",\n//         solution: \"Были введены неправи льные настройки VPN. Исправили настройки на каждом Были введены неправи льные настройки VPN. Исправили настройки на каждом Были введены неправи льные настройки VPN. Исправили настройки на каждом \",\n//         classLikeDislike: \"dislike\",\n//         isComment: true,\n//         comment: 'Comment',\n//         worker: 'Примерный рабочий',\n//         workerId: \"ID 3245875\",\n//         specialistPhoto: \"https://transitiontownguildford.files.wordpress.com/2015/06/wall-e.jpg\",\n//         fileImage: \"https://transitiontownguildford.files.wordpress.com/2015/06/wall-e.jpg\",\n//         applicationId: \"IT-011220-039862\",\n//         problem: \"Отправляю письма, а они не доходят до получателей, адреса ввожу правильно. Отчеты о возврате письма не приходят, то есть письмо вроде ушло, но в отправленных его нет, и когда узнаешь, пришло письмо или не пришло, то получатель говорит, что никакого письма не получал.\"\n// }, {\n//     date: \"03. 11. 2019, 10:50\",\n//         status: \"запланировано\",\n//         subject:\"Не работает вайфай\",\n//         department: \"Удаленная поддержка\",\n//         specialist: \"Александра Панарина\",\n//         specialistId:\"IT 152\",\n//         solution: \"Были введены неправи льные настройки VPN. Исправили настройки на каждом Были введены неправи льные настройки VPN. Исправили настройки на каждом Были введены неправи льные настройки VPN. Исправили настройки на каждом \",\n//         classLikeDislike: \"like\",\n//         isComment: false,\n//         comment: 'Comment',\n//         worker: 'Примерный рабочий',\n//         workerId: \"ID 3245875\",\n//         specialistPhoto: \"https://transitiontownguildford.files.wordpress.com/2015/06/wall-e.jpg\",\n//         fileImage: \"https://transitiontownguildford.files.wordpress.com/2015/06/wall-e.jpg\",\n//         applicationId: \"IT-011220-039862\",\n//         problem: \"Отправляю письма, а они не доходят до получателей, адреса ввожу правильно. Отчеты о возврате письма не приходят, то есть письмо вроде ушло, но в отправленных его нет, и когда узнаешь, пришло письмо или не пришло, то получатель говорит, что никакого письма не получал.\"\n// }, {\n//     date: \"03. 11. 2019, 10:50\",\n//         status: \"запланировано\",\n//         subject:\"Не работает вайфай\",\n//         department: \"Удаленная поддержка\",\n//         specialist: \"Александра Панарина\",\n//         specialistId:\"IT 152\",\n//         solution: \"Были введены неправи льные настройки VPN. Исправили настройки на каждом Были введены неправи льные настройки VPN. Исправили настройки на каждом Были введены неправи льные настройки VPN. Исправили настройки на каждом \",\n//         classLikeDislike: \"like\",\n//         isComment: true,\n//         comment: 'Comment',\n//         worker: 'Примерный рабочий',\n//         workerId: \"ID 3245875\",\n//         specialistPhoto: \"https://transitiontownguildford.files.wordpress.com/2015/06/wall-e.jpg\",\n//         fileImage: \"https://transitiontownguildford.files.wordpress.com/2015/06/wall-e.jpg\",\n//         applicationId: \"IT-011220-039862\",\n//         problem: \"Отправляю письма, а они не доходят до получателей, адреса ввожу правильно. Отчеты о возврате письма не приходят, то есть письмо вроде ушло, но в отправленных его нет, и когда узнаешь, пришло письмо или не пришло, то получатель говорит, что никакого письма не получал.\"\n// }, {\n//     date: \"03. 11. 2019, 10:50\",\n//         status: \"в работе\",\n//         subject:\"Не работает вайфай\",\n//         department: \"Удаленная поддержка\",\n//         specialist: \"Александра Панарина\",\n//         specialistId:\"IT 152\",\n//         solution: \"Были введены неправи льные настройки VPN. Исправили настройки на каждом Были введены неправи льные настройки VPN. Исправили настройки на каждом Были введены неправи льные настройки VPN. Исправили настройки на каждом \",\n//         classLikeDislike: null,\n//         isComment: false,\n//         comment: 'Comment',\n//         worker: 'Примерный рабочий',\n//         workerId: \"ID 3245875\",\n//         specialistPhoto: \"https://transitiontownguildford.files.wordpress.com/2015/06/wall-e.jpg\",\n//         fileImage: \"https://transitiontownguildford.files.wordpress.com/2015/06/wall-e.jpg\",\n//         applicationId: \"IT-011220-039862\",\n//         problem: \"Отправляю письма, а они не доходят до получателей, адреса ввожу правильно. Отчеты о возврате письма не приходят, то есть письмо вроде ушло, но в отправленных его нет, и когда узнаешь, пришло письмо или не пришло, то получатель говорит, что никакого письма не получал.\"\n// }, {\n//     date: \"03. 11. 2019, 10:50\",\n//         status: \"завершено\",\n//         subject:\"Не работает вайфай\",\n//         department: \"Удаленная поддержка\",\n//         specialist: \"Александра Панарина\",\n//         specialistId:\"IT 152\",\n//         solution: \"Были введены неправи льные настройки VPN. Исправили настройки на каждом Были введены неправи льные настройки VPN. Исправили настройки на каждом Были введены неправи льные настройки VPN. Исправили настройки на каждом \",\n//         classLikeDislike: null,\n//         isComment: true,\n//         comment: 'Comment',\n//         worker: 'Примерный рабочий',\n//         workerId: \"ID 3245875\",\n//         specialistPhoto: \"https://transitiontownguildford.files.wordpress.com/2015/06/wall-e.jpg\",\n//         fileImage: \"https://transitiontownguildford.files.wordpress.com/2015/06/wall-e.jpg\",\n//         applicationId: \"IT-011220-039862\",\n//         problem: \"Отправляю письма, а они не доходят до получателей, адреса ввожу правильно. Отчеты о возврате письма не приходят, то есть письмо вроде ушло, но в отправленных его нет, и когда узнаешь, пришло письмо или не пришло, то получатель говорит, что никакого письма не получал.\"\n// }, {\n//     date: \"03. 11. 2019, 10:50\",\n//         status: \"отменено\",\n//         subject:\"Не работает вайфай\",\n//         department: \"Удаленная поддержка\",\n//         specialist: \"Александра Панарина\",\n//         specialistId:\"IT 152\",\n//         solution: \"Были введены неправи льные настройки VPN. Исправили настройки на каждом Были введены неправи льные настройки VPN. Исправили настройки на каждом Были введены неправи льные настройки VPN. Исправили настройки на каждом \",\n//         classLikeDislike: \"dislike\",\n//         isComment: true,\n//         comment: 'Comment',\n//         worker: 'Примерный рабочий',\n//         workerId: \"ID 3245875\",\n//         specialistPhoto: \"https://transitiontownguildford.files.wordpress.com/2015/06/wall-e.jpg\",\n//         fileImage: \"https://transitiontownguildford.files.wordpress.com/2015/06/wall-e.jpg\",\n//         applicationId: \"IT-011220-039862\",\n//         problem: \"Отправляю письма, а они не доходят до получателей, адреса ввожу правильно. Отчеты о возврате письма не приходят, то есть письмо вроде ушло, но в отправленных его нет, и когда узнаешь, пришло письмо или не пришло, то получатель говорит, что никакого письма не получал.\"\n// }, {\n//     date: \"03. 11. 2019, 10:50\",\n//         status: \"запланировано\",\n//         subject:\"Не работает вайфай\",\n//         department: \"Удаленная поддержка\",\n//         specialist: \"Александра Панарина\",\n//         specialistId:\"IT 152\",\n//         solution: \"Были введены неправи льные настройки VPN. Исправили настройки на каждом Были введены неправи льные настройки VPN. Исправили настройки на каждом Были введены неправи льные настройки VPN. Исправили настройки на каждом \",\n//         classLikeDislike: \"like\",\n//         isComment: false,\n//         comment: 'Comment',\n//         worker: 'Примерный рабочий',\n//         workerId: \"ID 3245875\",\n//         specialistPhoto: \"https://transitiontownguildford.files.wordpress.com/2015/06/wall-e.jpg\",\n//         fileImage: \"https://transitiontownguildford.files.wordpress.com/2015/06/wall-e.jpg\",\n//         applicationId: \"IT-011220-039862\",\n//         problem: \"Отправляю письма, а они не доходят до получателей, адреса ввожу правильно. Отчеты о возврате письма не приходят, то есть письмо вроде ушло, но в отправленных его нет, и когда узнаешь, пришло письмо или не пришло, то получатель говорит, что никакого письма не получал.\"\n// }\n\n//         date dateCreate: \"03. 11. 2019, 10:50\",\n//         status status: \"запланировано\",\n//         subject subject:\"Не работает вайфай\",\n//         department department: \"Удаленная поддержка\",\n//         specialist implementer.name: \"Александра Панарина\",\n//         specialistId implementer.id:\"IT 152\",\n//         solution outcome: \"Были введены неправи льные настройки VPN. Исправили настройки на каждом Были введены неправи льные настройки VPN. Исправили настройки на каждом Были введены неправи льные настройки VPN. Исправили настройки на каждом \",\n//         classLikeDislike rating: \"like\",\n//         isComment: false,\n//         comment: 'Comment',\n//         worker employee.name: 'Примерный рабочий',\n//         workerId employee.id: \"ID 3245875\",\n//         specialistPhoto implementer.photo: \"https://transitiontownguildford.files.wordpress.com/2015/06/wall-e.jpg\",\n//         fileImage images[0]: \"https://transitiontownguildford.files.wordpress.com/2015/06/wall-e.jpg\",\n//         applicationId number: \"IT-011220-039862\",\n//         problem details: \"Отправляю письма, а они не доходят до получателей, адреса ввожу правильно. Отчеты о возврате письма не приходят, то есть письмо вроде ушло, но в отправленных его нет, и когда узнаешь, пришло письмо или не пришло, то получатель говорит, что никакого письма не получал.\"\n// }","D:\\IT\\JavaScript\\projects\\it_support\\src\\Store\\CompanyDataReducer\\companyDataReducer.js",[],"D:\\IT\\JavaScript\\projects\\it_support\\src\\Store\\UsersReducer\\usersReducer.js",[],"D:\\IT\\JavaScript\\projects\\it_support\\src\\Containers\\ApplicationPage\\ApplicationPage.js",["214","215","216","217"],"D:\\IT\\JavaScript\\projects\\it_support\\src\\Containers\\SearchResultsPage\\SearchResultsPage.js",["218","219","220"],"import React, { useState, useEffect } from 'react';\nimport LayoutSearchResults from '../../Components/SearchResultsComponents/LayoutSearchResults/LayoutSearchResults';\nimport ResultsTableWorker from '../../Components/SearchResultsComponents/ResultsTableWorker/ResultsTableWorker';\nimport './SearchResultsPage.css';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {\n    changePagination,\n    inputFilterDateFrom,\n    inputFilterDateTo, isFilterDateActive, setActivePage\n} from \"../../Store/ApplicationsReducer/applicationsActions\";\nimport moment from 'moment';\nimport {getCompanyData} from \"../../Store/CompanyDataReducer/companyActions\";\nimport {push} from 'connected-react-router';\nimport ModalPeriod from \"../../Components/SearchResultsComponents/ModalPeriod/ModalPeriod\";\n\nconst SearchResultsPage = () => {\n    const dispatch = useDispatch();\n    // let filtersCheck = {\n    //     isFilterStatus: useSelector(state => state.applications.data['filter'].status.length > 0) ? \"статус\" : null,\n    //     isFilterDepartment: useSelector(state => state.applications.data['filter'].departament.length > 0) ? \"отдел\" : null,\n    //     isFilterWorker: useSelector(state => state.applications.data['filter'].employee.trim() !== '') ? \"сотрудник\" : null,\n    //     isFilterNumber: useSelector(state => state.applications.data['filter'].number !== '') ? \"id заявки\" : null\n    // }\n    const [period, setPeriod] = useState({\n        start: 'ДД/ММ/ГГ',\n        startOrigin: 'ДД/ММ/ГГ',\n        end: 'ДД/ММ/ГГ',\n        endOrigin: 'ДД/ММ/ГГ'\n    });\n    let filters = useSelector(state => state.applications.activeFilters);\n    // const [filters, setFilters] = useState([]); // после выбора фильтров они попадают в массив\n    // useEffect(() => {\n    //     let arr = [];\n    //     Object.keys(filtersCheck).map(el => {\n    //         if (filtersCheck[el]) {\n    //             arr.push(filtersCheck[el]);\n    //         }\n    //         // setFilters(arr);\n    //     })\n    //     console.log(arr)\n    //     dispatch(setActiveFilters(arr));\n    //\n    // }, [dispatch]);\n    // const isFilter = filters.length > 0;\n    const hash = useSelector(state => state.applications.data.hash)\n    useEffect(() => {\n        if (!hash) return dispatch(push('/login'));\n        dispatch(getCompanyData(hash));\n    }, [dispatch]);\n    useEffect(() => {\n        if (!filters.includes('дата')) {\n            setPeriod(prevState => {\n                return {...prevState, startOrigin: 'ДД/ММ/ГГ', endOrigin: 'ДД/ММ/ГГ'}\n            });\n        }\n    }, [filters]);\n\n    const dateFromState = useSelector(state => state.applications.data.filter.date);\n    console.log(\"DATE \", dateFromState)\n\n    const dateStart = filters.includes('дата') ?  [dateFromState.from.slice(0, 4), \"-\", dateFromState.from.slice(4, 6), \"-\", dateFromState.from.slice(6)].join('') : period.startOrigin;\n    const dateEnd = filters.includes('дата') ?  [dateFromState.to.slice(0, 4), \"-\", dateFromState.to.slice(4, 6), \"-\", dateFromState.to.slice(6)].join('') : period.endOrigin;\n    const company = useSelector(state => state.company.companyData);\n    let equipmentId;\n    let workerName;\n    let companyName;\n    if (company) {\n        equipmentId = company.director ? company.director.id : company.employee ? company.employee.id : \"\";\n        workerName = company.employee ? company.employee.name : '';\n        companyName =  company.company;\n    }\n\n    const companyLogo = useSelector(state => state.company.companyData['logo']);\n    const [showQuestion, setShowQuestion] = useState(false);\n    const [calendarModal, setCalendarModal] = useState(false);\n\n    \n    \n    // const [activePage, setActivePage] = useState(1);\n    const activePage = useSelector(state => state.applications.activePage);\n    const count = useSelector(state => state.applications.count);\n\n    let pagesNumbers = Math.ceil(count / 10); // получать количество страниц для пагинации и кидать число в цикл, чтобы получить массив, нужен для отрисовки\n    // let pagesNumbers = 14;\n\n\n    let tableView;\n    let allPages;\n    let allFilters;\n    const hoverShowQuestion = () => {\n        setShowQuestion(true);\n    }\n    const hoverHideQuestion = () => {\n        setShowQuestion(false);\n    }\n\n    const [deactivateBtnDate, setDeactivateBtn] = useState({});\n    // const isFilterDate = useSelector(state => state.applications.isFilterDateActive);\n    const chooseDateBtnSimple = (event) => {\n        const el = document.getElementsByClassName('LayoutSearchResults__btnDate');\n        for (let i = 0; i < el.length; i++) {\n            el[i].style.color = '#E34A4E';\n            el[i].style.background = 'white';\n        }\n        const innerText = event.target.textContent;\n        if (deactivateBtnDate[innerText]) {\n            setDeactivateBtn({});\n            deactivateDateFilter();\n           return;\n        }\n        setDeactivateBtn({[event.target.textContent]: true});\n        event.target.style.color = 'white';\n        event.target.style.background = '#E34A4E';\n        // let date = new Date();\n        // let year = date.getFullYear();\n        // let month = date.getMonth() + 1;\n        // if (month < 10) {\n        //     month = \"0\" + month;\n        // }\n        // let day = date.getDate()\n        // if (day < 10) {\n        //     day = \"0\" + day;\n        // }\n        // const today = `${year}${month}${day}`\n        if (innerText === 'Период') {\n            setCalendarModal(true);\n        } else {\n            let today = moment().format(\"YYYYMMDD\");\n            let chosenDate;\n            dispatch(changePagination(0));\n            dispatch(setActivePage(1));\n            switch (innerText) {\n                case \"Сегодня\":\n                    chosenDate = today;\n                    break;\n                case \"Вчера\":\n                    chosenDate = moment().subtract(1, 'days').format(\"YYYYMMDD\");\n                    break;\n                case \"Неделя\":\n                    chosenDate = moment().subtract(7, 'days').format(\"YYYYMMDD\");\n                    break;\n                case \"Месяц\":\n                    chosenDate = moment().subtract(1, 'months').format(\"YYYYMMDD\");\n                    break;\n                case \"Квартал\":\n                    chosenDate = moment().subtract(3, 'months').format(\"YYYYMMDD\");\n                    break;\n                case \"Полугодие\":\n                    chosenDate = moment().subtract(6, 'months').format(\"YYYYMMDD\");\n                    break;\n                default:\n                    break;\n            }\n            dispatch(inputFilterDateFrom(chosenDate));\n            dispatch(inputFilterDateTo(today));\n            dispatch(isFilterDateActive(true));\n            const formatStartDate = [today.slice(0, 4), \"-\", today.slice(4, 6), \"-\", today.slice(6)].join('');\n            const formatEndDate = [chosenDate.slice(0, 4), \"-\", chosenDate.slice(4, 6), \"-\", chosenDate.slice(6)].join('');\n            setPeriod(prevState => {\n                return {...prevState, startOrigin: formatStartDate, endOrigin: formatEndDate}\n            });\n        }\n    }\n\n    const deactivateDateFilter =  () => {\n         dispatch(isFilterDateActive(false));\n         dispatch(inputFilterDateFrom(\"\"));\n         dispatch(inputFilterDateTo(\"\"));\n        const el = document.getElementsByClassName('LayoutSearchResults__btnDate');\n        for (let i = 0; i < el.length; i++) {\n            el[i].style.color = '#E34A4E';\n            el[i].style.background = 'white';\n        }\n    }\n\n    \n    const closeModal = () => {\n        setCalendarModal(false);\n    }\n\n\n    const countPagination = () => {\n    // Отрисовка пагинации\n    if (pagesNumbers) {\n        if (pagesNumbers <= 8) {\n            let arr = [];\n            for (let i = 0; i < pagesNumbers; i++) {\n                arr[i] = i + 1;\n            }\n            allPages = arr.map(el => {\n                return (\n                    <p key={el} onClick={el !== \"...\" ? (event) => {choosePage(event)} : null} className={`${el !== \"...\" ? \"PaginationNumber\" : \"PaginationDots\"} ${el === 1 ? \"PaginationNumber--defaultActive\" : null}`}>\n                        {el}\n                    </p>\n                )\n            });\n        } else {\n            // сложная отрисовка пагинации относительно количества страниц, чтобы было видно начальные и последние страницы когда мы в центре, но количество элементов должно оставаться 8\n                let arr = [];\n                if (activePage < 5) {  \n\n                for (let i = 0; i < 8; i++) {\n                    // Когда кликнута страница меньше пятой, но страниц больше 8\n                        if (i > 4) {\n                            arr[i] = \"...\";\n                            arr[i + 1] = pagesNumbers - 1;\n                            arr[i + 2] = pagesNumbers;\n                            break;\n                        } else {\n                            arr[i] = i + 1;\n                        }\n                    }\n                     // Если активная страница равна 5\n                } else if (activePage === 5) {\n                    for (let i = 0; i < 8; i++) {\n                        if (i === 0) {\n                            arr[i] = \"...\";\n                        } \n                        else if (i < 5) {\n                            arr[i] = i + 1;\n                        } else {\n                            arr[i] = activePage + 1;\n                            arr[i + 1] = \"...\";\n                            arr[i + 2] = pagesNumbers;\n                            break;\n                        }\n                    }\n                }\n                     // Если активная страница выше 5 но не выше чем максимум - 3\n                else if (activePage > 5 && activePage <= pagesNumbers - 3) {\n                            arr[0] = 1;\n                            arr[1] = \"...\";\n                            arr[2] = activePage - 2;\n                            arr[3] = activePage - 1;\n                            arr[4] = activePage;\n                            arr[5] = activePage + 1;\n                            arr[6] = \"...\";\n                            arr[7] = pagesNumbers;\n                }\n                 // Если активная страница выше чем максимум - 3\n                 else if (activePage > pagesNumbers - 3) {\n                            arr[0] = 1;\n                            arr[1] = 2\n                            arr[2] = \"...\";\n                            arr[3] = pagesNumbers - 4;\n                            arr[4] = pagesNumbers - 3;\n                            arr[5] = pagesNumbers - 2;\n                            arr[6] = pagesNumbers - 1;\n                            arr[7] = pagesNumbers;\n        }\n                allPages = arr.map((el, i) => {  \n                    return (\n                        <p key={el + i} onClick={el !== \"...\" ? (event) => {choosePage(event)} : null} className={`${el !== \"...\" ? \"PaginationNumber\" : \"PaginationDots\"} ${el === activePage ? \"PaginationNumber--defaultActive\" : null}`}>\n                            {el}\n                        </p> \n                    )\n                });\n            }\n    }\n}\n\ncountPagination();\n\n    const choosePage = (event) => {\n        // const el = document.getElementsByClassName('PaginationNumber');\n        // for (let i = 0; i < el.length; i++) {\n        //     el[i].style.fontSize = '14px';\n        //     el[i].style.textDecoration = 'none';\n        //     el[i].style.fontWeight = 'normal';\n        // }\n        // event.target.style.fontSize = '18px';\n        // event.target.style.fontWeight = 'bold';\n        // event.target.style.textDecoration = 'underline';\n\n        dispatch(setActivePage(parseInt(event.target.textContent)));\n        countPagination();\n        // colorActivePage();\n    }\n    const colorActivePage = () => {\n        const el = document.getElementsByClassName('PaginationNumber');\n        for (let i = 0; i < el.length; i++) {\n            el[i].style.fontSize = '14px';\n            el[i].style.textDecoration = 'none';\n            el[i].style.fontWeight = 'normal';\n        }\n        if (pagesNumbers <= 8) {\n            el[activePage - 1].style.fontSize = '18px';\n            el[activePage - 1].style.fontWeight = 'bold';\n            el[activePage - 1].style.textDecoration = 'underline';\n        } else {\n            if (activePage < 4) {\n                el[activePage - 1].style.fontSize = '18px';\n                el[activePage - 1].style.fontWeight = 'bold';\n                el[activePage - 1].style.textDecoration = 'underline';\n            } else if (activePage === pagesNumbers) {\n                el[6].style.fontSize = '18px';\n                el[6].style.fontWeight = 'bold';\n                el[6].style.textDecoration = 'underline';\n            } else if (activePage > pagesNumbers - 3) {\n                el[6 - (pagesNumbers - activePage)].style.fontSize = '18px';\n                el[6 - (pagesNumbers - activePage)].style.fontWeight = 'bold';\n                el[6 - (pagesNumbers - activePage)].style.textDecoration = 'underline';\n            } else {\n                el[3].style.fontSize = '18px';\n                el[3].style.fontWeight = 'bold';\n                el[3].style.textDecoration = 'underline';\n            }\n        }\n        // console.log(el[0]);\n    }\n\n    const paginationRight = () => {\n        if (activePage !== pagesNumbers) {\n            dispatch(setActivePage(activePage + 1));\n            // countPagination();\n            // colorActivePage();\n        }\n    };\n    const paginationLeft = () => {\n        if (activePage !== 1) {\n            dispatch(setActivePage(activePage - 1));\n            // countPagination();\n            // colorActivePage();\n        }\n    };\n\n\n\n    tableView = (\n    <>\n        <ResultsTableWorker />\n    </>);\n\n\n\n\n\n    if (filters.length !== 0) {\n        // Внизу страницы отображются активные фильтры, здесь они и рисуются\n        allFilters = filters.map((el, i) => {\n            return (\n                <div className=\"LayoutSearchResults__filters\" key={el}>\n                    <div className=\"FilterElement\">\n                        {el}\n                    </div>\n                    {filters.length > 1 && i < filters.length - 1 ? <p className=\"FilterElement__plus\">+</p> : null}\n                </div>\n            )\n        })\n    }\n    useEffect(() => {\n        const el = document.getElementsByClassName('PaginationNumber');\n        if (el[0]) {\n            colorActivePage();\n        }\n    }, [activePage]);\n\n    useEffect(() => {\n        dispatch(changePagination((activePage - 1) * 10));\n    }, [activePage]);\n\n\n    // const inputStartDateValue = (event) => {\n    //     const value = event.target.value.replace(new RegExp(\"-\", \"g\"), '');\n    //     setPeriod(prevState => {\n    //         return {...prevState, start: value, startOrigin: event.target.value}\n    //     })\n    // }\n    // const inputEndDateValue = (event) => {\n    //     const value = event.target.value.replace(new RegExp(\"-\", \"g\"), '');\n    //     setPeriod(prevState => {\n    //         return {...prevState, end: value,endOrigin: event.target.value}\n    //     })\n    // }\n    const acceptDatePeriod = () => {\n        dispatch(setActivePage(1));\n        dispatch(inputFilterDateFrom(period.start));\n        dispatch(inputFilterDateTo(period.end));\n        closeModal();\n    }\n    return (\n            <LayoutSearchResults\n                equipmentId={equipmentId}\n                workerName={workerName}\n                companyName={companyName}\n                companyLogo={companyLogo}\n\n                dateEngineClick={(event) => {chooseDateBtnSimple(event)}}\n                datePeriodClick={(event) => {chooseDateBtnSimple(event)}}\n\n\n                dateValueStart={dateStart}\n                dateValueEnd={dateEnd}\n\n                questionShow={hoverShowQuestion}\n                questionHide={hoverHideQuestion}\n                showQuestionModal={showQuestion}\n                questionText={\"Укажите регистрационный номер заявки для быстрого поиска\"}\n            \n\n                isFilter={filters.length > 0}\n                filters={allFilters}\n                morePages={Math.ceil(count / 10) > 1}\n                paginationClickLeft={paginationLeft}\n                paginationClickRight={paginationRight}\n                pagesNumbers={allPages}\n\n            >\n                {calendarModal ?\n                    <ModalPeriod\n                        closeModal={closeModal}\n                        acceptDatePeriod={acceptDatePeriod}\n                        // inputStartDateValue={(event) => {inputStartDateValue(event)}}\n                        // inputEndDateValue={(event) => {inputEndDateValue(event)}}\n                        dateValueStart={period.startOrigin}\n                        dateValueEnd={period.endOrigin}\n                    />\n               : null}\n                {tableView}\n            </LayoutSearchResults>\n    )\n}\n\nexport default SearchResultsPage;","D:\\IT\\JavaScript\\projects\\it_support\\src\\Containers\\UserLoginPage\\UserLoginPage.js",["221","222","223","224","225","226"],"import React, { useRef, useState, useEffect } from 'react';\nimport AuthenticationModal from '../../Components/UserLoginPageComponents/AuthenticationModal/AuthenticationModal';\nimport HelperInfo from '../../Components/UserLoginPageComponents/HelperInfo/HelperInfo';\nimport LoginForm from '../../Components/UserLoginPageComponents/LoginForm/LoginForm';\nimport PhoneInput from '../../Components/UserLoginPageComponents/PhoneInput/PhoneInput';\nimport SmsInput from '../../Components/UserLoginPageComponents/SmsInput/SmsInput';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {loginUser, saveUser, sendPhone, sendSms, setLoginStatus} from \"../../Store/UsersReducer/usersActions\";\n\n\nconst UserLoginPage = (props) => {\n    const dispatch = useDispatch();\n    // const id = \"1267-02-00020\";\n    // const id = \"1240-02-00044\";\n    const id = props.match.params.id;\n    useEffect(() => {\n        if (id) {\n            dispatch(setLoginStatus(\"phone\"));\n        }\n    }, [id]);\n    console.log(\"ID SAMPLE: 1240-02-00044\")\n    const [phoneCode, setPhoneCode] = useState(\"\");\n    const [phoneA, setPhoneA] = useState(\"\");\n    const [phoneB, setPhoneB] = useState(\"\");\n    const [phoneC, setPhoneC] = useState(\"\");\n\n    const [sms1, setSms1] = useState(\"\");\n    const [sms2, setSms2] = useState(\"\");\n    const [sms3, setSms3] = useState(\"\");\n    const [sms4, setSms4] = useState(\"\");\n\n    useEffect(() => {\n        if (sms1 && sms2 && sms3 && sms4) {\n            const smsAndIdNumber = {\n                _id: id,\n                sms: `${sms1}${sms2}${sms3}${sms4}`\n            }\n            dispatch(sendSms(smsAndIdNumber));\n        }\n    }, [sms1, sms2,  sms3, sms4]);\n\n    useEffect(() => {\n        localStorage.clear();\n        if (id) {\n            dispatch(saveUser(id));\n        }\n    }, [dispatch]);\n\n    const phoneError = useSelector(state => state.users.phoneLoginError);\n    const smsError = useSelector(state => state.users.smsLoginError);\n\n    const sendPhoneByPressEnter = async (event) => {\n        if(event.key === 'Enter'){\n            event.preventDefault();\n            let phoneNumber = `+7${phoneCode}${phoneA}${phoneB}${phoneC}`;\n            await dispatch(sendPhone({phone: phoneNumber}, id));\n        }\n    }\n\n    const sendPhoneHandler = async () => {\n        let phoneNumber = `+7${phoneCode}${phoneA}${phoneB}${phoneC}`;\n        await dispatch(sendPhone({phone: phoneNumber}, id));\n    }\n    const resendSmsHandler = () => {\n        sendPhoneHandler();\n        setSms1('');\n        setSms2('');\n        setSms3('');\n        setSms4('');\n    }\n\n    // const refPhone = useRef();\n\n    const status = useSelector(state => state.users.loginStatus);\n    let grey = false;\n    let loginContent;\n    let question;\n    let link;\n    let textLink;\n    let contacts;\n    // const MAX_LENGTH = 1;\n\n\n    const handleChangePhone = (e) => {\n        const { maxLength, value, name } = e.target;\n        const [fieldName, fieldIndex] = name.split(\"-\");\n        if (value.length >= maxLength) {\n          if (parseInt(fieldIndex, 10) < 4) {\n            const nextSibling = document.querySelector(\n              `input[name=ssn-${parseInt(fieldIndex, 10) + 1}]`\n            );\n          \n            if (nextSibling !== null) {\n              nextSibling.focus();\n              \n            }\n          }\n        }\n        if (value.length === 0) {\n            const prevSibling = document.querySelector(\n                `input[name=ssn-${parseInt(fieldIndex, 10) - 1}]`\n              );\n            \n              if (prevSibling !== null) {\n                prevSibling.focus();\n              }\n        }\n        if (name === \"ssn-1\") {\n            setPhoneCode(e.target.value);\n        } else if (name === \"ssn-2\") {\n            setPhoneA(e.target.value);\n        } else if (name === \"ssn-3\") {\n            setPhoneB(e.target.value);\n        } else if (name === \"ssn-4\") {\n            setPhoneC(e.target.value);\n        }\n      }\n\n      const handleChangeSms = (e) => {\n        const { maxLength, value, name } = e.target;\n        const [fieldName, fieldIndex] = name.split(\"-\");\n        if (value.length >= maxLength) {\n          if (parseInt(fieldIndex, 10) < 4) {\n            const nextSibling = document.querySelector(\n              `input[name=smsn-${parseInt(fieldIndex, 10) + 1}]`\n            );\n          \n            if (nextSibling !== null) {\n              nextSibling.focus();\n              \n            }\n          }\n        }\n        if (value.length === 0) {\n            const prevSibling = document.querySelector(\n                `input[name=smsn-${parseInt(fieldIndex, 10) - 1}]`\n              );\n            \n              if (prevSibling !== null) {\n                prevSibling.focus();\n              }\n        }\n        if (name === \"smsn-1\") {\n            setSms1(e.target.value);\n        } else if (name === \"smsn-2\") {\n            setSms2(e.target.value);\n        } else if (name === \"smsn-3\") {\n            setSms3(e.target.value);\n        } else if (name === \"smsn-4\") {\n            setSms4(e.target.value);\n        }\n      }\n\n    if (status === \"sms\") {\n        grey = true;\n        question = \"У вас возникли сложности?\";\n        link = \"#\";\n        textLink = \"Оставьте заявку в чат-боте WatsApp\";\n        contacts = \"или позвоните на +7 707 390 11 12, и мы что-нибудь придумаем.\";\n        loginContent = (\n            <SmsInput\n                time={\"15\"}\n                wrongPassword={smsError}\n                error={smsError}\n                buttonName={\"запросить SMS повторно\"}\n                buttonWidth={\"303\"}\n                phone={`+7 ${phoneCode} *** ** ${phoneC}`}\n                clicked={(event) => {resendSmsHandler(event)}}\n            >\n                  <div className=\"SmsInput__phoneBlock\">\n                    <input\n                        value={sms1}\n                        placeholder=\"_\"\n                        className=\"SmsInput__inputPiece\"\n                        type=\"text\"\n                        name=\"smsn-1\"\n                        maxLength={1}\n                        onChange={handleChangeSms} />\n                    <input\n                        value={sms2}\n                        placeholder=\"_\"\n                        className=\"SmsInput__inputPiece\"\n                        type=\"text\"\n                        name=\"smsn-2\"\n                        maxLength={1}\n                        onChange={handleChangeSms} />\n                    <input\n                        value={sms3}\n                        placeholder=\"_\"\n                        className=\"SmsInput__inputPiece\"\n                        type=\"text\"\n                        name=\"smsn-3\"\n                        maxLength={1}\n                        onChange={handleChangeSms} />\n                    <input\n                        value={sms4}\n                        placeholder=\"_\"\n                        className=\"SmsInput__inputPiece\"\n                        type=\"text\"\n                        name=\"smsn-4\"\n                        maxLength={1}\n                        onChange={handleChangeSms} />\n                </div>\n            </SmsInput>\n        )\n    }\n    if (status === \"phone\") {\n        grey = true;\n        question = \"У вас возникли сложности?\";\n        link = \"#\";\n        textLink = \"Оставьте заявку в чат-боте WatsApp\";\n        contacts = \"или позвоните на +7 707 390 11 12, и мы что-нибудь придумаем.\";\n        loginContent = (\n            <PhoneInput\n                error={phoneError}\n                // refPhone={refPhone}\n                // phoneModel={\"+7 444\"}\n                // activateInput={activateInput}\n                // phoneOnChange={(event) => {phoneOnChangeHandler(event)}}\n                buttonName={\"запросить SMS-пароль\"}\n                buttonWidth={\"303\"}\n                clicked={sendPhoneHandler}\n            >\n                <div className=\"PhoneInput__phoneBlock\">\n                    <p className=\"PhoneInput__phoneText\">+7 (</p>\n                    <input\n                        onKeyPress={(event) => {sendPhoneByPressEnter(event)}}\n                        placeholder=\"---\"\n                        className=\"PhoneInput__inputPiece PhoneInput__inputPiece--long\"\n                        type=\"text\"\n                        name=\"ssn-1\"\n                        maxLength={3}\n                        onChange={handleChangePhone} />\n                    <p className=\"PhoneInput__phoneText\">) </p>\n                    <input\n                        onKeyPress={(event) => {sendPhoneByPressEnter(event)}}\n                        placeholder=\"---\"\n                        className=\"PhoneInput__inputPiece PhoneInput__inputPiece--long\"\n                        type=\"text\"\n                        name=\"ssn-2\"\n                        maxLength={3}\n                        onChange={handleChangePhone} />\n                    <p className=\"PhoneInput__phoneText\"> - </p>\n                    <input\n                        onKeyPress={(event) => {sendPhoneByPressEnter(event)}}\n                        placeholder=\"--\"\n                        className=\"PhoneInput__inputPiece PhoneInput__inputPiece--short\"\n                        type=\"text\"\n                        name=\"ssn-3\"\n                        maxLength={2}\n                        onChange={handleChangePhone} />\n                    <p className=\"PhoneInput__phoneText\"> - </p>\n                    <input\n                        onKeyPress={(event) => {sendPhoneByPressEnter(event)}}\n                        placeholder=\"--\"\n                        className=\"PhoneInput__inputPiece PhoneInput__inputPiece--short\"\n                        type=\"text\"\n                        name=\"ssn-4\"\n                        maxLength={2}\n                        onChange={handleChangePhone} />\n                </div>\n            </PhoneInput>\n        )\n    }\n\n    const [user, setUser] = useState({\n        username: \"\",\n        password: \"\"\n    });\n    const inputValue = (event) => {\n        const {name, value} = event.target;\n        setUser(prevState => {\n            return {...prevState, [name]: value}\n        });\n    }\n    const submitLoginUser = (event) => {\n        event.preventDefault();\n        dispatch(loginUser(user.username, user.password));\n    }\n\n    const submitLoginByEnterButton = (event) => {\n        // Number 13 is the \"Enter\" key on the keyboard\n        if(event.key === 'Enter'){\n            event.preventDefault();\n\n            dispatch(loginUser(user.username, user.password));\n\n        }\n    };\n\n    const usernameError = useSelector(state => state.users.usernameLoginError);\n    const passwordError = useSelector(state => state.users.passwordLoginError);\n\n    if (status === \"login\") {\n        question = \"Не помните данные для входа?\";\n        link = \"#\";\n        textLink = \"Оставьте заявку в чат-боте WatsApp\";\n        contacts = \"или позвоните на +7 707 390 11 12, и мы восстановим ваш логин и пароль.\";\n        loginContent = (\n            <LoginForm \n                title={\"Личный кабинет клиента\"}\n                keyPress={(event) => {submitLoginByEnterButton(event)}}\n                submit={(event) => {submitLoginUser(event)}}\n                loginOnChange={(event) => {inputValue(event)}}\n                passwordOnChange={(event) => {inputValue(event)}}\n                // checkOnChange\n                errorUsername={usernameError}\n                errorPassword={passwordError}\n                buttonName={\"войти\"}\n                buttonWidth={\"142\"}\n                // refCheckbox\n            />\n        )\n    }\n\n    return (\n        <div>\n            <AuthenticationModal>\n                {loginContent}\n            </AuthenticationModal>\n            <HelperInfo \n                question={question}\n                link={link}\n                textLink={textLink}\n                contacts={contacts}\n                grey={grey}\n                instagram={\"#\"}\n                facebook={\"#\"}\n                linkedin={\"#\"}\n                youtube={\"#\"}\n            />\n        </div>\n    )\n}\n\nexport default UserLoginPage;","D:\\IT\\JavaScript\\projects\\it_support\\src\\hoc\\WithLoader\\WithLoader.js",["227","228"],"import React, { useEffect, useMemo, useState } from 'react';\nimport './WithLoader.css';\n\nconst WithLoader = (WrappedComponent, axios) => {\n    \n\n    return function Comp(props) {\n        // let time;\n        let intercept;\n        const [loader, setLoader] = useState(false);\n\n        intercept = useMemo(() => {\n            // clearTimeout(time);\n            try {\n                axios.interceptors.request.use((req) => {\n                    setLoader(true);\n\n                    // Условие чтобы остановить спиннер если ответ не приходит, проверрить при других обстоятельствах\n                    // time = setTimeout(() => {\n                    //     if (req.maxBodyLength === -1) {\n                    //         setLoader(false);\n                    //     };\n                    // },3500);\n\n\n                    return req;\n                }, (error) => {\n                    setLoader(false);\n                    return new Promise.reject(error);\n                });\n            } catch (err) {\n                setLoader(false);\n                console.log(err);\n            }\n\n\n            try {\n                axios.interceptors.response.use(resp => {\n                    setLoader(false);\n                    return resp;\n                }, (error) => {\n                    setLoader(false);\n                    return new Promise.reject(error);\n                });\n            } catch (err) {\n                setLoader(false);\n                console.log(err);\n            }\n\n            // clearTimeout(time);\n        }, []);\n\n\n\n        useEffect(() => {\n            try {\n                return axios.interceptors.request.eject(intercept);\n            } catch (err) {\n                setLoader(false);\n                console.log(err);\n            }\n        }, []);\n        useEffect(() => {\n            try {\n                return axios.interceptors.response.eject(intercept);\n            } catch (err) {\n                setLoader(false);\n                console.log(err);\n            }\n        }, []);\n\n        return    (\n            <>\n                {!!loader ? <div> <div className='Hoc_loaderBG' /><div className='Hoc_loader' /></div> : null}\n                <WrappedComponent {...props} />\n            </>\n        )\n    }\n};\n\nexport default WithLoader;\n\n","D:\\IT\\JavaScript\\projects\\it_support\\src\\Components\\ApplicationPageComponents\\ErrorWindow\\ErrorWindow.js",["229","230","231","232","233","234","235","236","237"],"import React from 'react';\nimport './ErrorWindow.css';\n\nconst ErrorWindow = () => {\n    return (\n        <div className=\"ErrorWindow\">\n            <div className=\"ErrorWindow__container\">\n                <h1 className=\"ErrorWindow__title\">Что-то пошло не так</h1>\n                <p className=\"ErrorWindow__text\">Страница не загружается. Не отчаивайтесь!</p>\n                <p className=\"ErrorWindow__text\">Вы можете оставить заявку в приложении <a href=\"#\" className=\"ErrorWindow__link\">TeamViewer</a> или по телефону:</p>\n              \n                <div className=\"ErrorWindow__contacts\">\n                    <div className=\"ErrorWindow__contactSide\">\n                        <p className=\"ErrorWindow__phone\">+7 727 390 11 12</p>\n                        <p className=\"ErrorWindow__city\">в Алматы</p>\n                    </div>\n                    <div className=\"ErrorWindow__contactSide\">\n                        <p className=\"ErrorWindow__phone\">+7 717 264 61 12</p>\n                        <p className=\"ErrorWindow__city\">в Нур-Султане</p>\n                    </div>\n                </div>\n                <div className=\"ErrorWindow__socialNetwork\">\n                    <p className=\"ErrorWindow__textSocial\">Мы в социальных сетях</p>\n                    <a href=\"#\" className=\"ErrorWindow__icon ErrorWindow__icon--instagram\"></a>\n                    <a href=\"#\" className=\"ErrorWindow__icon ErrorWindow__icon--facebook\"></a>\n                    <a href=\"#\" className=\"ErrorWindow__icon ErrorWindow__icon--linkedin\"></a>\n                    <a href=\"#\" className=\"ErrorWindow__icon ErrorWindow__icon--youtube\"></a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ErrorWindow;","D:\\IT\\JavaScript\\projects\\it_support\\src\\Components\\SearchResultsComponents\\FullApplicationInfo\\FullApplicationInfo.js",["238","239"],"import React, { useState } from 'react';\nimport './FullApplicationInfo.css';\nimport {push} from 'connected-react-router';\nimport { useDispatch } from \"react-redux\";\n\n\nconst FullApplicationInfo = (props) => {\n    const dispatch = useDispatch();\n    // const [index, setIndex] = useState(props.index); // передаем индекс и вытаскиваем из массива заявок нужную, всего в массиве 10 заявок, далее осуществлять дозагрузку заявок, также по 10 штук\n    // const applications = props.applications;\n    // Получаем по id подробные данные заявки\n    // const application = { // вот здесь будет использована полученная информация с редакса по id\n    //\n    //     date: \"03. 11. 2019, 10:50\",\n    //     status: \"завершено\",\n    //     subject:\"Не работает вайфай\",\n    //     department: \"Удаленная поддержка\",\n    //     specialist: \"Александра Панарина\",\n    //     specialistId:\"IT 152\",\n    //     problem: \"Отправляю письма, а они не доходят до получателей, адреса ввожу правильно. Отчеты о возврате письма не приходят, то есть письмо вроде ушло, но в отправленных его нет, и когда узнаешь, пришло письмо или не пришло, то получатель говорит, что никакого письма не получал.\",\n    //     solution: \"Были введены неправи льные настройки VPN. Исправили настройки на каждом Были введены неправи льные настройки VPN. Исправили настройки на каждом Были введены неправи льные настройки VPN. Исправили настройки на каждом \",\n    //     classLikeDislike: 'like',\n    //     isComment: true,\n    //     comment: 'Comment',\n    //     workerId: \"ID Устройства 3245875\",\n    //     specialistPhoto: \"https://transitiontownguildford.files.wordpress.com/2015/06/wall-e.jpg\",\n    //     applicationId: \"IT-011220-039862\",\n    //     worker: 'Примерный рабочий',\n    //     fileImage: \"https://transitiontownguildford.files.wordpress.com/2015/06/wall-e.jpg\"\n    // };\n    // let color;\n\n\n\n    const application = props.application;\n    // console.log(applications);\n\n\n    const [showQuestionComment, setShowQuestionComment] = useState(false);\n    const [showQuestionApplicationId, setShowQuestionApplicationId] = useState(false);\n    const [showQuestionSpecialist, setShowQuestionSpecialist] = useState(false);\n    const [isFileImageModal, setIsFileImageModal] = useState(false);\n    \n    const hoverShowQuestionComment = () => {\n        setShowQuestionComment(true);\n    }\n    const hoverHideQuestionComment = () => {\n        setShowQuestionComment(false);\n    }\n    const hoverShowQuestionApplicationId = () => {\n        setShowQuestionApplicationId(true);\n    }\n    const hoverHideQuestionApplicationId = () => {\n        setShowQuestionApplicationId(false);\n    }\n    const hoverShowQuestionSpecialist = () => {\n        setShowQuestionSpecialist(true);\n    }\n    const hoverHideQuestionSpecialist = () => {\n        setShowQuestionSpecialist(false);\n    }\n    // const closeThisWindow = () => {\n    //     {}\n    // }\n    const toggleModalImage = () => {\n        setIsFileImageModal(!isFileImageModal);\n    }\n    // const goLeft = () => {\n    //     setIndex(index - 1);\n    // }\n    // const goRight = () => {\n    //     setIndex(index + 1);\n    // }\n    // let color;\n    // let date;\n    // let status;\n    // let applicationId;\n    // let specialistPhoto;\n    // let specialist;\n    // let specialistId;\n    // let workerId;\n    // let classLikeDislike;\n    // let isComment;\n    // let department;\n    // let subject;\n    // let solution;\n    // let fileImage;\n    // let problem;\n    // if (application) {\n    //     color = application.status === 'запланировано' ? \"#E82024\" : application.status === 'в работе' ? \"#F3BB1C\" : application.status === 'завершено' ? \"#3CC13B\" : application.status === 'отменено' ? '#828282' : null;\n    //     date = application.date;\n    //     status = application.status;\n    //     applicationId = application.applicationId;\n    //     specialistPhoto = application.specialistPhoto;\n    //     specialist = application.specialist;\n    //     specialistId = application.specialistId;\n    //     workerId = application.workerId;\n    //     classLikeDislike = application.classLikeDislike;\n    //     isComment = application.isComment;\n    //     department = application.department;\n    //     subject = application.subject;\n    //     solution = application.solution;\n    //     fileImage = application.fileImage;\n    //     problem = application.problem;\n    // }\n    let color;\n    let date;\n    let status;\n    let applicationId;\n    let specialistPhoto;\n    let specialist;\n    let specialistId;\n    let workerId;\n    let classLikeDislike;\n    let isComment;\n    let department;\n    let subject;\n    let solution;\n    let allSolution = [];\n    let fileImage;\n    let problem;\n    let allProblems = [];\n    let workerName;\n    let isProblem = false;\n    if (application) {\n        color = application.status === 'Запланировано' ? \"#E82024\" : application.status === 'В работе' ? \"#F3BB1C\" : application.status === 'Завершено' ? \"#3CC13B\" : application.status === 'Отменено' ? '#828282' : null;\n        date = application.dateCreate;\n        status = application.status.toLowerCase();\n        applicationId = application.number;\n        specialistPhoto = application.implementer['photo'];\n        specialist = application.implementer['name'];\n        specialistId = application.implementer['id'];\n        workerId = application.employee['id'];\n        classLikeDislike = application.rating['value'] === 1 ? \"like\" : application.rating['value'] === -1 ? \"dislike\" : \"\";\n\n        isComment = application.rating['comment'];\n        department = application.departament;\n        subject = application.subject;\n        solution = application.outcome.split(\"\\n\");\n        allSolution = solution.map(el => {\n            return <p className=\"FullApplicationInfo__content__text\">{el}</p>\n        });\n        fileImage = application.images[0];\n        problem = application.details.split(\"\\n\");\n        workerName = application.employee.name;\n        allProblems = problem.map(el => {\n            return <p className=\"FullApplicationInfo__content__text\">{el}</p>\n        });\n        isProblem = problem.length > 1;\n    }\n    console.log(application);\n    return (\n        <>\n            <div className=\"FullApplicationInfo\">\n                <div className=\"FullApplicationInfo__header\">\n                    <div onClick={props.clickToClose} className=\"FullApplicationInfo__close\" />\n                    <div className=\"FullApplicationInfo__statusDateBlock\">\n                        <p className=\"ResultsItemWorker__text\">{date}</p>\n                        <p style={{background: color}} className=\"FullApplicationInfo__status\">{status}</p>\n                    </div>\n\n                    <div className=\"FullApplicationInfo__ApplicationIdBlock\">\n                        <p className=\"ResultsItemWorker__text--red\">Номер заявки:</p>\n                        <div className=\"ResultsItemWorker__applicationId\">\n                            <p className=\"ResultsItemWorker__text--red  ResultsItemWorker__text--applicationId\">{applicationId}</p>\n                            <div className=\"FullApplicationInfo__question--icon\" onMouseEnter={hoverShowQuestionApplicationId} onMouseLeave={hoverHideQuestionApplicationId}>\n                                <div style={showQuestionApplicationId ? {\"display\" : \"block\"} : {\"display\" : \"none\"}} className=\"FullApplicationInfo__comment--modal\">\n                                    <p className=\"FullApplicationInfo__comment--modal-text\">Регистрационный номер заявки</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"FullApplicationInfo__workerIdBlock\">\n                        <div className=\"FullApplicationInfo__workerIdBlock--imageBlock\">\n                            <div className=\"FullApplicationInfo__image\" style={{background: `#E34A4E  url(data:image/jpg;base64,${specialistPhoto})center / cover no-repeat`}} />\n\n                            <div className=\"FullApplicationInfo__workerIdAndQuestionBlock\">\n                                <p className=\"FullApplicationInfo__text\">{specialist}</p>\n                                <div className=\"FullApplicationInfo__specialistIdBlock\">\n                                    <p className=\"FullApplicationInfo__id\">{specialistId}</p>\n                                    <div className=\"FullApplicationInfo__question--icon\" onMouseEnter={hoverShowQuestionSpecialist} onMouseLeave={hoverHideQuestionSpecialist}>\n                                        <div style={showQuestionSpecialist ? {\"display\" : \"block\"} : {\"display\" : \"none\"}} className=\"FullApplicationInfo__comment--modal\">\n                                            <p className=\"FullApplicationInfo__comment--modal-text\">У каждого специалиста IT Support есть уникальный IT-номер, во-первых это красиво, а во-вторых он совпадает с внутренним номером телефона. Вы всегда сможете позвонить напрямую исполнителю заявки или написать электронное письмо.</p>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                        </div>\n\n                    </div>\n\n                    <div className=\"FullApplicationInfo__workerIdBlock\">\n                        <p className=\"FullApplicationInfo__text\">{workerName}</p>\n                        <p className=\"FullApplicationInfo__id\">{workerId}</p>\n                    </div>\n\n\n                    <div className=\"FullApplicationInfo__likeAndCommentBlock\">\n\n                        <div className=\"FullApplicationInfo__likeAndCommentBlock--icons\">\n                            <div className={`FullApplicationInfo__icon--widthLikeDislike FullApplicationInfo__icon--${classLikeDislike}`} />\n                            <div className={`${isComment ? \"FullApplicationInfo__comment\" : null} FullApplicationInfo__comment--width`} onMouseEnter={isComment ? hoverShowQuestionComment: null} onMouseLeave={isComment ? hoverHideQuestionComment : null}>\n                                <div style={showQuestionComment ? {\"display\" : \"block\"} : {\"display\" : \"none\"}} className=\"FullApplicationInfo__comment--modal\">\n                                    <p className=\"FullApplicationInfo__comment--modal-text\">Пользователь оставил коментарий к этой задаче, для того чтобы посмотреть его проскрольте описание заявки до конца.</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"FullApplicationInfo__content\">\n                    <div className=\"FullApplicationInfo__content--left\">\n                        <h2 className=\"FullApplicationInfo__content__title\">Детали заявки</h2>\n                        <div className=\"FullApplicationInfo__content__head\">\n                            <div className=\"FullApplicationInfo__content__head--sides\">\n                                <p className=\"FullApplicationInfo__content__text--title\">Ответственный отдел</p>\n                                <p className=\"FullApplicationInfo__content__text\">{department}</p>\n                            </div>\n                            <div className=\"FullApplicationInfo__content__head--sides\">\n                                <p className=\"FullApplicationInfo__content__text--title\">Тема</p>\n                                <p className=\"FullApplicationInfo__content__text\">{subject}</p>\n                            </div>\n                        </div>\n                        {isProblem ? <p className=\"FullApplicationInfo__content__text--title\">Подробности</p> : null}\n                        <div>\n                            {allProblems}\n                        </div>\n\n\n                        <p className=\"FullApplicationInfo__content__text--title\">Результат</p>\n                        <div >\n                            {allSolution}\n                        </div>\n\n\n                    </div>\n\n                    <div className=\"FullApplicationInfo__content--right\">\n                        <h2 className=\"FullApplicationInfo__content--title\">\n                            Прикрепленные файлы:\n                        </h2>\n                        <div className=\"FullApplicationInfo__fileImage--canvas\">\n                            {fileImage ? <img onClick={toggleModalImage} className=\"FullApplicationInfo__fileImage\" src={fileImage} alt={subject}/> : <p className=\"FullApplicationInfo__content__text\">Файлов нет</p> }\n                        </div>\n\n\n                        {status === \"завершено\" || status === \"отменено\" ? <p className=\"FullApplicationInfo__backToWorkLink\">Вернуть заявку в работу</p> : null}\n                    </div>\n                </div>\n\n\n                <div className=\"FullApplicationInfo__footer\" >\n                    {!props.first ? <div className=\"FullApplicationInfo__btnLeft\" onClick={props.goLeft}>\n                                        <div className=\"FullApplicationInfo__arrowLeft\" />\n                                        <p className=\"FullApplicationInfo__btnTextLeft\">\n                                            Вернуться к предыдущей заявке\n                                        </p>\n                                    </div> : null}\n\n                    {!props.last ? <div className=\"FullApplicationInfo__btnRight\" onClick={props.goRight}>\n                                        <p className=\"FullApplicationInfo__btnTextRight\">\n                                            Перейти к следующей заявке\n                                        </p>\n                                        <div className=\"FullApplicationInfo__arrowRight\" />\n                                    </div> : null}\n                </div>\n            </div>\n            {isFileImageModal ? <div onClick={toggleModalImage} className=\"FullApplicationInfo__fileImage--modal\">\n                <div className=\"FullApplicationInfo__fileImage--modalCanvas\">\n                    <img className=\"FullApplicationInfo__fileImage\" src={fileImage} alt={subject}/>\n                </div>\n            </div> : null}\n        </>\n    )\n}\n\nexport default FullApplicationInfo;","D:\\IT\\JavaScript\\projects\\it_support\\src\\Store\\ApplicationsReducer\\applicationsActionTypes.js",[],"D:\\IT\\JavaScript\\projects\\it_support\\src\\Store\\CompanyDataReducer\\companyActionTypes.js",[],"D:\\IT\\JavaScript\\projects\\it_support\\src\\Store\\UsersReducer\\usersActionTypes.js",[],"D:\\IT\\JavaScript\\projects\\it_support\\src\\Store\\ApplicationsReducer\\applicationsActions.js",["240"],"D:\\IT\\JavaScript\\projects\\it_support\\src\\Store\\CompanyDataReducer\\companyActions.js",[],"D:\\IT\\JavaScript\\projects\\it_support\\src\\Store\\UsersReducer\\usersActions.js",["241"],"\r\nimport axios from '../../axiosApi';\r\nimport {\r\n    PASSWORD_LOGIN_ERROR,\r\n    PHONE_LOGIN_ERROR,\r\n    SET_LOGIN_STATUS,\r\n    SMS_LOGIN_ERROR,\r\n    USERNAME_LOGIN_ERROR\r\n} from \"./usersActionTypes\";\r\nimport {push} from 'connected-react-router';\r\nimport {saveHash, saveId} from \"../ApplicationsReducer/applicationsActions\";\r\n\r\n\r\nexport const setLoginStatus = (value) => ({type: SET_LOGIN_STATUS, value});\r\n\r\nexport const usernameLoginError = (value) => ({type: USERNAME_LOGIN_ERROR, value});\r\nexport const passwordLoginError = (value) => ({type: PASSWORD_LOGIN_ERROR, value});\r\nexport const phoneLoginError = (value) => ({type: PHONE_LOGIN_ERROR, value});\r\nexport const smsLoginError = (value) => ({type: SMS_LOGIN_ERROR, value});\r\n\r\n\r\nexport const saveUser = (id) => {\r\n    return async dispatch => {\r\n        try {\r\n            const response = await axios.get(`/users/${id}`);\r\n            console.log(\"SAVING USER \", response.data)\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n}\r\nexport const sendPhone = (phoneNumber, id) => {\r\n    return async dispatch => {\r\n        try {\r\n            const response = await axios.post(`/users/${id}`, phoneNumber);\r\n            console.log(response.data);\r\n            await dispatch(setLoginStatus(\"sms\"));\r\n\r\n        } catch (err) {\r\n            console.log(\"PHONE ERROR \", err);\r\n            dispatch(phoneLoginError(err.response.status));\r\n        }\r\n    }\r\n}\r\n\r\nexport const sendSms = (smsAndId) => {\r\n    return async dispatch => {\r\n        try {\r\n            const response = await axios.post(`/users/sms_check`, smsAndId);\r\n            console.log(\"HASH \", response.data);\r\n            await dispatch(saveHash(response.data.hash));\r\n            // await dispatch(saveId(response.data.clientId));\r\n            await dispatch(push('/search'));\r\n        } catch (err) {\r\n            console.log(\"SMS \", err);\r\n            dispatch(smsLoginError(err.response.status));\r\n        }\r\n    }\r\n}\r\n\r\nexport const loginUser = (login, password) => {\r\n    return async dispatch => {\r\n        try {\r\n            const response = await axios.get(`/CRM/hs/authorizationLP/method/Login/?Login=${login}&Password=${password}`);\r\n            await dispatch(saveHash(response.data.hash));\r\n            // await dispatch(saveId(response.data.clientId));\r\n            await dispatch(push('/search'));\r\n            console.log(response.data);\r\n        } catch (err) {\r\n            console.log(err.response);\r\n            // добавить условие какая именно ошибка прилетела\r\n            dispatch(usernameLoginError(err.response.data.result));\r\n            dispatch(passwordLoginError(err.response.data.result));\r\n\r\n        }\r\n    }\r\n}\r\n","D:\\IT\\JavaScript\\projects\\it_support\\src\\Components\\ApplicationPageComponents\\ApplicationDetails\\ApplicationDetails.js",["242","243","244"],"import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n// import { addComment } from '../../../Store/ApplicationsReducer/applicationsActions';\nimport BlueButton from '../BlueButton/BlueButton';\nimport './ApplicationDetails.css';\nimport {addDetailsToApplicationInProcess} from \"../../../Store/ApplicationsReducer/applicationsActions\";\n\n\nconst ApplicationDetails = (props) => {\n\n    const status = props.status;\n    // const id = props.id;\n    const dispatch = useDispatch();\n    // const comments = useSelector(state => state.applications.comments); //Получить все комментарии по ID\n    const [messageClassToggle, setMessageClassToggle] = useState(\"messageClassToggleHidden\");\n    const [messageClassButtonText, setMessageClassButtonText] = useState('показать подробнее');\n\n    const [resultClassToggle, setResultClassToggle] = useState(\"messageClassToggleHidden\");\n    const [resultClassButtonText, setResultClassButtonText] = useState('показать подробнее');\n    // const applicationHash = useSelector(state => state.applications.newApplicationHash)\n\n    let jobDone = props.jobDone;\n    let isCanceled = props.isCanceled;\n\n    const department = props.department; // Получить по id\n    const subject = props.subject; // Получить по id\n    const message = props.message;\n    const result = props.result;\n    // let allComments;\n    // if (comments) {\n    //     allComments = (\n    //         comments.map(el => {\n    //             return <div\n    //                 key={el.id}\n    //                 className=\"Comment\"\n    //             >\n    //                 <p className=\"Comment__date\">{`${el.date}`}</p>\n    //                 <p className=\"Comment__content\">{`${el.content}`}</p>\n    //             </div>\n    //         })\n    // )}\n\n\n    const textShowToggle = () => {\n        if (messageClassToggle === 'messageClassToggleHidden') {\n            setMessageClassToggle('messageClassToggleOpen');\n            setMessageClassButtonText('скрыть текст');\n        } else {\n            setMessageClassToggle('messageClassToggleHidden');\n            setMessageClassButtonText('показать подробнее');\n        }\n    }\n    const resultShowToggle = () => {\n        if (resultClassToggle === 'messageClassToggleHidden') {\n            setResultClassToggle('messageClassToggleOpen');\n            setResultClassButtonText('скрыть текст');\n        } else {\n            setResultClassToggle('messageClassToggleHidden');\n            setResultClassButtonText('показать подробнее');\n        }\n    }\n\n    let centerComponent;\n\n     // possible statusses 'new' 'in_progress' 'complete' 'canceled'\n    if (status === 'new') {\n        centerComponent = (\n        <div className=\"ApplicationDetails\">\n            <h2 className=\"ApplicationDetails__title\">Детали заявки {props.idInTitle}</h2>\n            <div className=\"ApplicationDetails__head\">\n                <div className=\"ApplicationDetails__head--sides\">\n                    <p className=\"ApplicationDetails__text--title\">Ответственный отдел</p>\n                    <p className=\"ApplicationDetails__text\">{department}</p>\n                </div>\n                <div className=\"ApplicationDetails__head--sides\">\n                    <p className=\"ApplicationDetails__text--title\">Тема</p>\n                    <p className=\"ApplicationDetails__text\">{subject}</p>\n                </div>\n            </div>\n                <p className=\"ApplicationDetails__text--title\">Подробности</p>\n            <div className={messageClassToggle}>\n                <div dangerouslySetInnerHTML={{__html: `<p className=\"ApplicationDetails__text\">${message}<p>`}} className=\"ApplicationDetails__text\" ></div>\n                {props.showDetailsButton ? <div onClick={textShowToggle} className=\"ApplicationDetails__message--button\"><span className=\"ApplicationDetails__text\">... </span>{messageClassButtonText}</div> : null}\n            </div>\n            {jobDone || isCanceled\n                    ?\n                <>\n                     <p className=\"ApplicationDetails__text--title\">Результат</p>\n                    <div className={resultClassToggle}>\n                        <p className=\"ApplicationDetails__text\">{result}</p>\n                        {props.showResultButton ? <div onClick={resultShowToggle} className=\"ApplicationDetails__message--button\"><span className=\"ApplicationDetails__text\">... </span>{resultClassButtonText}</div> : null}\n                    </div>\n                </>\n                    :\n                <>\n                    <textarea value={props.oneComment} placeholder=\"Если вы хотите дополнить заявку, напишите комментарий\" onChange={props.onChangeComment} className=\"ApplicationDetails__textarea\" />\n                    <div className=\"ApplicationDetails__btn\">\n                        <BlueButton \n                            name=\"Отправить сообщение\"\n                            clicked={props.submitComment}\n                        />\n                    </div>\n                    {/*{allComments}*/}\n                </> \n            }\n        </div>\n        )}\n\n    return (\n        <>\n            {centerComponent}\n        </>\n    )\n}\n\n\nexport default ApplicationDetails;","D:\\IT\\JavaScript\\projects\\it_support\\src\\Components\\ApplicationPageComponents\\LayoutApplicationPage\\LayoutApplicationPage.js",["245"],"D:\\IT\\JavaScript\\projects\\it_support\\src\\Components\\ApplicationPageComponents\\ApplicationStatus\\ApplicationStatus.js",["246"],"import React from 'react';\nimport './ApplicationStatus.css';\n\n\nconst ApplicationStatus = (props) => {\n    const id = props.id;\n    let leftSide;\n    let specialistFound = props.specialistFound; //take from state?\n    let jobDone = props.jobDone; //take from state?\n    let isCanceled = props.isCanceled;\n\n     // possible statusses 'new' 'in_progress' 'complete' 'canceled'\n        leftSide = (\n        <div className=\"ApplicationStatus\">\n\n            <div className=\"ApplicationStatus__lineBlock\">\n                <div className=\"ApplicationStatus__circle\" />\n                <div className={`ApplicationStatus__line ${specialistFound ? null : \"ApplicationStatus__unactive--circle\"}`} />\n                <div className={`ApplicationStatus__circle ${specialistFound ? null : \"ApplicationStatus__unactive ApplicationStatus__unactive--circle\"}`}>{specialistFound ? null : \"2\"}</div>\n                <div className={`ApplicationStatus__line ${jobDone || isCanceled ? null : \"ApplicationStatus__unactive--circle\"}`} />\n                <div className={`ApplicationStatus__circle ${jobDone || isCanceled ? null : \"ApplicationStatus__unactive ApplicationStatus__unactive--circle\"} ${isCanceled ? \"ApplicationStatus__canceled\" : null}`}>{jobDone || isCanceled ? null : \"3\"}</div>\n            </div>\n\n            <div className=\"ApplicationStatus__textBlock\">\n                <div className=\"ApplicationStatus__textItem\">\n                    <h3 className=\"ApplicationStatus__title\">Заявка в обработке</h3>\n                    <p className=\"ApplicationStatus__text\">Мы назначим ИТ-специалиста в ближайшее время. Обычно это занимает не больше 15 минут</p>\n                </div>\n                <div className=\"ApplicationStatus__textItem\">\n                    <h3 className={`ApplicationStatus__title ${specialistFound ? null : \"ApplicationStatus__unactive\"}`}>ИТ-специалист назначен</h3>\n                    <p className={`ApplicationStatus__text ApplicationStatus__text--pushDown ${specialistFound ? null : \"ApplicationStatus__unactive\"}`}>Наш сотрудник скоро свяжется с вами и решит проблему</p>\n                </div>\n                {isCanceled \n                    ? \n                <div className=\"ApplicationStatus__textItem\">\n                    <h3 className=\"ApplicationStatus__title\" >Заявка отменена</h3>\n                    <p className=\"ApplicationStatus__link--whenCanceled\">Вернуть заявку в работу</p>\n                </div>\n                    :\n                <div className=\"ApplicationStatus__textItem\">\n                    <h3 className={`ApplicationStatus__title ${jobDone ? null : \"ApplicationStatus__unactive\"}`}>Заявка закрыта</h3>\n                    <p className={`ApplicationStatus__text ${jobDone ? null : \"ApplicationStatus__unactive\"}`}>Поделитесь с нами обратной связью</p>\n                </div>\n            }\n            </div>\n        </div>\n        );\n\n    return (\n        <>\n            {leftSide}\n        </>\n    )\n}\n\nexport default ApplicationStatus;","D:\\IT\\JavaScript\\projects\\it_support\\src\\Components\\ApplicationPageComponents\\SpecialitsWindowStatus\\SpecialitsWindowStatus.js",["247","248","249","250"],"import React, { useEffect, useState } from 'react';\nimport BlueButton from '../BlueButton/BlueButton';\nimport './SpecialitsWindowStatus.css';\n\n\nconst SpecialitsWindowStatus = (props) => {\n    let timerDuration = props.timerDuration; //15 минут\n    const status = props.status;\n    const id = props.id;\n    let topComponent;\n    const [seconds, setSeconds] = useState(\"00\");\n    const [minutes, setMinutes] = useState(15);\n    const [oneComment, setOneComment] = useState();\n    const [isComment, setIsComment] = useState(false);\n    const [isLike, setIsLike] = useState(false);\n    const [isDisLike, setIsDisLike] = useState(false);\n\n    let leaveCommentBlock;\n    let timer = null;\n    let newApplication = props.newApplication\n    let specialistFound = props.specialistFound;\n    let jobDone = props.jobDone;\n    let isCanceled = props.isCanceled;\n\n    useEffect(() => {\n       if (newApplication) {\n        if (timerDuration > 0 && !timer) {\n            timer = setInterval(() => {\n                let seconds = (timerDuration % 60000) / 1000;\n                let minutes = Math.floor(timerDuration / 60000);\n                if (seconds < 10) {\n                    seconds = \"0\" + seconds;\n                }\n                if (minutes < 10) {\n                    minutes = \"0\" + minutes;\n                }\n                setSeconds(seconds);\n                setMinutes(minutes);\n                timerDuration -= 1000;\n                if (minutes === \"00\" && seconds === \"00\") {\n                    clearInterval(timer);\n                }\n            }, 1000);\n        }\n        if (timerDuration <= 0) {\n            clearInterval(timer);\n            timer = null;\n        }\n        return(() => {\n            clearInterval(timer)\n        })\n    }\n    }, []);\n\n    const applyComment = () => {\n        if (oneComment === undefined || oneComment.trim() === '') {\n            return;\n        }\n        setIsComment(true);\n    }\n    const textAreaHandler = (event) => {\n        setOneComment(event.target.value);\n    }\n    const isLikeHandler = () => {\n        setIsLike(true);\n    }\n    const isDisLikeHandler = () => {\n        setIsDisLike(true);\n    }\n    if (!isComment) {\n    leaveCommentBlock = (\n        <div className=\"leaveCommentBlock\">\n            {!isLike && !isDisLike \n                ? \n            <div className=\"leaveCommentBlock__likeBlock\">\n                <div onClick={isLikeHandler} className=\"leaveCommentBlock__icon leaveCommentBlock__icon--like\" />\n                <div onClick={isDisLikeHandler} className=\"leaveCommentBlock__icon leaveCommentBlock__icon--dislike\" />\n            </div> \n                : \n            <div className=\"isCommentBlock--likeOrNot\">\n                {isLike ? <div className=\"isCommentBlock__like\" /> : null}\n                {isDisLike ? <div className=\"isCommentBlock__dislike\" /> : null}\n            </div>}\n\n            \n            <div className=\"leaveCommentBlock__commentBlock\">\n                <textarea value={oneComment} placeholder=\"Напишите краткий отзыв\" onChange={(event) => {textAreaHandler(event)}} className=\"leaveCommentBlock__textarea\"></textarea>\n                    <div className=\"leaveCommentBlock__btn\">\n                        <BlueButton\n                            name=\"Отправить отзыв\"\n                            clicked={() => {applyComment()}}\n                        />\n                    </div>\n            </div>\n        </div>\n    )} else {\n        leaveCommentBlock = (\n            <div className=\"isCommentBlock\">\n                {!isLike && !isDisLike \n                        ? \n                    <div className=\"leaveCommentBlock__likeBlock\">\n                        <div onClick={isLikeHandler} className=\"leaveCommentBlock__icon leaveCommentBlock__icon--like\" />\n                        <div onClick={isDisLikeHandler} className=\"leaveCommentBlock__icon leaveCommentBlock__icon--dislike\" />\n                    </div> \n                        : \n                    <div className=\"isCommentBlock--likeOrNot\">\n                        {isLike ? <div className=\"isCommentBlock__like\" /> : null}\n                        {isDisLike ? <div className=\"isCommentBlock__dislike\" /> : null}\n                    </div>}\n                <div className=\"isCommentBlock__textBlock\">\n                    <h2 className=\"isCommentBlock__title\">Отзыв пользователя:</h2>\n                    <p className=\"isCommentBlock__text\">{oneComment}</p>\n                </div>\n            </div>\n        )\n    }\n\n   \n\n\n    // possible statusses 'new' 'in_progress' 'complete' 'canceled'\n    if (newApplication) {\n    topComponent = (\n        <div className=\"StatusNew\">\n            <h2 className=\"StatusNew__title\">Получили вашу заявку, спасибо!</h2>\n            <p className=\"StatusNew_text\">Мы назначим ИТ-специалиста в течение:</p>\n            <div className=\"StatusNew__timeBlock\">\n                <span className=\"StatusNew__time StatusNew__time--numbers\">{minutes}</span>\n                <span className=\"StatusNew__time\">:</span>\n                <span className=\"StatusNew__time StatusNew__time--numbers\">{seconds}</span>\n            </div>\n        </div>\n    )} else {\n        topComponent = (\n            <div className=\"SpecialistWindow\">\n                <h2 className={`SpecialistWindow__title ${specialistFound ? \"color-orange\" : \"\"} ${jobDone ? \"color-green\" : \"\"} ${isCanceled ? \"color-grey\" : \"\"}`}>{specialistFound ? \"Заявка в работе\" : \"\"}{jobDone ? \"Заявка закрыта\" : \"\"}{isCanceled ? \"Заявка отменена\" : \"\"}</h2>\n            \n                <div className=\"SpecialistWindow__content\">\n                    <div className=\"SpecialistWindow__avatar--frame\">\n                        <img className=\"SpecialistWindow__avatar--image\" src={props.photo} alt={props.name} />\n                    </div>\n\n                    <div className=\"SpecialistWindow__textBlock\">\n                        {specialistFound ? <h3 className=\"SpecialistWindow__title--small\">Скоро с вами свяжется</h3> : null}\n                        {jobDone ? <p className=\"SpecialistWindow__text SpecialistWindow__text--pushDown\">Оцените работу ИТ-специалиста, если нужно — напишите краткий отзыв, нам будет приятно. </p> : null}\n                        {isCanceled ? <p className=\"SpecialistWindow__text SpecialistWindow__text--pushDown\">Оцените работу ИТ-специалиста, если нужно — напишите краткий отзыв, нам будет приятно. </p> : null}\n                    \n                        <div className=\"SpecialistWindow__nameAndPhone\">\n                            <h3 className=\"SpecialistWindow__name\">\n                                {props.name}\n                            </h3>\n                            <p className=\"SpecialistWindow__text\">\n                                {props.phone}\n                            </p>\n                        </div>\n                        <p className=\"SpecialistWindow__text\">{props.specialistId}</p>\n                    </div>\n\n                </div>\n                {jobDone || isCanceled ? leaveCommentBlock : null}\n            </div>\n        )\n    }\n    return (\n        <>\n            {topComponent}\n        </>\n    )\n}\n\nexport default SpecialitsWindowStatus;","D:\\IT\\JavaScript\\projects\\it_support\\src\\Components\\ApplicationPageComponents\\PreviousApplicationMenu\\PreviousApplicationMenu.js",[],"D:\\IT\\JavaScript\\projects\\it_support\\src\\Components\\ApplicationPageComponents\\ApplicationForm\\ApplicationForm.js",[],"D:\\IT\\JavaScript\\projects\\it_support\\src\\Components\\SearchResultsComponents\\LayoutSearchResults\\LayoutSearchResults.js",[],"D:\\IT\\JavaScript\\projects\\it_support\\src\\Components\\SearchResultsComponents\\ResultsTableWorker\\ResultsTableWorker.js",["251","252","253","254","255","256"],"import React, { useState, useEffect } from 'react';\nimport ModalWorker from '../ModalWorker/ModalWorker';\nimport ModalDepartment from '../ModalDepartment/ModalDepartment';\nimport ModalStatus from '../ModalStatus/ModalStatus';\nimport NoResults from '../NoResults/NoResults';\nimport ResultsItemWorker from './ResultsItemWorker/ResultsItemWorker';\nimport './ResultsTableWorker.css';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {push} from 'connected-react-router'\nimport FullApplicationInfo from \"../FullApplicationInfo/FullApplicationInfo\";\nimport {\n    changePagination,\n    getTenApplications,\n    setActiveFilters, setActivePage\n} from \"../../../Store/ApplicationsReducer/applicationsActions\";\nimport {getAllDepartments, getAllEmployees} from \"../../../Store/CompanyDataReducer/companyActions\";\n\nconst ResultsTableWorker = (props) => {\n    const dispatch = useDispatch();\n\n    // const body = {\n    //     clientId: \"1267-02-00020\",\n    //     hash: \"68ace46062c33b61ac87a05e44a48198\",\n    //     filter: {\n    //         date: {\n    //             from: \"20200101\",\n    //             to: \"20201231 \"\n    //         },\n    //         status: [],\n    //         employee: \" \",\n    //         departament: [],\n    //         number: \"\"\n    //     },\n    //     limit: 10,\n    //     start: 0\n    // }\n    const data = useSelector(state => state.applications.data);\n\n\n    useEffect(() => {\n        dispatch(getTenApplications(data));\n    }, [data]);\n\n\n    const [indexForModal, setIndexForModal] = useState();\n    let allApplications;\n    const company = useSelector(state => state.company.companyData);\n\n    useEffect(() => {\n        console.log(\"COMPANY \",company)\n        if (company) {\n            dispatch(getAllDepartments(company.departments));\n            if (company.director) {\n                dispatch(getAllEmployees(company.director.employees));\n            }\n        }\n    }, [company]);\n    // ResultsTableWorker__filterIcon--active\n    // В редаксе будут хранится фильтры, по отдельности статус и отдел, все что будет выбрано в модальном окне попдает в стэйт и иконка закрашивается в черный\n    const isFilterStatus = useSelector(state => state.applications.data['filter'].status.length > 0);\n    const isFilterDepartment = useSelector(state => state.applications.data['filter'].departament.length > 0);\n    const isFilterWorker = useSelector(state => state.applications.data['filter'].employee.trim() !== '');\n    const filters = useSelector(state => state.applications.data['filter']);\n\n    let filtersCheck = {\n        isFilterStatus: useSelector(state => state.applications.data['filter'].status.length > 0) ? \"статус\" : null,\n        isFilterDepartment: useSelector(state => state.applications.data['filter'].departament.length > 0) ? \"отдел\" : null,\n        isFilterWorker: useSelector(state => state.applications.data['filter'].employee.trim() !== '') ? \"сотрудник\" : null,\n        isFilterNumber: useSelector(state => state.applications.data['filter'].number !== '') ? \"id заявки\" : null,\n        isFilterDate: useSelector(state => state.applications.isFilterDateActive ? \"дата\" : null)\n    }\n\n    const showFilters = () => {\n        let arr = [];\n        Object.keys(filtersCheck).map(el => {\n            if (filtersCheck[el]) {\n                arr.push(filtersCheck[el]);\n            }\n            // setFilters(arr);\n        })\n        console.log(\"FILTERS \", arr)\n        dispatch(setActiveFilters(arr));\n\n    };\n    useEffect(() => {\n        showFilters();\n        console.log('SHOWING FILTERS');\n    }, [filters]);\n\n\n    const [isStatusModal, setIsStatusModal] = useState(false);\n    const [isDepartmentModal, setIsDepartmentModal] = useState(false);\n    const [isWorkerModal, setIsWorkerModal] = useState(false);\n    const [isFullInfoModal, setIsFullInfoModal] = useState((false));\n    // const [oneApplication, setOneApplication] = useState({});\n\n    const toggleStatusModal = () => {\n        setIsStatusModal(!isStatusModal);\n        setIsDepartmentModal(false);\n        setIsWorkerModal(false);\n        // showFilters();\n    }\n    const toggleDepartmentModal = () => {\n        setIsDepartmentModal(!isDepartmentModal);\n        setIsStatusModal(false);\n        setIsWorkerModal(false);\n        // showFilters();\n    }\n    const toggleWorkerModal = () => {\n        setIsWorkerModal(!isWorkerModal);\n        setIsStatusModal(false);\n        setIsDepartmentModal(false);\n        // showFilters();\n    }\n    const seeFullApplicationInfo = (index) => {\n        setIndexForModal(index)\n        // setOneApplication(applications[index]);\n        setIsFullInfoModal(!isFullInfoModal);\n\n    }\n    const applications = useSelector(state => state.applications.applications);\n\n    if (applications !== null) {\n        allApplications = applications.map((el, i) => {\n\n            const status = el.status;\n            const solution = el.outcome.substring(0, 50) + \"...\";\n            return <ResultsItemWorker\n                        key={el._id}\n                        isLastFrame={applications.length - 1 === i}\n                        statusColor={status === 'Запланировано' ? \"#E82024\" : status === 'В работе' ? \"#F3BB1C\" : status === 'Завершено' ? \"#3CC13B\" : status === 'Отменено' ? '#828282' : null}\n                        date={el.dateCreate}\n                        status={status.toLowerCase()}\n                        subject={el.subject}\n                        department={el.departament}\n                        specialist={el.implementer['name']}\n                        specialistId={el.implementer['id']}\n                        contentShort={solution}\n                        index={i}\n                        classLikeDislike={el.rating['value'] === 1 ? \"like\" : el.rating['value'] === -1 ? \"dislike\" : ''}\n                        isComment={el.rating['comment']}\n                        openSeeDetails={() => {seeFullApplicationInfo(i)}}\n                        isDirector={!!company.director}\n                        workerId={el.employee['id']}\n                        worker={el.employee['name']}\n                    />\n        });\n    }else {\n        allApplications = (\n            <NoResults />\n        )\n    }\n    // if (applications.length > 0) {\n    //     allApplications = applications.map((el, i) => {\n    //\n    //         const solution = el.solution.substring(0, 50) + \"...\";\n    //         return <ResultsItemWorker\n    //             key={i}\n    //             isLastFrame={applications.length - 1 === i}\n    //             statusColor={el.status === 'запланировано' ? \"#E82024\" : el.status === 'в работе' ? \"#F3BB1C\" : el.status === 'завершено' ? \"#3CC13B\" : el.status === 'отменено' ? '#828282' : null}\n    //             date={el.date}\n    //             status={el.status}\n    //             subject={el.subject}\n    //             department={el.department}\n    //             specialist={el.specialist}\n    //             specialistId={el.specialistId}\n    //             contentShort={solution}\n    //             index={i}\n    //             classLikeDislike={el.classLikeDislike}\n    //             isComment={el.isComment}\n    //             openSeeDetails={() => {seeFullApplicationInfo(i)}}\n    //             isDirector={user.role === 'director'}\n    //             workerId={el.workerId}\n    //             worker={el.worker}\n    //         />\n    //     });\n    // } else {\n    //     allApplications = (\n    //         <NoResults />\n    //     )\n    // }\n    const currentPage = useSelector(state => state.applications.data['start']);\n    // console.log(currentPage)\n    useEffect(() => {\n        dispatch(setActivePage((currentPage + 10) / 10));\n        if (indexForModal >=9) {\n            setIndexForModal(0);\n        }\n        if (indexForModal <=0) {\n            setIndexForModal(9);\n        }\n    }, [currentPage]);\n\n    // useEffect(() => {\n    //     if (indexForModal >=9) {\n    //         setIndexForModal(0);\n    //         setOneApplication(applications[0]);\n    //     }\n    // }, [indexForModal]);\n\n    const goLeft = async () => {\n\n        // потом будет проверка на то что если start в оффсете будет 0 и индекс 0 тогда стоп.\n        if (indexForModal <= 0 && currentPage === 0) return;\n\n            if (indexForModal <=0) {\n                // ПРИХОДИТСЯ КЛИКАТЬ ДВАЖДЫ НА ГРАНИЦАХ, ПОКА НЕ ЗНАЮ КАК РЕШИТЬ\n                // ВНИМАНИЕ ЕСЛИ КОЛИЧЕСТВО ВЫВОДАЩИХ СТРАНИЦ БУДЕТ НЕ 10 ТО ЗДЕСЬ ТОЖЕ ПОМЕНЯТЬ ЧИСЛО, ЛУЧШЕ ПО ВОЗМОЖНОСТИ В ОТДЕЛЬНУЮ ПЕРЕМЕННУЮ ЭТО ЧИСЛО ЗАПИСАТЬ\n                await dispatch(changePagination(currentPage - 10));\n                // await setIndexForModal(10);\n                // console.log (applications);\n                // await dispatch(getTenApplications(data));\n                // await setOneApplication(applications[9]);\n                return\n            }\n            const index = indexForModal - 1;\n            setIndexForModal(index);\n            // setOneApplication(applications[index]);\n    };\n    const activePage = useSelector(state => state.applications.activePage)\n    const count = useSelector(state => state.applications.count);\n    const goRight = async () => {\n        if (indexForModal >= applications.length - 1 && activePage >= Math.ceil(count / 10)) return;\n\n            if (indexForModal >=9) {\n                // ПРИХОДИТСЯ КЛИКАТЬ ДВАЖДЫ НА ГРАНИЦАХ, ПОКА НЕ ЗНАЮ КАК РЕШИТЬ\n                // ВНИМАНИЕ ЕСЛИ КОЛИЧЕСТВО ВЫВОДАЩИХ СТРАНИЦ БУДЕТ НЕ 10 ТО ЗДЕСЬ ТОЖЕ ПОМЕНЯТЬ ЧИСЛО, ЛУЧШЕ ПО ВОЗМОЖНОСТИ В ОТДЕЛЬНУЮ ПЕРЕМЕННУЮ ЭТО ЧИСЛО ЗАПИСАТЬ\n                await dispatch(changePagination(currentPage + 10));\n                // await setIndexForModal(0);\n                // console.log (applications);\n                // setOneApplication(applications[0]);\n                // await dispatch(getTenApplications(data));\n                // await setOneApplication(applications[0]);\n                return\n            }\n            const index = indexForModal + 1;\n            setIndexForModal(index);\n            // setOneApplication(applications[index]);\n\n    };\n\n\n\n    return (\n        <div className=\"ResultsTableWorker\">\n            <div className=\"ResultsTableWorker__filtersBlock\">\n\n                <div className=\"ResultsTableWorker__filterWithIcon ResultsTableWorker__filter--status\">\n                    <p className=\"ResultsTableWorker__filterText\">Дата/статус</p>\n                     {isStatusModal ? <ModalStatus close={toggleStatusModal} /> : null}\n                    <div onClick={toggleStatusModal} className={`ResultsTableWorker__filterIcon ${isFilterStatus ? \"ResultsTableWorker__filterIcon--active\" : null}`} />\n                </div>\n\n                {company.director ? <div className=\"ResultsTableWorker__filterWithIcon ResultsTableWorker__filter--worker\">\n                    <p className=\"ResultsTableWorker__filterText\">Сотрудник</p>\n                     {isWorkerModal ? <ModalWorker close={toggleWorkerModal} /> : null}\n                    <div onClick={toggleWorkerModal} className={`ResultsTableWorker__filterIcon ${isFilterWorker ? \"ResultsTableWorker__filterIcon--active\" : null}`} />\n                </div> : null}\n\n                <p className=\"ResultsTableWorker__filterText ResultsTableWorker__filter--subject\">Тема</p>\n                \n                <div className=\"ResultsTableWorker__filterWithIcon ResultsTableWorker__filter--department\">\n                    <p className=\"ResultsTableWorker__filterText\">Отдел</p>\n                    {isDepartmentModal ? <ModalDepartment close={toggleDepartmentModal} /> : null}\n                    <div onClick={toggleDepartmentModal} className={`ResultsTableWorker__filterIcon ${isFilterDepartment ? \"ResultsTableWorker__filterIcon--active\" : null}`} />\n                </div>\n\n                <p className=\"ResultsTableWorker__filterText ResultsTableWorker__filter--specialist\">ИТ-специалист</p>\n                <p className=\"ResultsTableWorker__filterText ResultsTableWorker__filter--results\">Результат</p>\n            \n            </div>\n            {isFullInfoModal ?\n                <>\n                <div className=\"FullInfoModalBg\" onClick={() => {seeFullApplicationInfo(indexForModal)}} />\n                    <FullApplicationInfo\n                        // index={idForModal}\n                        clickToClose={() => {seeFullApplicationInfo(indexForModal)}}\n                        // application={oneApplication}\n                        application={applications[indexForModal]}\n                        goLeft={goLeft}\n                        goRight={goRight}\n                        first={indexForModal <= 0 && currentPage === 0}\n                        last={indexForModal >= applications.length - 1 && activePage >= Math.ceil(count / 10)}\n                    />\n                </>:\n                null}\n            {allApplications}\n        </div>\n    )\n}\n\n\n\nexport default ResultsTableWorker;","D:\\IT\\JavaScript\\projects\\it_support\\src\\Components\\UserLoginPageComponents\\HelperInfo\\HelperInfo.js",["257","258","259","260"],"import React from 'react';\nimport './HelperInfo.css';\n\nconst HelperInfo = (props) => {\n    return (\n        <div className=\"HelperInfo\">\n            <p style={props.grey ? {color: \"#BDBDBD\"} : null} className=\"HelperInfo__text\">{props.question}</p>\n            <a className=\"HelperInfo__link\" href={props.link}>{props.textLink}</a>\n            <p style={props.grey ? {color: \"#BDBDBD\"} : null} className=\"HelperInfo__text\">{props.contacts}</p>\n\n            <div className=\"HelperInfo__socialBlock\">\n                <a href={props.instagram} className=\"HelperInfo__icon HelperInfo__instagram\"></a>\n                <a href={props.facebook} className=\"HelperInfo__icon HelperInfo__facebook\"></a>\n                <a href={props.linkedin} className=\"HelperInfo__icon HelperInfo__linkedin\"></a>\n                <a href={props.youtube} className=\"HelperInfo__icon HelperInfo__youtube\"></a>\n            </div>\n        </div>\n    )\n}\n\nexport default HelperInfo;","D:\\IT\\JavaScript\\projects\\it_support\\src\\Components\\UserLoginPageComponents\\PhoneInput\\PhoneInput.js",[],"D:\\IT\\JavaScript\\projects\\it_support\\src\\Components\\UserLoginPageComponents\\AuthenticationModal\\AuthenticationModal.js",[],"D:\\IT\\JavaScript\\projects\\it_support\\src\\Components\\UserLoginPageComponents\\SmsInput\\SmsInput.js",[],"D:\\IT\\JavaScript\\projects\\it_support\\src\\Components\\UserLoginPageComponents\\LoginForm\\LoginForm.js",[],"D:\\IT\\JavaScript\\projects\\it_support\\src\\Components\\ApplicationPageComponents\\BlueButton\\BlueButton.js",[],"D:\\IT\\JavaScript\\projects\\it_support\\src\\Components\\ApplicationPageComponents\\Logo\\Logo.js",[],"D:\\IT\\JavaScript\\projects\\it_support\\src\\Components\\ApplicationPageComponents\\SocialNetworkLinks\\SocialNetworkLinks.js",[],"D:\\IT\\JavaScript\\projects\\it_support\\src\\Components\\ApplicationPageComponents\\WhiteButton\\WhiteButton.js",[],"D:\\IT\\JavaScript\\projects\\it_support\\src\\Components\\ApplicationPageComponents\\RedButton\\RedButton.js",[],"D:\\IT\\JavaScript\\projects\\it_support\\src\\Components\\SearchResultsComponents\\ResultsTableWorker\\ResultsItemWorker\\ResultsItemWorker.js",[],"D:\\IT\\JavaScript\\projects\\it_support\\src\\Components\\SearchResultsComponents\\ModalStatus\\ModalStatus.js",["261","262"],"import React, { useState, useEffect } from 'react';\nimport ButtonGrey from '../UI/ButtonGrey/ButtonGrey';\nimport './ModalStatus.css';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {changeStatus, setActivePage} from \"../../../Store/ApplicationsReducer/applicationsActions\";\n\n\nconst ModalStatus = (props) => {\n    const dispatch = useDispatch();\n    const statusActiveFilters = useSelector(state => state.applications.data.filter.status);\n\n    useEffect(() => {\n        setInputState({\n            planned: statusActiveFilters.includes(\"Запланировано\"),\n            inProgress: statusActiveFilters.includes(\"В работе\"),\n            completed: statusActiveFilters.includes(\"Завершено\"),\n            canceled: statusActiveFilters.includes(\"Отменено\")\n        });\n    }, []);\n    const [inputState, setInputState] = useState({\n        planned: null,\n        inProgress: null,\n        completed: null,\n        canceled: null\n    });\n\n    const inputChange = (event) => {\n        const {name, value} = event.target;\n        if (!event.target.checked) {\n            setInputState(prevState => {\n                return {...prevState, [name]: null}\n            });\n        } else {\n            setInputState(prevState => {\n                return {...prevState, [name]: value}\n            });\n        }\n    }\n    // useEffect(() => {\n    //     let arr = [];\n    //     Object.keys(inputState).map(el => {\n    //         if (inputState[el]) {\n    //             arr.push(el === \"planned\" ? \"Запланировано\" : el === \"inProgress\" ? \"В работе\" : el === \"completed\" ? \"Завершено\" : el === \"canceled\" ? \"Отменено\" : null);\n    //         }\n    //         dispatch(changeStatus(arr));\n    //         dispatch(setActivePage(1));\n    //     })\n    // }, [inputState]);\n    const showStatusSearchResults = (event) => {\n        event.preventDefault();\n        let arr = [];\n        Object.keys(inputState).map(el => {\n            if (inputState[el]) {\n                arr.push(el === \"planned\" ? \"Запланировано\" : el === \"inProgress\" ? \"В работе\" : el === \"completed\" ? \"Завершено\" : el === \"canceled\" ? \"Отменено\" : null);\n            }\n            dispatch(changeStatus(arr));\n            dispatch(setActivePage(1));\n            props.close();\n        })\n    }\n\n    return (\n        <>\n        <div onClick={props.close} className=\"ModalStatus__bg\" />\n            <div className=\"ModalStatus\">\n                <div className=\"ModalStatus__header\">\n                    <p className=\"ModalStatus__header--text\">Показывать только:</p>\n                </div>\n                <div className=\"ModalStatus__content\">\n                    <form className=\"ModalStatus__form\" onSubmit={(event) => {showStatusSearchResults(event)}}>\n                        <label className=\"ModalStatus__label\">\n                            <input checked={inputState.planned} name=\"planned\" className=\"ModalStatus__input\" onChange={(event) => {inputChange(event)}} type=\"checkbox\" />\n                            <div  className=\"ModalStatus__label--icon\"/>\n                            <p className=\"ModalStatus__status ModalStatus__status--planned\">запланировано</p>\n                        </label>\n\n                        <label className=\"ModalStatus__label\">\n                            <input checked={inputState.inProgress} name=\"inProgress\" className=\"ModalStatus__input\" onChange={(event) => {inputChange(event)}} type=\"checkbox\" />\n                            <div  className=\"ModalStatus__label--icon\"/>\n                            <p className=\"ModalStatus__status ModalStatus__status--inProgress\">в работе</p>\n                        </label>\n\n                        <label className=\"ModalStatus__label\">\n                            <input checked={inputState.completed} name=\"completed\" className=\"ModalStatus__input\" onChange={(event) => {inputChange(event)}} type=\"checkbox\" />\n                            <div  className=\"ModalStatus__label--icon\"/>\n                            <p className=\"ModalStatus__status ModalStatus__status--completed\">завершено</p>\n                        </label>\n\n                        <label className=\"ModalStatus__label\">\n                            <input checked={inputState.canceled} name=\"canceled\" className=\"ModalStatus__input\" onChange={(event) => {inputChange(event)}} type=\"checkbox\" />\n                            <div  className=\"ModalStatus__label--icon\"/>\n                            <p className=\"ModalStatus__status ModalStatus__status--canceled\">отменено</p>\n                        </label>\n\n                        <ButtonGrey \n                            name=\"показать\"\n                        />\n                    </form>\n                </div>\n            </div>\n            </>\n    )\n}\n\n\nexport default ModalStatus;","D:\\IT\\JavaScript\\projects\\it_support\\src\\Components\\SearchResultsComponents\\ModalDepartment\\ModalDepartment.js",["263","264","265","266"],"import React, { useState, useEffect } from 'react';\nimport ButtonGrey from '../UI/ButtonGrey/ButtonGrey';\nimport './ModalDepartment.css';\nimport {changeDepartment, changeStatus, setActivePage} from \"../../../Store/ApplicationsReducer/applicationsActions\";\nimport {useDispatch, useSelector} from \"react-redux\";\n\n\nconst ModalDepartment = (props) => {\n    const dispatch = useDispatch();\n    const [inputState, setInputState] = useState({});\n\n    const departments = useSelector(state => state.company.departments);\n    const statusActiveFilters = useSelector(state => state.applications.data.filter.departament);\n    useEffect(() => {\n        let obj = {};\n        departments.map(el => {\n            if (statusActiveFilters.includes(el.code)) {\n                obj[el.name] = el.code;\n            }\n        })\n        setInputState(obj);\n    }, []);\n    const showDepartmentSearchResults = (event) => {\n        event.preventDefault();\n        let arr = [];\n        Object.keys(inputState).map(el => {\n            if (inputState[el]) {\n                arr.push(inputState[el]);\n            }\n        dispatch(changeDepartment(arr));\n        dispatch(setActivePage(1));\n        props.close();\n        });\n    }\n\n    const inputChange = (event, code) => {\n        const name = event.target.name;\n        if (!event.target.checked) {\n            setInputState(prevState => {\n                return {...prevState, [name]: null}\n            });\n        } else {\n            setInputState(prevState => {\n                return {...prevState, [name]: code}\n            });\n        }\n        console.log(inputState);\n    }\n    let allDepartments = null;\n    if (departments.length) {\n        allDepartments = departments.map(el => {\n           return   <label className=\"ModalDepartment__label\">\n                       <input checked={inputState[el.name]}  name={el.name} className=\"ModalDepartment__input\" onChange={(event) => {inputChange(event, el.code)}} type=\"checkbox\" />\n                       <div  className=\"ModalDepartment__label--icon\"/>\n                       <p className=\"ModalDepartment__department\">{el.name}</p>\n                   </label>\n        });\n    }\n\n    return (\n        <>\n        <div onClick={props.close} className=\"ModalDepartment__bg\" />\n            <div className=\"ModalDepartment\">\n                <div className=\"ModalDepartment__header\">\n                    <p className=\"ModalDepartment__header--text\">Показывать только:</p>\n                </div>\n                <div className=\"ModalDepartment__content\">\n                    <form className=\"ModalDepartment__form\" onSubmit={(event) => {showDepartmentSearchResults(event)}}>\n                        {allDepartments}\n                        <ButtonGrey \n                            name=\"показать\"\n                        />\n                    </form>\n                </div>\n            </div>\n            </>\n    )\n}\n\n\nexport default ModalDepartment;","D:\\IT\\JavaScript\\projects\\it_support\\src\\Components\\SearchResultsComponents\\NoResults\\NoResults.js",[],"D:\\IT\\JavaScript\\projects\\it_support\\src\\Components\\SearchResultsComponents\\ModalWorker\\ModalWorker.js",["267"],"import React, { useState, useEffect } from 'react';\nimport './ModalWorker.css';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {changeEmployee, setActivePage} from \"../../../Store/ApplicationsReducer/applicationsActions\";\n\n\nconst ModalWorker = (props) => {\n   const dispatch = useDispatch();\n   const [inputState, setInputState] = useState(localStorage.getItem(\"employeeFilterName\") || \"\");\n   const [showResults, setShowResults] = useState(true);\n\n   // введенные данные с каждым кликом отправляют запрос и получают данные из списка сотрудников компании\n    const inputChange = (event) => {\n        setInputState(event.target.value);\n        setShowResults(true);\n    }\n    const hideResults = () => {\n        setShowResults(false);\n    };\n    const getResultValue = (event, code) => {\n        localStorage.setItem('employeeFilterName', event.target.dataset.name);\n        dispatch(changeEmployee(code));\n        dispatch(setActivePage(1));\n        props.close();\n    }\n\n    const workers = useSelector(state => state.company.employees);\n    const [filtered, setFiltered] = useState([]);\n    let allWorkerSearchResults;\n    useEffect(() => {\n        setFiltered(workers.filter(el => el.name.includes(inputState)));\n    }, [inputState]);\n\n    if (filtered.length !== 0) {\n        allWorkerSearchResults = (<div className=\"ModalWorker__results\">\n            {filtered.map((el, i) => {\n                return <p data-name={el.name} key={i} onClick={(event) => {getResultValue(event, el.code)}} className=\"ModalWorker__resultsItem\">{el.name}</p>\n             })}\n        </div>\n        )}\n\n    return (\n        <>\n        <div onClick={props.close} className=\"ModalWorker__bg\" />\n            <div className=\"ModalWorker\">\n                <input value={inputState} onChange={(event) => {inputChange(event)}} className=\"ModalWorker__input\" type=\"text\" placeholder=\"Введите имя сотрудника\" />\n                <div className=\"ModalWorker__arrowBtn\" onClick={hideResults} />\n                {showResults ? allWorkerSearchResults : null}\n            </div>\n        </>\n    )\n}\n\n\nexport default ModalWorker;","D:\\IT\\JavaScript\\projects\\it_support\\src\\Components\\UserLoginPageComponents\\Button\\Button.js",[],"D:\\IT\\JavaScript\\projects\\it_support\\src\\Components\\SearchResultsComponents\\UI\\ButtonGrey\\ButtonGrey.js",[],"D:\\IT\\JavaScript\\projects\\it_support\\src\\Components\\SearchResultsComponents\\ModalPeriod\\ModalPeriod.js",["268","269","270","271","272","273"],"import React, {useState, useEffect} from 'react';\r\nimport './ModalPeriod.css';\r\n// import RedButton from \"../../ApplicationPageComponents/RedButton/RedButton\";\r\n// import 'react-calendar/dist/Calendar.css';\r\n\r\n\r\n\r\n// Import Datepicker\r\nimport moment from 'moment';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    inputFilterDateFrom, inputFilterDateTo, isFilterDateActive,\r\n    setFirstCalendarDay,\r\n    setSecondCalendarDay\r\n} from \"../../../Store/ApplicationsReducer/applicationsActions\";\r\nimport Calendar from \"react-calendar\";\r\n\r\n// Import Calendar\r\n// import  Calendar  from 'react-calendar';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst ModalPeriod = (props) => {\r\n    const dispatch = useDispatch();\r\n    // constructor(props, context) {\r\n    //     super(props, context);\r\n    //\r\n    //     this.state = {\r\n    //         date: moment().startOf('year')\r\n    //     }\r\n    // }\r\n    // const [state, setState] = useState({\r\n    //     date: moment().startOf('year')\r\n    // })\r\n\r\n    const [calendarsAmount, setCalendarAmount] = useState(1);\r\n    const [year, setYear] = useState(moment().year());\r\n    const [month, setMonth] = useState(moment().month());\r\n    const [day, setDay] = useState(moment().date());\r\n\r\n    const [period, setPeriod] = useState({\r\n        start: 'ДД/ММ/ГГ',\r\n        startOrigin: 'ДД/ММ/ГГ',\r\n        end: 'ДД/ММ/ГГ',\r\n        endOrigin: 'ДД/ММ/ГГ'\r\n    });\r\n\r\n    const [isModalMonth, setIsModalMonth] = useState(false);\r\n\r\n    const toggleModalMonth = () => {\r\n        setIsModalMonth(!isModalMonth);\r\n    }\r\n\r\n    const [isModalYear, setIsModalYear] = useState(false);\r\n\r\n    const toggleModalYear = () => {\r\n        setIsModalYear(!isModalYear);\r\n    }\r\n\r\n    const tableHead = (\r\n        <div class=\"CalendarOne__weekdays-block\">\r\n            <p class=\"CalendarOne__weekdays\">Понедельник</p>\r\n            <p class=\"CalendarOne__weekdays\">Вторник</p>\r\n            <p class=\"CalendarOne__weekdays\">Среда</p>\r\n            <p class=\"CalendarOne__weekdays\">Четверг</p>\r\n            <p class=\"CalendarOne__weekdays\">Пятница</p>\r\n            <p class=\"CalendarOne__weekdays\">Суббота</p>\r\n            <p class=\"CalendarOne__weekdays\">Воскресенье</p>\r\n        </div>\r\n    )\r\n    const months = [ \"Январь\", \"Февраль\", \"Март\", \"Апрель\", \"Май\", \"Июнь\",\r\n        \"Июль\", \"Август\", \"Сентябрь\", \"Октябрь\", \"Ноябрь\", \"Декабрь\" ];\r\n    // moment().set('month', 3);  // April\r\n    // moment().set('date', 1);\r\n    // alert(year + \" \" + month + \" \" + day)\r\n    // let d = new Date();\r\n    // d.setFullYear(2020);\r\n\r\n    let tableBody = [];\r\n    let firstDayOfTheMonth = moment().set('year', year).set('month', month).startOf('month').weekday();\r\n    // firstDayOfTheMonth.day() % 6 === 0 ? firstDayOfTheMonth.add(1, 'day').day(1) : firstDayOfTheMonth;\r\n    // alert(moment().set('month', month).daysInMonth())\r\n    // const pickTheDay = (event) => {\r\n    //     const el = document.getElementsByClassName(\"CalendarOne__column\");\r\n    //     alert(el);\r\n    // }\r\n    let day2 = 1\r\n    // for (let i = 0; i < moment().daysInMonth()/7 + 1; i++) {\r\n    //     let stringTd = \"\"\r\n    //     for (let j = 0; j < 7; j++) {\r\n    //         if ( i === 0 && j < firstDayOfTheMonth - 1) {\r\n    //             stringTd += `<td > </td>`;\r\n    //         } else {\r\n    //             if (moment().set('month', month).daysInMonth() >= day2) {\r\n    //                 stringTd += `<td class=\"CalendarOne__column\">${day2}</td>`;\r\n    //                 day2++;\r\n    //             }\r\n    //         }\r\n    //\r\n    //     }\r\n    //     tableBody.push(\r\n    //         <tr className=\"CalendarOne__row\" id={`Table${i}`} dangerouslySetInnerHTML={{__html: stringTd}}></tr>\r\n    //     )\r\n    // }\r\n\r\n    for (let i = 0; i < moment().daysInMonth()/7 + 1; i++) {\r\n        // let stringTd = \"\"\r\n        for (let j = 0; j < 7; j++) {\r\n            if ( i === 0 && j < firstDayOfTheMonth - 1) {\r\n                tableBody.push(null);\r\n            } else {\r\n                if (moment().set('month', month).daysInMonth() >= day2) {\r\n                    tableBody.push(day2);\r\n                    day2++;\r\n                }\r\n            }\r\n\r\n        }\r\n        // tableBody.push(\r\n        //     <tr className=\"CalendarOne__row\" id={`Table${i}`} dangerouslySetInnerHTML={{__html: stringTd}}></tr>\r\n        // )\r\n    }\r\n\r\n    const pickTheMonth = (i) => {\r\n        setMonth(i);\r\n        cancelSelection();\r\n        cancelStateOfSelection();\r\n        toggleModalMonth();\r\n    }\r\n\r\n    let allMonths = months.map((el, i) => {\r\n       return (<p onClick={() => {pickTheMonth(i)}} className={\"CalendarOne__month\"}>{el}</p>)\r\n    });\r\n\r\n    // получить возможные года\r\n    const years = [2019, 2020, 2021];\r\n\r\n    let allYears = years.map((el, i) => {\r\n       return (\r\n           <h3 onClick={() => {pickTheYear(i)}} className=\"ModalPeriod__year\">{el}</h3>\r\n       )\r\n    });\r\n    const pickTheYear = (i) => {\r\n        setYear(years[i]);\r\n        cancelSelection();\r\n        cancelStateOfSelection();\r\n        toggleModalYear();\r\n    }\r\n\r\n    // const [range, setRange] = useState({\r\n    //     first: 0,\r\n    //     second: 0\r\n    // })\r\n    const first = useSelector(state => state.applications.firstCalendarRangeDay);\r\n    const second = useSelector(state => state.applications.secondCalendarRangeDay);\r\n    // const first = 1;\r\n    // const second = 2;\r\nconsole.log(first + \"   \" + second);\r\n\r\n    useEffect(() => {\r\n        const item = document.getElementsByClassName('CalendarOne__column');\r\n        for (let i = 0; i < item.length; i++) {\r\n            if (item[i].textContent === first.toString()) {\r\n                item[i].style.color = 'white';\r\n                item[i].style.background = '#4FC6E0';\r\n                item[i].style.boxShadow = '0 0 0 1px #4FC6E0';\r\n                item[i].style.borderRadius = '23px 0 0 23px';\r\n                let formatMonth = month + 1;\r\n                let formatDay = first;\r\n                if (formatMonth < 10) {\r\n                    formatMonth = \"0\" + formatMonth;\r\n                }\r\n                if(formatDay < 10) {\r\n                    formatDay = \"0\" + formatDay;\r\n                }\r\n                setPeriod(prevState => {\r\n                    return {...prevState, startOrigin: `${year}-${formatMonth}-${formatDay}`}\r\n                })\r\n            }else  if (item[i].textContent === second.toString()) {\r\n                item[i].style.color = 'white';\r\n                item[i].style.background = '#4FC6E0';\r\n                item[i].style.boxShadow = '0 0 0 1px #4FC6E0';\r\n                item[i].style.borderRadius = '0 23px 23px 0';\r\n                let formatMonth = month + 1;\r\n                let formatDay = second;\r\n                if (formatMonth < 10) {\r\n                    formatMonth = \"0\" + formatMonth;\r\n                }\r\n                if(formatDay < 10) {\r\n                    formatDay = \"0\" + formatDay;\r\n                }\r\n                setPeriod(prevState => {\r\n                    return {...prevState, endOrigin: `${year}-${formatMonth}-${formatDay}`}\r\n                })\r\n            }\r\n            if (parseInt(item[i].textContent) > first && parseInt(item[i].textContent) < second) {\r\n                item[i].style.color = 'white';\r\n                item[i].style.background = '#4FC6E0';\r\n                item[i].style.boxShadow = '0 0 0 1px #4FC6E0';\r\n                item[i].style.borderRadius = '0';\r\n            }\r\n        }\r\n    }, [first, second]);\r\n\r\n    const pickTheDate = (event, el) => {\r\n        cancelSelection();\r\n        // event.target.style.color = 'white';\r\n        // event.target.style.background = '#4FC6E0';\r\n        console.log(\"EVENT TEXTCONTENT \", event.target.textContent)\r\n        if (event.target.textContent === first.toString() || event.target.textContent === second.toString()) {\r\n            event.target.style.color = '#4F4F4F';\r\n            event.target.style.background = 'white';\r\n            event.target.style.boxShadow = 'none';\r\n            cancelStateOfSelection();\r\n        }\r\n\r\n        // if (el === range.first) {\r\n        //     setRange(prevState => {\r\n        //         return {...prevState,\r\n        //             first: 0,\r\n        //             second: 0\r\n        //         }\r\n        //     });\r\n        // }\r\n        else {\r\n            if (first === 0) {\r\n                dispatch(setFirstCalendarDay(el));\r\n            }\r\n            else if (el < first) {\r\n                const temp = first\r\n                console.log(temp);\r\n                dispatch(setSecondCalendarDay(temp));\r\n                dispatch(setFirstCalendarDay(el));\r\n            } else {\r\n                dispatch(setSecondCalendarDay(el));\r\n            }\r\n            // for (let i = 0; i < item.length; i++) {\r\n            //     if (item[i].textContent === first.toString()) {\r\n            //         item[i].style.color = 'white';\r\n            //         item[i].style.background = '#4FC6E0';\r\n            //     }else  if (item[i].textContent === second.toString()) {\r\n            //         item[i].style.color = 'white';\r\n            //         item[i].style.background = '#4FC6E0';\r\n            //     }\r\n\r\n            // }\r\n\r\n        }\r\n    }\r\n    const oneCalendar = (\r\n        <div className=\"CalendarOne\">\r\n            <div className=\"CalendarOne__month-block\">\r\n                <p onClick={toggleModalMonth} className=\"CalendarOne__month\">{months[month]}</p> <div className=\"CalendarOne__arrow\" onClick={toggleModalMonth} />\r\n                {isModalMonth ? <div className={\"CalendarOne__month-modal\"}>{allMonths}</div> : null}\r\n            </div>\r\n            {tableHead}\r\n\r\n            <div className=\"CalendarOne__table\">\r\n                {tableBody.map(el => {\r\n                    return (\r\n                        <div onClick={(event) => {pickTheDate(event, el)}} class=\"CalendarOne__column\">{el}</div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    const cancelSelection = () => {\r\n        const item = document.getElementsByClassName('CalendarOne__column');\r\n        for (let i = 0; i < item.length; i++) {\r\n            item[i].style.color = '#4F4F4F';\r\n            item[i].style.background = 'white';\r\n            item[i].style.boxShadow = 'none';\r\n            item[i].style.borderRadius = 'none';\r\n        }\r\n\r\n    }\r\n    const cancelStateOfSelection = () => {\r\n        dispatch(setFirstCalendarDay(0));\r\n        dispatch(setSecondCalendarDay(0));\r\n        setPeriod({\r\n            start: 'ДД/ММ/ГГ',\r\n            startOrigin: 'ДД/ММ/ГГ',\r\n            end: 'ДД/ММ/ГГ',\r\n            endOrigin: 'ДД/ММ/ГГ'\r\n        })\r\n    }\r\n\r\n    const submitDates = () => {\r\n        let formatMonth = month + 1;\r\n        let formatDayFirst = first;\r\n        let formatDaySecond = second;\r\n        if (formatMonth < 10) {\r\n            formatMonth = \"0\" + formatMonth;\r\n        }\r\n        if(formatDayFirst < 10) {\r\n            formatDayFirst = \"0\" + formatDayFirst;\r\n        }\r\n        if(formatDaySecond < 10) {\r\n            formatDaySecond = \"0\" + formatDaySecond;\r\n        }\r\n        dispatch(inputFilterDateFrom(`${year}${formatMonth}${formatDayFirst}`));\r\n        dispatch(inputFilterDateTo(`${year}${formatMonth}${formatDaySecond}`));\r\n        dispatch(isFilterDateActive(true));\r\n        cancelSelection();\r\n        cancelStateOfSelection();\r\n        props.closeModal();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n\r\n            <div onClick={props.closeModal} className=\"ModalPeriod__bg\" />\r\n\r\n\r\n            <div className=\"ModalPeriod\">\r\n                <p className=\"ModalPeriod__textTopButton\">фильтры по дате доступны с 05 мая 2019 года</p>\r\n                <div className=\"ModalPeriod__header\">\r\n\r\n\r\n                    <div className=\"ModalPeriod__buttonsBlock\">\r\n                        <div onClick={() => {alert(\"Works\")}} className=\"ModalPeriod__btnDate ModalPeriod__btnDate--left\">Месяц</div>\r\n                        <div onClick={() => {alert(\"Works\")}} className=\"ModalPeriod__btnDate\">Полугодие</div>\r\n                        <div onClick={() => {alert(\"Works\")}} className=\"ModalPeriod__btnDate ModalPeriod__btnDate--right\">Год</div>\r\n                    </div>\r\n                    <div className=\"ModalPeriod__year-block\">\r\n                        <h3 onClick={toggleModalYear} className=\"ModalPeriod__year\">{year}</h3>\r\n                        <div className=\"ModalPeriod__year-arrow\" onClick={toggleModalYear} />\r\n                        {isModalYear ? <div className=\"ModalPeriod__year-modal\">{allYears}</div> : null}\r\n                    </div>\r\n                    <div className=\"ModalPeriod__chooseDateBlock\">\r\n                        <div className=\"ModalPeriod__inputDate\" >{period.startOrigin}</div>\r\n                        <p className=\"ModalPeriod__dash\">-</p>\r\n                        <div className=\"ModalPeriod__inputDate\" >{period.endOrigin}</div>\r\n                    </div>\r\n\r\n\r\n                    <button  className=\"RedButton--inCalendar\" onClick={submitDates}>Показать заявки</button>\r\n                </div>\r\n                {/*{oneCalendar}*/}\r\n    {/*///////////////////////*/}\r\n    {/*            <div>*/}\r\n    {/*                /!* Base calendar component *!/*/}\r\n    {/*                <Calendar*/}\r\n    {/*                    weekNumbers={true}*/}\r\n    {/*                    size={2}*/}\r\n    {/*                    startDate={state.date}*/}\r\n    {/*                    date={state.date}*/}\r\n    {/*                    endDate={state.date.clone().endOf('year')}*/}\r\n    {/*                    mods={*/}\r\n    {/*                        [*/}\r\n    {/*                            {*/}\r\n    {/*                                date: moment(),*/}\r\n    {/*                                classNames: ['current'],*/}\r\n    {/*                                component: ['day', 'month', 'week']*/}\r\n    {/*                            }*/}\r\n    {/*                        ]*/}\r\n    {/*                    }*/}\r\n\r\n    {/*                />*/}\r\n    {/*            </div>*/}\r\n    {/*            /////////////////////////////*/}\r\n                <div>\r\n                    <Calendar\r\n                        className={\"CalendarTest\"}\r\n                        selectRange={true}\r\n                        maxDate={new Date()}\r\n                        view ={\"month\"}\r\n                        // maxDetail={\"year\"}\r\n                        locale={\"ru-RU\"}\r\n                        // nextLabel={\"\"}\r\n                        // next2Label={\"\"}\r\n                        // prevLabel={\"\"}\r\n                        // prev2Label={\"\"}\r\n                        returnValue={\"range\"}\r\n                        showNavigation={true}\r\n                        showDoubleView={true}\r\n                        // minDate дата крайней последней заявки, чтобы ограничить выбор периода\r\n                        // tileClassName !!!!!! class important!!!\r\n                        tileClassName={\"CalendarTest2\"}\r\n                        // navigationAriaLabel={\"go up\"}\r\n                        onChange={() => {alert(\"Works calendar\")}}\r\n                        // activeStartDate={new Date()}\r\n                        // value={new Date()}\r\n                        // defaultValue={props.inputEndDateValue}\r\n                    />\r\n\r\n                </div>\r\n\r\n                {/*<input className=\"ModalPeriod__input\" onChange={props. } type={\"date\"}/>*/}\r\n                {/*<input className=\"ModalPeriod__input\" onChange={props.inputEndDateValue} type={\"date\"}/>*/}\r\n                {/*<button onClick={props.acceptDatePeriod}>Принять</button>*/}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ModalPeriod;",{"ruleId":"274","severity":1,"message":"275","line":10,"column":10,"nodeType":"276","messageId":"277","endLine":10,"endColumn":23},{"ruleId":"278","replacedBy":"279"},{"ruleId":"280","replacedBy":"281"},{"ruleId":"274","severity":1,"message":"282","line":3,"column":8,"nodeType":"276","messageId":"277","endLine":3,"endColumn":27},{"ruleId":"274","severity":1,"message":"283","line":23,"column":8,"nodeType":"276","messageId":"277","endLine":23,"endColumn":14},{"ruleId":"274","severity":1,"message":"284","line":8,"column":9,"nodeType":"276","messageId":"277","endLine":8,"endColumn":13},{"ruleId":"285","severity":1,"message":"286","line":56,"column":8,"nodeType":"287","endLine":56,"endColumn":18,"suggestions":"288"},{"ruleId":"285","severity":1,"message":"289","line":65,"column":8,"nodeType":"287","endLine":65,"endColumn":25,"suggestions":"290"},{"ruleId":"285","severity":1,"message":"291","line":193,"column":8,"nodeType":"287","endLine":193,"endColumn":20,"suggestions":"292"},{"ruleId":"285","severity":1,"message":"293","line":49,"column":8,"nodeType":"287","endLine":49,"endColumn":18,"suggestions":"294"},{"ruleId":"285","severity":1,"message":"295","line":356,"column":8,"nodeType":"287","endLine":356,"endColumn":20,"suggestions":"296"},{"ruleId":"285","severity":1,"message":"289","line":360,"column":8,"nodeType":"287","endLine":360,"endColumn":20,"suggestions":"297"},{"ruleId":"274","severity":1,"message":"298","line":1,"column":17,"nodeType":"276","messageId":"277","endLine":1,"endColumn":23},{"ruleId":"285","severity":1,"message":"289","line":20,"column":8,"nodeType":"287","endLine":20,"endColumn":12,"suggestions":"299"},{"ruleId":"285","severity":1,"message":"300","line":40,"column":8,"nodeType":"287","endLine":40,"endColumn":33,"suggestions":"301"},{"ruleId":"285","severity":1,"message":"286","line":47,"column":8,"nodeType":"287","endLine":47,"endColumn":18,"suggestions":"302"},{"ruleId":"274","severity":1,"message":"303","line":86,"column":16,"nodeType":"276","messageId":"277","endLine":86,"endColumn":25},{"ruleId":"274","severity":1,"message":"303","line":121,"column":16,"nodeType":"276","messageId":"277","endLine":121,"endColumn":25},{"ruleId":"285","severity":1,"message":"304","line":62,"column":12,"nodeType":"287","endLine":62,"endColumn":14,"suggestions":"305"},{"ruleId":"285","severity":1,"message":"304","line":70,"column":12,"nodeType":"287","endLine":70,"endColumn":14,"suggestions":"306"},{"ruleId":"307","severity":1,"message":"308","line":10,"column":89,"nodeType":"309","endLine":10,"endColumn":131},{"ruleId":"310","severity":1,"message":"311","line":24,"column":21,"nodeType":"309","endLine":24,"endColumn":92},{"ruleId":"307","severity":1,"message":"308","line":24,"column":21,"nodeType":"309","endLine":24,"endColumn":92},{"ruleId":"310","severity":1,"message":"311","line":25,"column":21,"nodeType":"309","endLine":25,"endColumn":91},{"ruleId":"307","severity":1,"message":"308","line":25,"column":21,"nodeType":"309","endLine":25,"endColumn":91},{"ruleId":"310","severity":1,"message":"311","line":26,"column":21,"nodeType":"309","endLine":26,"endColumn":91},{"ruleId":"307","severity":1,"message":"308","line":26,"column":21,"nodeType":"309","endLine":26,"endColumn":91},{"ruleId":"310","severity":1,"message":"311","line":27,"column":21,"nodeType":"309","endLine":27,"endColumn":90},{"ruleId":"307","severity":1,"message":"308","line":27,"column":21,"nodeType":"309","endLine":27,"endColumn":90},{"ruleId":"274","severity":1,"message":"284","line":3,"column":9,"nodeType":"276","messageId":"277","endLine":3,"endColumn":13},{"ruleId":"274","severity":1,"message":"312","line":8,"column":11,"nodeType":"276","messageId":"277","endLine":8,"endColumn":19},{"ruleId":"274","severity":1,"message":"313","line":20,"column":8,"nodeType":"276","messageId":"277","endLine":20,"endColumn":17},{"ruleId":"274","severity":1,"message":"314","line":11,"column":19,"nodeType":"276","messageId":"277","endLine":11,"endColumn":25},{"ruleId":"274","severity":1,"message":"315","line":2,"column":23,"nodeType":"276","messageId":"277","endLine":2,"endColumn":34},{"ruleId":"274","severity":1,"message":"316","line":6,"column":9,"nodeType":"276","messageId":"277","endLine":6,"endColumn":41},{"ruleId":"274","severity":1,"message":"312","line":13,"column":11,"nodeType":"276","messageId":"277","endLine":13,"endColumn":19},{"ruleId":"274","severity":1,"message":"315","line":7,"column":22,"nodeType":"276","messageId":"277","endLine":7,"endColumn":33},{"ruleId":"274","severity":1,"message":"317","line":6,"column":11,"nodeType":"276","messageId":"277","endLine":6,"endColumn":13},{"ruleId":"274","severity":1,"message":"318","line":8,"column":11,"nodeType":"276","messageId":"277","endLine":8,"endColumn":17},{"ruleId":"274","severity":1,"message":"317","line":9,"column":11,"nodeType":"276","messageId":"277","endLine":9,"endColumn":13},{"ruleId":"285","severity":1,"message":"319","line":28,"column":21,"nodeType":"320","endLine":43,"endColumn":21},{"ruleId":"285","severity":1,"message":"321","line":39,"column":34,"nodeType":"322","endLine":39,"endColumn":38},{"ruleId":"274","severity":1,"message":"284","line":9,"column":9,"nodeType":"276","messageId":"277","endLine":9,"endColumn":13},{"ruleId":"285","severity":1,"message":"289","line":42,"column":8,"nodeType":"287","endLine":42,"endColumn":14,"suggestions":"323"},{"ruleId":"285","severity":1,"message":"289","line":57,"column":8,"nodeType":"287","endLine":57,"endColumn":17,"suggestions":"324"},{"ruleId":"325","severity":1,"message":"326","line":75,"column":42,"nodeType":"327","messageId":"328","endLine":75,"endColumn":44},{"ruleId":"285","severity":1,"message":"329","line":88,"column":8,"nodeType":"287","endLine":88,"endColumn":17,"suggestions":"330"},{"ruleId":"285","severity":1,"message":"331","line":192,"column":8,"nodeType":"287","endLine":192,"endColumn":21,"suggestions":"332"},{"ruleId":"310","severity":1,"message":"311","line":12,"column":17,"nodeType":"309","endLine":12,"endColumn":94},{"ruleId":"310","severity":1,"message":"311","line":13,"column":17,"nodeType":"309","endLine":13,"endColumn":92},{"ruleId":"310","severity":1,"message":"311","line":14,"column":17,"nodeType":"309","endLine":14,"endColumn":92},{"ruleId":"310","severity":1,"message":"311","line":15,"column":17,"nodeType":"309","endLine":15,"endColumn":90},{"ruleId":"285","severity":1,"message":"333","line":19,"column":8,"nodeType":"287","endLine":19,"endColumn":10,"suggestions":"334"},{"ruleId":"325","severity":1,"message":"326","line":52,"column":40,"nodeType":"327","messageId":"328","endLine":52,"endColumn":42},{"ruleId":"274","severity":1,"message":"335","line":4,"column":27,"nodeType":"276","messageId":"277","endLine":4,"endColumn":39},{"ruleId":"325","severity":1,"message":"326","line":16,"column":28,"nodeType":"327","messageId":"328","endLine":16,"endColumn":30},{"ruleId":"285","severity":1,"message":"336","line":22,"column":8,"nodeType":"287","endLine":22,"endColumn":10,"suggestions":"337"},{"ruleId":"325","severity":1,"message":"326","line":26,"column":40,"nodeType":"327","messageId":"328","endLine":26,"endColumn":42},{"ruleId":"285","severity":1,"message":"338","line":32,"column":8,"nodeType":"287","endLine":32,"endColumn":20,"suggestions":"339"},{"ruleId":"274","severity":1,"message":"340","line":40,"column":12,"nodeType":"276","messageId":"277","endLine":40,"endColumn":27},{"ruleId":"274","severity":1,"message":"341","line":40,"column":29,"nodeType":"276","messageId":"277","endLine":40,"endColumn":46},{"ruleId":"274","severity":1,"message":"342","line":43,"column":12,"nodeType":"276","messageId":"277","endLine":43,"endColumn":15},{"ruleId":"274","severity":1,"message":"343","line":43,"column":17,"nodeType":"276","messageId":"277","endLine":43,"endColumn":23},{"ruleId":"285","severity":1,"message":"344","line":207,"column":8,"nodeType":"287","endLine":207,"endColumn":23,"suggestions":"345"},{"ruleId":"274","severity":1,"message":"346","line":254,"column":11,"nodeType":"276","messageId":"277","endLine":254,"endColumn":22},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","no-native-reassign",["347"],"no-negated-in-lhs",["348"],"'FullApplicationInfo' is defined but never used.","'moment' is defined but never used.","'push' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["349"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["350"],"React Hook useEffect has a missing dependency: 'isDisabled'. Either include it or remove the dependency array.",["351"],"React Hook useEffect has a missing dependency: 'hash'. Either include it or remove the dependency array.",["352"],"React Hook useEffect has a missing dependency: 'colorActivePage'. Either include it or remove the dependency array.",["353"],["354"],"'useRef' is defined but never used.",["355"],"React Hook useEffect has missing dependencies: 'dispatch' and 'id'. Either include them or remove the dependency array.",["356"],["357"],"'fieldName' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'intercept'. Either include it or remove the dependency array.",["358"],["359"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","'dispatch' is assigned a value but never used.","'axiosTest' is defined but never used.","'saveId' is defined but never used.","'useSelector' is defined but never used.","'addDetailsToApplicationInProcess' is defined but never used.","'id' is assigned a value but never used.","'status' is assigned a value but never used.","Assignments to the 'timer' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","Assignments to the 'timerDuration' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal",["360"],["361"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'showFilters'. Either include it or remove the dependency array.",["362"],"React Hook useEffect has missing dependencies: 'dispatch' and 'indexForModal'. Either include them or remove the dependency array.",["363"],"React Hook useEffect has a missing dependency: 'statusActiveFilters'. Either include it or remove the dependency array.",["364"],"'changeStatus' is defined but never used.","React Hook useEffect has missing dependencies: 'departments' and 'statusActiveFilters'. Either include them or remove the dependency array.",["365"],"React Hook useEffect has a missing dependency: 'workers'. Either include it or remove the dependency array.",["366"],"'calendarsAmount' is assigned a value but never used.","'setCalendarAmount' is assigned a value but never used.","'day' is assigned a value but never used.","'setDay' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'month' and 'year'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setPeriod' needs the current value of 'year'.",["367"],"'oneCalendar' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"368","fix":"369"},{"desc":"370","fix":"371"},{"desc":"372","fix":"373"},{"desc":"374","fix":"375"},{"desc":"376","fix":"377"},{"desc":"378","fix":"379"},{"desc":"368","fix":"380"},{"desc":"381","fix":"382"},{"desc":"368","fix":"383"},{"desc":"384","fix":"385"},{"desc":"384","fix":"386"},{"desc":"387","fix":"388"},{"desc":"389","fix":"390"},{"desc":"391","fix":"392"},{"desc":"393","fix":"394"},{"desc":"395","fix":"396"},{"desc":"397","fix":"398"},{"desc":"399","fix":"400"},{"desc":"401","fix":"402"},"Update the dependencies array to be: [dispatch, id]",{"range":"403","text":"404"},"Update the dependencies array to be: [applicationHash, dispatch]",{"range":"405","text":"406"},"Update the dependencies array to be: [inputState, isDisabled]",{"range":"407","text":"408"},"Update the dependencies array to be: [dispatch, hash]",{"range":"409","text":"410"},"Update the dependencies array to be: [activePage, colorActivePage]",{"range":"411","text":"412"},"Update the dependencies array to be: [activePage, dispatch]",{"range":"413","text":"414"},{"range":"415","text":"404"},"Update the dependencies array to be: [dispatch, id, sms1, sms2, sms3, sms4]",{"range":"416","text":"417"},{"range":"418","text":"404"},"Update the dependencies array to be: [intercept]",{"range":"419","text":"420"},{"range":"421","text":"420"},"Update the dependencies array to be: [data, dispatch]",{"range":"422","text":"423"},"Update the dependencies array to be: [company, dispatch]",{"range":"424","text":"425"},"Update the dependencies array to be: [filters, showFilters]",{"range":"426","text":"427"},"Update the dependencies array to be: [currentPage, dispatch, indexForModal]",{"range":"428","text":"429"},"Update the dependencies array to be: [statusActiveFilters]",{"range":"430","text":"431"},"Update the dependencies array to be: [departments, statusActiveFilters]",{"range":"432","text":"433"},"Update the dependencies array to be: [inputState, workers]",{"range":"434","text":"435"},"Update the dependencies array to be: [first, month, second, year]",{"range":"436","text":"437"},[2644,2654],"[dispatch, id]",[2992,3009],"[applicationHash, dispatch]",[6625,6637],"[inputState, isDisabled]",[2314,2324],"[dispatch, hash]",[14439,14451],"[activePage, colorActivePage]",[14543,14555],"[activePage, dispatch]",[973,977],[1642,1667],"[dispatch, id, sms1, sms2, sms3, sms4]",[1794,1804],[1778,1780],"[intercept]",[2017,2019],[1457,1463],"[data, dispatch]",[1906,1915],"[company, dispatch]",[3549,3558],"[filters, showFilters]",[7797,7810],"[currentPage, dispatch, indexForModal]",[781,783],"[statusActiveFilters]",[844,846],"[departments, statusActiveFilters]",[1237,1249],"[inputState, workers]",[7416,7431],"[first, month, second, year]"]